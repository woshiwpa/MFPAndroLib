<?xml version="1.0" encoding="utf-8"?>
<resources>
    <string name="app_name">MFP Android Lib Tester</string>
    <string name="loading_config_file">Loading config file ...</string>
    <string name="menu_run_again">Run again</string>
    <string name="please_wait">Please wait</string>
    <string name="menu_help">Help</string>
    <string name="x_help_info">X is the name of to-solve or to-plot variable x or part of name of other to-solve or to-plot variables like x1, xy, xx etc.</string>
    <string name="y_help_info">Y is the name of to-solve or to-plot variable y or part of name of other to-solve or to-plot variables like y3, xy, yyyy etc.</string>
    <string name="z_help_info">Z is the name of to-solve or to-plot variable z or part of name of other to-solve or to-plot variables like z2, zx, zzz etc.</string>
    <string name="u_help_info">U is the name of to-solve or to-plot variable u or part of name of other to-solve or to-plot variables like u1, uy, uu etc.</string>
    <string name="v_help_info">V is the name of to-solve or to-plot variable v or part of name of other to-solve or to-plot variables like v3, xv, vvvv etc.</string>
    <string name="t_help_info">T is the name of to-solve or to-plot variable t or part of name of other to-solve or to-plot variables like t2, tx, ttt etc.</string>
    <string name="r_help_info">R is the name of to-solve or to-plot variable r (usually used to plot polar graphs) or part of name of other to-solve or to-plot variables like r2, rx, rrr etc.</string>
    <string name="theta_help_info">θ is the name of to-solve or to-plot variable θ or part of name of other to-solve or to-plot variables like θ2. Note that if plot variable θ and another variable, i.e. 2D chart, a polar graph will be generated.</string>
    <string name="assign_help_info">Assign operator which assign a value to a variable, e.g. x = 3 + 4 assigns 7 to variable x.</string>
    <string name="equal_help_info">Equal sign which means left part has the same value as right part. For example, x + 1 == 7 + 3 means x + 1 has the same value as 7 + 3 (i.e. 10). Then x can be solved which is 9.</string>
    <string name="parenthesis_help_info">Left parenthesis. Expression part inside a pair of parentheses should be calculated first. For instance, x * (y + 3).</string>
    <string name="closeparenthesis_help_info">Right parenthesis. Expression part inside a pair of parentheses should be calculated first. For instance, x * (y + 3).</string>
    <string name="squarebracket_help_info">Square bracket which starts an array. For example, [[1,2,3],[4,5,6]] is a 2*3 matrix whose first line includes elements 1, 2 and 3 and second line includes elements 4, 5 and 6.</string>
    <string name="closesquarebracket_help_info">Close square bracket which ends an array. For example, [[1,2,3],[4,5,6]] is a 2*3 matrix whose first line includes elements 1, 2 and 3 and second line includes elements 4, 5 and 6.</string>
    <string name="comma_help_info">Comma character which seperates individual elements in an array. For example, [2,3,4,5] has four elements seperated by commas.</string>
    <string name="plus_help_info">Plus sign (support complex number, matrix and string) or positive sign.</string>
    <string name="minus_help_info">Minus sign (support complex number and matrix) or negative sign.</string>
    <string name="multiplication_help_info">Multiplication (support complex number and matrix).</string>
    <string name="division_help_info">Division (support complex number and matrix).</string>
    <string name="leftdivision_help_info">Left division (mainly for matrix to calculator x from Ax=b (i.e. x = A\\b), note that first operand is divisor, do the same operation to division if divisor is not a matrix).</string>
    <string name="power_help_info">Power. Note that both the first and the second operands can be complex number.</string>
    <string name="exclaimation_help_info">Not sign if left unary operator or factorial sign if right unary operator. The operand should be non-negative and will be converted to an integer.</string>
    <string name="transpose_help_info">2D matrix transpose, if operand is a 1D vector, convert it to a 2D matrix, if operand is not an array, return operand itself.</string>
    <string name="doublequote_help_info">Double-quote character which identifies the range of a string.</string>
    <string name="percentage_help_info">Percentage. For example, 403.77% = 4.0377.</string>
    <string name="bit_and_help_info">Bit wise and, which only accepts non-negative integer operands.</string>
    <string name="bit_or_help_info">Bit wise or, which only accepts non-negative integer operands.</string>
    <string name="bit_xor_help_info">Bit wise xor, which only accepts non-negative integer operands.</string>
    <string name="bit_not_help_info">Bit wise not, which only accepts non-negative integer operand.</string>
    <string name="image_i_help_info">Image unit for complex values.</string>
    <string name="pi_constant_help_info">The constant value of PI.</string>
    <string name="e_constant_help_info">The constant value of e. Note that e is also used in scientific notation, e.g. 1.23e-002.</string>
    <string name="null_constant_help_info">Null value.</string>
    <string name="true_constant_help_info">Boolean true value.</string>
    <string name="false_constant_help_info">Boolean false value.</string>
    <string name="inf_constant_help_info">Infinite value.</string>
    <string name="infi_constant_help_info">Infinite image value.</string>
    <string name="nan_constant_help_info">Indefinite value, like 0 divided by 0.</string>
    <string name="nani_constant_help_info">Indefinite image value.</string>
    <string name="hex_oct_bin_initial_help_info">0x is the initial of a hexadecimal number; e.g. 0xFA36.BCEE, 0b is the initial of a binary number, e.g. 0b0011; and 0 is the initial of an octal number, e.g. 0376.774.</string>
    <string name="no_quick_help_info">No quick help information for </string>
    <string name="cmd_line_title">Command line</string>
    <string name="command_prompt">$&gt;</string>
    <string name="loading_user_defined_libs">Loading user_defined libraries ...</string>
    <string name="press_back_again_to_exit">Press back key again to exit!</string>
    <string name="help">Help</string>
    <string name="cmd_line_welcome_message">Please input an expression or help followed by a function name, then press enter.</string>
    <string name="command_finished">Command running has finished. Please press back-key to exit.</string>
</resources>
