
citingspace test_cs_reference
using citingspace ::__sin_test__
function test_cs_reference()
	print("\nintegrate(\"cos(x)\", \"x\") = ")
	try
		print(integrate("cos(x)","x"))
	catch
		print("Exception")
	endtry
	print("\nderivative(\"cos(x)\", \"x\") = ")
	try
		print(derivative("cos(x)","x"))
	catch
		print("Exception")
	endtry
	print("\nintegrate(\"trigon::cos(x)\", \"x\") = ")
	try
		print(integrate("trigon::cos(x)","x"))
	catch
		print("Exception")
	endtry
	print("\nderivative(\"trigon::cos(x)\", \"x\") = ")
	try
		print(derivative("trigon::cos(x)","x"))
	catch
		print("Exception")
	endtry
	print("\nintegrate(\"cos(x)\", \"x\", 0, 5) = " + integrate("cos(x)", "x", 0, 5))
	print("\nintegrate(\"trigon::cos(x)\", \"x\", 0, 5) = " + integrate("trigon::cos(x)", "x", 0, 5))
	print("\nderivative(\"cos(x)\", \"x\", 3, 1) = " + derivative("cos(x)", "x", 3, 1))
	print("\nderivative(\"trigon::cos(x)\", \"x\", 3, 1) = " + derivative("trigon::cos(x)", "x", 3, 1))
	print("\nevaluate(\"cos(x)\", \"x\", 3) = " + evaluate("cos(x)", "x", 3))
	print("\nevaluate(\"trigon::cos(x)\", \"x\", 3) = " + evaluate("trigon::cos(x)", "x", 3))
	print("\ncos(3) = " + cos(3))
	print("\ntrigon::cos(3) = " + trigon::cos(3))
	
	print("\n")
	::__ABCDE__ :: Abcde ::kgb::test_usecs_in_ReturnIfElse(1)
	__ABCDE__ :: Abcde ::kgb::Test_useCS_in_Loops(-1)
	using citingspace ::__ABCDE__ :: Abcde ::kgB
	Test_useCS_in_Loops(0)
	using citingspace ::__ABCDE__ :: Abcde 
	kgb :: Test_useCS_in_Loops(1)
	
	Test_useCS_in_Select(4)
	Test_useCS_in_Select(2)
	Test_useCS_in_Select(3)
	Test_useCS_in_Select(1)
	
	// test functions with grammar errors
	testhelpblockmain()
	testexceptionthrowmain()
	testincompletemain()
	testselectcasegap()
	testincompleteifmain()
	try
		testSelectCaseRef(5)
	catch
		print("Caught exception for testSelectCaseRef(5)\n")
	endtry
	testSelectCaseRef(7)
	testSelectCaseRef(205)
	try
		testForWhileTryRef()
	catch
		print("testForWhileTryRef()'s exception is caught by me\n")
	endtry
	testNoReturn(2,3)
	testNoReturn(4,5)
	testForCatch()
	print("\n::aaaa1::aaaa2 :: toRad(1) = ")
	print(::aaaa1::aaaa2 :: toRad(1) + "\n")
	print("\n::bbbb1::bbbb2 :: toRad(1) = ")
	print(::bbbb1::bbbb2 :: toRad(1) + "\n")
endf

function test_plot_cs_reference()
	print("\nNow run plot_expressions(\"\", \"cos(x)\", -20, 20, 0, \"cos(x)\")\n")
	plot_expressions("", "__sin_test__::cos(x)", -20, 20, 0, "cos(x)")
	print("\nNow run plot_expressions(\"\", \"trigon::cos(x)\", -20, 20, 0, \"trigon::cos(x)\")\n")
	plot_expressions("", "trigon::cos(x)", -20, 20, 0, "trigon::cos(x)")

	print("\nNow run plot_exprs(\"cos(x)\")\n")
	plot_exprs("cos(x)")
	print("\nNow run plot_exprs(\"trigon::cos(x)\")\n")
	plot_exprs("trigon::cos(x)")
	
	print("\nNow run plot_expressions(\"\", \"cos(x+y)\", -20, 20, 0, \"cos(x + y)\")\n")
	plot_expressions("", "__sin_test__::cos(x+y)", -20, 20, 0, "cos(x+y)")
	print("\nNow run plot_expressions(\"\", \"trigon::cos(x+y)\", -20, 20, 0, \"trigon::cos(x + y)\")\n")
	plot_expressions("", "trigon::cos(x+y)", -20, 20, 0, "trigon::cos(x+y)")
	
	print("\nNow run plot_2d_curves for citing space tests\n")
	using citingspace __sqrt_test__
	plot_2d_curves("chart 1","test csb sqrt","x","y","black","true","curve 1","blue","circle",1,"red","solid",1,"t", 0,10,0.1, "csb ::  sqrt (t)","log_exp :: sqrt(t)")
	
	print("\nNow run plot_3d_surfaces for citing space tests\n")
	plot_3d_surfaces("chart 1","test csa sqrt","x","y","z","cv1",false,"red","red",null,"cyan","cyan",null,"u",1,10,1,"v",2,19,1,"math:: log_exp :: sqrt(u)","csb ::  sqrt (v)","sqrt(u/v)")


endf

endcs

function derivative_reg_test()
	variable toDeri, var = "x"

	variable toderis = ["tan(1/x)", "cos(1/x)", "sin(1/-x)", "log(x)", "x/log(x)", "log(1/x)*x", "log(-x)/x"]

	for variable idx = 0 to 6 step 1
	toderi = toderis[idx]

		print("\nderi_ridders(\"" + toderi + "\", \"" + var + "\", 0.1, 0) = ")
		print(deri_ridders(toderi, var, 0.1, 0))

		print("\nderi_ridders(\"" + toderi + "\", \"" + var + "\", 0.0001, 0) = ")
		print(deri_ridders(toderi, var, 0.0001, 0))

		print("\nderi_ridders(\"" + toderi + "\", \"" + var + "\", 0.000333, 0) = ")
		print(deri_ridders(toderi, var, 0.000333, 0))

		print("\nevaluate(\"" + toderi + "\", \"" + var + "\", 0.1) = ")
		print(evaluate(toderi, var, 0.1))

		print("\nevaluate(\"" + toderi + "\", \"" + var + "\", 0.0001) = ")
		print(evaluate(toderi, var, 0.0001))

		print("\nevaluate(\"" + toderi + "\", \"" + var + "\", 0.000333) = ")
		print(evaluate(toderi, var, 0.000333))

		print("\nderi_ridders(\"" + toderi + "\", \"" + var + "\", 0.1, 1) = ")
		print(deri_ridders(toderi, var, 0.1, 1))

		print("\nderi_ridders(\"" + toderi + "\", \"" + var + "\", 0.0001, 1) = ")
		print(deri_ridders(toderi, var, 0.0001, 1))

		print("\nderi_ridders(\"" + toderi + "\", \"" + var + "\", 0.000333, 1) = ")
		print(deri_ridders(toderi, var, 0.000333, 1))

		print("\nderivative(\"" + toderi + "\", \"" + var + "\", 0.1, true) = ")
		print(derivative(toderi, var, 0.1, true))

		print("\nderivative(\"" + toderi + "\", \"" + var + "\", 0.0001, true) = ")
		print(derivative(toderi, var, 0.0001, true))

		print("\nderivative(\"" + toderi + "\", \"" + var + "\", 0.000333, true) = ")
		print(derivative(toderi, var, 0.000333, true))

		print("\nderi_ridders(\"" + toderi + "\", \"" + var + "\", 0.1, 2) = ")
		print(deri_ridders(toderi, var, 0.1, 2))

		print("\nderi_ridders(\"" + toderi + "\", \"" + var + "\", 0.0001, 2) = ")
		print(deri_ridders(toderi, var, 0.0001, 2))

		print("\nderi_ridders(\"" + toderi + "\", \"" + var + "\", 0.000333, 2) = ")
		print(deri_ridders(toderi, var, 0.000333, 2))

		print("\nderivative(derivative(\"" + toderi + "\", \"" + var + "\"), \"" + var + "\", 0.1, true) = ")
		print(derivative(derivative(toderi, var), var, 0.1, true))

		print("\nderivative(derivative(\"" + toderi + "\", \"" + var + "\"), \"" + var + "\", 0.0001, true) = ")
		print(derivative(derivative(toderi, var), var, 0.0001, true))

		print("\nderivative(derivative(\"" + toderi + "\", \"" + var + "\"), \"" + var + "\", 0.000333, true) = ")
		print(derivative(derivative(toderi, var), var, 0.000333, true))

		print("\nderi_ridders(\"" + toderi + "\", \"" + var + "\", 0.1, 3) = ")
		print(deri_ridders(toderi, var, 0.1, 3))

		print("\nderi_ridders(\"" + toderi + "\", \"" + var + "\", 0.0001, 3) = ")
		print(deri_ridders(toderi, var, 0.0001, 3))

		print("\nderi_ridders(\"" + toderi + "\", \"" + var + "\", 0.000333, 3) = ")
		print(deri_ridders(toderi, var, 0.000333, 3))

		print("\nderivative(derivative(derivative(\"" + toderi + "\", \"" + var + "\"), \"" + var + "\"), \"" + var + "\", 0.1, true) = ")
		print(derivative(derivative(derivative(toderi, var), var), var, 0.1, true))

		print("\nderivative(derivative(derivative(\"" + toderi + "\", \"" + var + "\"), \"" + var + "\"), \"" + var + "\", 0.0001, true) = ")
		print(derivative(derivative(derivative(toderi, var), var), var, 0.0001, true))

		print("\nderivative(derivative(derivative(\"" + toderi + "\", \"" + var + "\"), \"" + var + "\"), \"" + var + "\", 0.000333, true) = ")
		print(derivative(derivative(derivative(toderi, var), var), var, 0.000333, true))

	next

	toderi = "log(x)"
	print("\nderi_ridders(\"" + toderi + "\", \"" + var + "\", 0.1, 0) = ")
	print(deri_ridders(toderi, var, 0.1, 0))

	toderi = "log(x)"
	print("\nderi_ridders(\"" + toderi + "\", \"" + var + "\", 0.0001, 0) = ")
	print(deri_ridders(toderi, var, 0.0001, 0))
	
	toderi = "x/log(x)"
	print("\nderi_ridders(\"" + toderi + "\", \"" + var + "\", 0.1, 1) = ")
	print(deri_ridders(toderi, var, 0.1, 1))

	toderi = "x/log(x)"
	print("\nderi_ridders(\"" + toderi + "\", \"" + var + "\", 0.0001, 1) = ")
	print(deri_ridders(toderi, var, 0.0001, 1))
	
	toderi = "log(x**2)"
	print("\nderi_ridders(\"" + toderi + "\", \"" + var + "\", 0.1, 1) = ")
	print(deri_ridders(toderi, var, 0.1, 1))

	toderi = "log(x**2)"
	print("\nderi_ridders(\"" + toderi + "\", \"" + var + "\", 0.0001, 1) = ")
	print(deri_ridders(toderi, var, 0.0001, 1))
	
	toderi = "log(x)/x"
	print("\nderi_ridders(\"" + toderi + "\", \"" + var + "\", 0.1, 2) = ")
	print(deri_ridders(toderi, var, 0.1, 2))

	toderi = "log(x)/x"
	print("\nderi_ridders(\"" + toderi + "\", \"" + var + "\", 0.0001, 2) = ")
	print(deri_ridders(toderi, var, 0.0001, 2))
	
	toderi = "log(1/x)"
	print("\nderi_ridders(\"" + toderi + "\", \"" + var + "\", 0.1, 3) = ")
	print(deri_ridders(toderi, var, 0.1, 3))

	toderi = "log(1/x)"
	print("\nderi_ridders(\"" + toderi + "\", \"" + var + "\", 0.0001, 3) = ")
	print(deri_ridders(toderi, var, 0.0001, 3))
	
	toderi = "sin(1/x)"
	print("\nderi_ridders(\"" + toderi + "\", \"" + var + "\", 0, 1) = ")
	try
		print(deri_ridders(toderi, var, 0, 1))
	catch
		print("Exception")
	endtry
	toderi = "cos(1/x)"
	print("\nderi_ridders(\"" + toderi + "\", \"" + var + "\", 0, 1) = ")
	try
		print(deri_ridders(toderi, var, 0, 1))
	catch
		print("Exception")
	endtry
	toderi = "tan(1/x)"
	print("\nderi_ridders(\"" + toderi + "\", \"" + var + "\", 0, 1) = ")
	try
		print(deri_ridders(toderi, var, 0, 1))
	catch
		print("Exception")
	endtry
	toderi = "sin(1/x)"
	print("\nderivative(\"" + toderi + "\", \"" + var + "\", 0, true) = ")
	try
		print(derivative(toderi, var, 0, true))
	catch
		print("Exception")
	endtry
	toderi = "cos(1/x)"
	print("\nderivative(\"" + toderi + "\", \"" + var + "\", 0, true) = ")
	try
		print(derivative(toderi, var, 0, true))
	catch
		print("Exception")
	endtry
	toderi = "tan(1/x)"
	print("\nderivative(\"" + toderi + "\", \"" + var + "\", 0, true) = ")
	try
		print(derivative(toderi, var, 0, true))
	catch
		print("Exception")
	endtry
	toderi = "sin(1/x)"
	print("\nderi_ridders(\"" + toderi + "\", \"" + var + "\", 0, 2) = ")
	try
		print(deri_ridders(toderi, var, 0, 2))
	catch
		print("Exception")
	endtry
	toderi = "cos(1/x)"
	print("\nderi_ridders(\"" + toderi + "\", \"" + var + "\", 0, 2) = ")
	try
		print(deri_ridders(toderi, var, 0, 2))
	catch
		print("Exception")
	endtry
	toderi = "tan(1/x)"
	print("\nderi_ridders(\"" + toderi + "\", \"" + var + "\", 0, 2) = ")
	try
		print(deri_ridders(toderi, var, 0, 2))
	catch
		print("Exception")
	endtry
	toderi = "sin(1/x)"
	print("\nderi_ridders(\"" + toderi + "\", \"" + var + "\", 0, 3) = ")
	try
		print(deri_ridders(toderi, var, 0, 3))
	catch
		print("Exception")
	endtry
	toderi = "cos(1/x)"
	print("\nderi_ridders(\"" + toderi + "\", \"" + var + "\", 0, 3) = ")
	try
		print(deri_ridders(toderi, var, 0, 3))
	catch
		print("Exception")
	endtry
	toderi = "tan(1/x)"
	print("\nderi_ridders(\"" + toderi + "\", \"" + var + "\", 0, 3) = ")
	try
		print(deri_ridders(toderi, var, 0, 3))
	catch
		print("Exception")
	endtry
	
	toderi = "tan(cosh(x+2*x+x**2))"
	var = "x"
	print("\nderi_ridders(\"" + toderi + "\", \"" + var + "\", 0.7629, 3) = ")
	print(deri_ridders(toderi, var, 0.7629, 3))

	print("\nderivative(derivative(derivative(\"" + toderi + "\", \"" + var + "\"), \"" + var + "\"), \"" + var + "\", 0.7629, true) = ")
	print(derivative(derivative(derivative(toderi, var), var), var, 0.7629, true))

	toderi = "tanh(asin(1/(x+2*x+x**2)))"
	var = "x"
	print("\nderi_ridders(\"" + toderi + "\", \"" + var + "\", -4.8321, 3) = ")
	print(deri_ridders(toderi, var, -4.8321, 3))

	print("\nderivative(derivative(derivative(\"" + toderi + "\", \"" + var + "\"), \"" + var + "\"), \"" + var + "\", -4.8321, true) = ")
	print(derivative(derivative(derivative(toderi, var), var), var, -4.8321, true))

	toderi = "asinh(sinh(sqrt(x)))"
	var = "x"
	print("\nderi_ridders(\"" + toderi + "\", \"" + var + "\", 12.8321, 2) = ")
	print(deri_ridders(toderi, var, 12.8321, 2))

	print("\nderivative(derivative(\"" + toderi + "\", \"" + var + "\"), \"" + var + "\", 12.8321, true) = ")
	print(derivative(derivative(toderi, var), var, 12.8321, true))

	toderi = "acos(atan(1/x*ln(x)))"
	var = "x"
	print("\nderi_ridders(\"" + toderi + "\", \"" + var + "\", 9.9, 1) = ")
	print(deri_ridders(toderi, var, 9.9, 1))

	print("\nderivative(\"" + toderi + "\", \"" + var + "\", 9.9, true) = ")
	print(derivative(toderi, var, 9.9, true))

	variable y = 3
	toderi = "loge(1/x/y)"
	var = "x"
	print("\nderi_ridders(\"" + toderi + "\", \"" + var + "\", 3.4, 2) = ")
	print(deri_ridders(toderi, var, 3.4, 2))

	toderi = "1/x"
	var = "x"
	print("\nderi_ridders(\"" + toderi + "\", \"" + var + "\", -2.78, 1) = ")
	print(deri_ridders(toderi, var, -2.78, 1))

	print("\nderivative(\"" + toderi + "\", \"" + var + "\", -2.78, 1) = ")
	print(derivative(toderi, var, -2.78, true))

	toderi = "1/x"
	var = "x"
	print("\nderi_ridders(\"" + toderi + "\", \"" + var + "\", -2.78, 1) = ")
	print(deri_ridders(toderi, var, -2.78, 1))

	print("\nderivative(derivative(\"" + toderi + "\", \"" + var + "\"), \"" + var + "\", -2.78, true) = ")
	print(derivative(derivative(toderi, var), var, -2.78, true))

	toderi = "1/x"
	var = "x"
	print("\nderi_ridders(\"" + toderi + "\", \"" + var + "\", -2.78, 3) = ")
	print(deri_ridders(toderi, var, -2.78, 3))

	print("\nderivative(derivative(derivative(\"" + toderi + "\", \"" + var + "\"), \"" + var + "\"), \"" + var + "\", -2.78, true) = ")
	print(derivative(derivative(derivative(toderi, var), var), var, -2.78, true))

	toderi = "1/x"
	var = "x"
	print("\nderi_ridders(\"" + toderi + "\", \"" + var + "\", 1, 1) = ")
	print(deri_ridders(toderi, var, 1, 1))

	toderi = "1/x"
	var = "x"
	print("\nderi_ridders(\"" + toderi + "\", \"" + var + "\", 1, 2) = ")
	print(deri_ridders(toderi, var, 1, 2))

	toderi = "1/x"
	var = "x"
	print("\nderi_ridders(\"" + toderi + "\", \"" + var + "\", 1, 3) = ")
	print(deri_ridders(toderi, var, 1, 3))

	toderi = "1/x"
	var = "x"
	print("\nderivative(derivative(\"" + toderi + "\", \"" + var + "\"), \"" + var + "\", 1) = ")
	print(derivative(derivative(toderi, var), var, 1))

	toderi = "1/x"
	var = "x"
	print("\nderivative(derivative(derivative(\"" + toderi + "\", \"" + var + "\"), \"" + var + "\"), \"" + var + "\", 1) = ")
	print(derivative(derivative(derivative(toderi, var), var), var, 1))

	toderi = "1/x"
	var = "x"
	print("\nderivative(\"" + toderi + "\", \"" + var + "\", 0, true) = ")
	print(derivative(toderi, var, 0, true))
	print("\nderi_ridders(\"" + toderi + "\", \"" + var + "\", 0, 1) = ")
	try
		print(deri_ridders(toderi, var, 0, 1))
	catch
		print("Exception")
	endtry
	print("\nderi_ridders(\"" + toderi + "\", \"" + var + "\", 0, 2) = ")
	try
		print(deri_ridders(toderi, var, 0, 2))
	catch
		print("Exception")
	endtry
	print("\nderi_ridders(\"" + toderi + "\", \"" + var + "\", 0, 3) = ")
	try
		print(deri_ridders(toderi, var, 0, 3))
	catch
		print("Exception")
	endtry
	print("\nderivative(\"" + toderi + "\", \"" + var + "\", -3+2i, true) = ")
	try
		print(derivative(toderi, var, -3+2i, true))
	catch
		print("Exception")
	endtry
	print("\nderi_ridders(\"" + toderi + "\", \"" + var + "\", -3+2i, 1) = ")
	try
		print(deri_ridders(toderi, var, -3+2i, 1))
	catch
		print("Exception")
	endtry

	toderi = "__SIN_TEST__ :: cos(x)"
	var = "x"
	print("\nderivative(\"" + toderi + "\", \"" + var + "\") = ")
	try
		print(derivative(toderi, var))
	catch
		print("Exception")
	endtry
	print("\nderivative(\"" + toderi + "\", \"" + var + "\", 30, false) = ")
	try
		print(derivative(toderi, var, 30, false))
	catch
		print("Exception")
	endtry
	print("\nderivative(\"" + toderi + "\", \"" + var + "\", 30, true) = ")
	print(derivative(toderi, var, 30, true))
	print("\nderivative(\"" + toderi + "\", \"" + var + "\", 45, true) = ")
	print(derivative(toderi, var, 45, true))
	print("\nderivative(\"" + toderi + "\", \"" + var + "\", 60, true) = ")
	print(derivative(toderi, var, 60, true))
	print("\nderi_ridders(\"" + toderi + "\", \"" + var + "\", 30, 1) = ")
	print(deri_ridders(toderi, var, 30, 1))
	print("\nderi_ridders(\"" + toderi + "\", \"" + var + "\", 45, 1) = ")
	print(deri_ridders(toderi, var, 45, 1))
	print("\nderi_ridders(\"" + toderi + "\", \"" + var + "\", 60, 1) = ")
	print(deri_ridders(toderi, var, 60, 1))
	print("\nderi_ridders(\"" + toderi + "\", \"" + var + "\", 45, 2) = ")
	try
		print(deri_ridders(toderi, var, 45, 2))
	catch
		print("Exception")
	endtry
	print("\nderi_ridders(\"" + toderi + "\", \"" + var + "\", 45, 3) = ")
	print(deri_ridders(toderi, var, 45, 3))

	toDeri = "x+1"
	print("\n\nderivative(\"" + toDeri + "\",\"" + var + "\") = ")
	print(derivative(toDeri, var))

	toDeri = "(x+1)**2"
	print("\n\nderivative(\"" + toDeri + "\",\"" + var + "\") = ")
	print(derivative(toDeri, var))

	toDeri = "x**2+2*x+1"
	print("\n\nderivative(\"" + toDeri + "\",\"" + var + "\") = ")
	print(derivative(toDeri, var))

	toDeri = "x**2+2*x+1-(x+2)*x"
	print("\n\nderivative(\"" + toDeri + "\",\"" + var + "\") = ")
	print(derivative(toDeri, var))

	toDeri = "3.77-4.7i"
	print("\n\nderivative(\"" + toDeri + "\",\"" + var + "\") = ")
	print(derivative(toDeri, var))

	toDeri = "[-7.81i, [6.447,3.77-4.7i],[8,9]]"
	print("\n\nderivative(\"" + toDeri + "\",\"" + var + "\") = ")
	print(derivative(toDeri, var))

	print("\n\nderivative(\"zzz\",\"zzz\") = ")
	print(derivative("zzz", "zzz"))

	toDeri = "3.77**(loge(x)**2)"
	print("\n\nderivative(\"" + toDeri + "\",\"" + var + "\") = ")
	print(derivative(toDeri, var))

	toDeri = "(4.31/(x**2.2+9))**3"
	print("\n\nderivative(\"" + toDeri + "\",\"" + var + "\") = ")
	print(derivative(toDeri, var))

	toDeri = "lg(x+1)**(1/sin(x))"
	print("\n\nderivative(\"" + toDeri + "\",\"" + var + "\") = ")
	print(derivative(toDeri, var))

	toDeri = "x**2*sin(x)"
	print("\n\nderivative(\"" + toDeri + "\",\"" + var + "\") = ")
	print(derivative(toDeri, var))

	toDeri = "7.33/cos(x)"
	print("\n\nderivative(\"" + toDeri + "\",\"" + var + "\") = ")
	print(derivative(toDeri, var))

	toDeri = "(x+1)/cos(x)/(2*x**2+x)"
	print("\n\nderivative(\"" + toDeri + "\",\"" + var + "\") = ")
	print(derivative(toDeri, var))

	toDeri = "(x+1)/cos(x)*ln(4+x)"
	print("\n\nderivative(\"" + toDeri + "\",\"" + var + "\") = ")
	print(derivative(toDeri, var))

	toDeri = "-4*x**2+loge(x)-9+sin(x)"
	print("\n\nderivative(\"" + toDeri + "\",\"" + var + "\") = ")
	print(derivative(toDeri, var))

	toDeri = "sqrt(ln(x))"
	print("\n\nderivative(\"" + toDeri + "\",\"" + var + "\") = ")
	print(derivative(toDeri, var))

	toDeri = "ln(sqrt(x))"
	print("\n\nderivative(\"" + toDeri + "\",\"" + var + "\") = ")
	print(derivative(toDeri, var))

	toDeri = "lg(sqrt(x))"
	print("\n\nderivative(\"" + toDeri + "\",\"" + var + "\") = ")
	print(derivative(toDeri, var))

	toDeri = "log(sqrt(x))"
	print("\n\nderivative(\"" + toDeri + "\",\"" + var + "\") = ")
	print(derivative(toDeri, var))

	toDeri = "loge(sqrt(x))"
	print("\n\nderivative(\"" + toDeri + "\",\"" + var + "\") = ")
	print(derivative(toDeri, var))

	toDeri = "sin(x**2)"
	print("\n\nderivative(\"" + toDeri + "\",\"" + var + "\") = ")
	print(derivative(toDeri, var))

	toDeri = "cos(z**2 + z - log(z))"
	print("\n\nderivative(\"" + toDeri + "\",\"z\") = ")
	print(derivative(toDeri, "z"))

	toDeri = "sin(x**2 + x - log(x))"
	print("\n\nderivative(\"" + toDeri + "\",\"" + var + "\") = ")
	print(derivative(toDeri, var))

	if true
	variable x = 9
	toDeri = "tan(z**2 + z + x/x - log(z) - 1)"
	print("\n\nderivative(\"" + toDeri + "\",\"z\") = ")
	print(derivative(toDeri, "z"))
	endif

	toDeri = "asin(x)"
	print("\n\nderivative(\"" + toDeri + "\",\"" + var + "\") = ")
	print(derivative(toDeri, var))

	toDeri = "acos(x)"
	print("\n\nderivative(\"" + toDeri + "\",\"" + var + "\") = ")
	print(derivative(toDeri, var))

	toDeri = "atan(x)"
	print("\n\nderivative(\"" + toDeri + "\",\"" + var + "\") = ")
	print(derivative(toDeri, var))

	toDeri = "sinh(x)"
	print("\n\nderivative(\"" + toDeri + "\",\"" + var + "\") = ")
	print(derivative(toDeri, var))

	toDeri = "cosh(x)"
	print("\n\nderivative(\"" + toDeri + "\",\"" + var + "\") = ")
	print(derivative(toDeri, var))

	toDeri = "tanh(x)"
	print("\n\nderivative(\"" + toDeri + "\",\"" + var + "\") = ")
	print(derivative(toDeri, var))

	toDeri = "asinh(x)"
	print("\n\nderivative(\"" + toDeri + "\",\"" + var + "\") = ")
	print(derivative(toDeri, var))

	toDeri = "acosh(x)"
	print("\n\nderivative(\"" + toDeri + "\",\"" + var + "\") = ")
	print(derivative(toDeri, var))

	toDeri = "atanh(x)"
	print("\n\nderivative(\"" + toDeri + "\",\"" + var + "\") = ")
	print(derivative(toDeri, var))

	variable x_value = 3.33
	toDeri = "atanh(2*log(x**2) + 9-x) - 4*x**2"
	print("\n\nderivative(\"" + toDeri + "\",\"" + var + "\", " + x_value + ") = ")
	print(derivative(toDeri, var, x_value))

	x_value = -6.497
	toDeri = "-3.11*x**-2 + cos(x)"
	print("\n\nderivative(\"" + toDeri + "\",\"" + var + "\", " + x_value + ") = ")
	print(derivative(toDeri, var, x_value))

endf

citingspace cs_test
Help
This function test citing space
Endh
function citing_space_test()
	print("\n")
	print("**** Now start to test citing spaces ****\n")
	print("---- Now test Metta::dddK::v5__::v6::oooo1() ----\n")
	Metta::dddK::v5__::v6::oooo1()
	print("---- Now test fghiA() ----\n")
	fghiA()
	print("---- Now test ::Metta::dddK::fghiA() ----\n")
	::Metta::dddK::fghiA()
	print("---- Now test fghi() ----\n")
	fghi()
	print("---- Now test ::Metta::dddK::fghi::fghiA() ----\n")
	::Metta::dddK::fghi::fghiA()
	print("---- Now test ::Metta::dddK::Cia::b::callfghics() ----\n")
	::Metta::dddK::Cia::b::callfghics()
	print("---- Now test ::callfghics2() ----\n")
	::callfghics2()
	
	variable x, y
	print("**** Now solve mfp::math :: trigon::siN(X) == 3 ****\n")
	solve x
		mfp::math :: trigon::siN(X) == 3
	slvreto y
	print("x == " + x + " ; y == " + y + "\n")
	
	print("**** Now solve log_eXp :: lOG(X) == 0.7+3.3i ****\n")
	solve x
		log_eXp :: lOG(X) == 0.7+3.3i
	slvreto y
	print("x == " + x + " ; y == " + y + "\n")
	
	print("**** Now solve log_eXp :: lOG(X) == 0.7+3.3i ****\n")
	solve x
		log_eXp :: lOG(X) == 0.7+3.3i
	slvreto y
	print("x == " + x + " ; y == " + y + "\n")
	
	print("**** Now solve x**2==my_sin1234567(2) ****\n")
	solve x
		x**2==my_sin1234567(2)
	slvreto y
	print("x == " + x + " ; y == " + y + "\n")
	
	print("**** Now solve x**2== :: my_sin1234567(2) ****\n")
	solve x
		x**2== :: my_sin1234567(2)
	slvreto y
	print("x == " + x + " ; y == " + y + "\n")

	print("**** Now solve x**2== trigon :: my_sin1234567(2) ****\n")
	solve x
		x**2== trigon:: my_sin1234567(2)
	slvreto y
	print("x == " + x + " ; y == " + y + "\n")

	print("**** Now solve x**2== math :: my_sin1234567(2) ****\n")
	solve x
		x**2== math:: my_sin1234567(2)
	slvreto y
	print("x == " + x + " ; y == " + y + "\n")
	
	print("***** Now test test_my_sin1234567(2) in ::cs_test ****\n")
	test_my_sin1234567(2)

	print("***** Now test ::test_my_sin1234567(2) ****\n")
	::test_my_sin1234567(2)

	print("***** Now test trigon::test_my_sin1234567(2) ****\n")
	trigon::test_my_sin1234567(2)

	print("***** Now test math::test_my_sin1234567(2) ****\n")
	math::test_my_sin1234567(2)

	print("**** Now print integrate(\"math :: trigon :: tanh(2*x) \", \"x\") ****\n")
	print("math :: calculuS::integrate(\"math :: trigon :: tanh(2*x) \", \"x\") = " + math :: calculuS ::integrate("math :: trigon :: tanh(2*x) ", "x") )
	
	print("**** Now print integrate(\"mfp::math :: trigon :: cos(x) \", \"x\") ****\n")
	print("math :: calculuS::integrate(\"mfp::math :: trigon :: cos(x) \", \"x\") = " + mfp::math :: calculuS ::integrate("mfp::math :: trigon :: cos(x) ", "x") )
	
	print("**** Now print integrate(integrate(\"1/::  mfp::math :: log_exp :: exp(x) + x \", \"x\"), \"x\") ****\n")
	print("::mfp ::Math :: calculuS::integrate(calculuS::integrate(\"1/::  mfp::math :: log_exp :: exp(x) + x \", \"x\"), \"x\") = " + ::mfp ::Math :: calculuS::integrate(calculuS::integrate("1/::  mfp::math :: log_exp :: exp(x) + x ", "x"), "x") )
endf
endcs

Help
This function test exdata like JSON functions. 
Endh
function exdata_test()
	variable json0 = "{}", json1 = "{\"ABC\": null}", json2 = "{\"ABC\": \"hello\", \"abc\": [3.821, -99, [9e2, \"CdEf\"], {\"DEF\":[]}]}"
	try
		variable a = get_json_field(json0, "DE")
	catch
		print_line("No field DE")
	endtry
	print_line("json2 field ABC is " + get_json_field(json2, "ABC", ""))
	print_line("json2 string field ABC is " + get_json_field(json2, "ABC", "S"))
	print_line("json2 field abc is " + get_json_field(json2, "abc", null))
	print_line("json2 array field ABC is " + get_json_field(json2, "abc", "a"))

	print_line("set json0 def key true is " + set_json_field(json0, "def", True))
	print_line("get json0 def default key is " + get_json_field(set_json_field(json0, "def", False), "def"))
	print_line("get json0 def boolean key is " + get_json_field(set_json_field(json0, "def", True), "def", "B"))
	print_line("get json1 float ABC key is " + get_json_field(set_json_field(json1, "ABC", 8.3219), "ABC", "f"))
	print_line("get json1 integer ABC key is " + get_json_field(set_json_field(json1, "ABC", 8.3219), "ABC", "d"))
	print_line("get json1 default ABC key is " + get_json_field(set_json_field(json1, "ABC", -8.3219), "ABC", ""))
	try
		print_line("get json1 default ABc key is " + get_json_field(set_json_field(json1, "ABC", -8.3219), "ABc", ""))
	catch
		print_line("No field ABc")
	endtry
	print_line("get json embedded json JJJ key is " + get_json_field("{\"ABC\": null, \"JJJ\": {\"DEF\":[1, 8, [\"Welcome\", 9.99]],\"ZZ\":\"hello boy\"}}", "JJJ", "j"))
	print_line("get json embedded default JJJ key is " + get_json_field("{\"ABC\": null, \"JJJ\": {\"DEF\":[1, 8, [\"Welcome\", 9.99]],\"ZZ\":\"hello boy\"}}", "JJJ", ""))
	try
		print_line("get empty field default ABc key is " + get_json_field("{\"ABc\":}", "ABc", ""))
	catch
		print_line("Empty field")
	endtry

	print_line("set json0 null value = " + set_json_field(json0, "def", null))
	print_line("set json1 pi value with key ABC = " + set_json_field(json1, "ABC", pi))
	print_line("set json1 pi value with key ABc = " + set_json_field(json1, "ABc", pi))
	print_line("set json2 string value with key ABc = " + set_json_field(json2, "ABc", "Why Is"))
	print_line("set json2 Integer value with key abc = " + set_json_field(json2, "abc", 382519))
	print_line("set json2 array value with key abc = " + set_json_field(json2, "abc", [5.32, 382519, "Hello"]))//, ["babY", "{\"AEC\":\"BBB\"}"]]))
	print_line("set json2 array value with key abc = " + set_json_field(json2, "abc", [5.32, 382519, ["Hello", "babY"], ["{\"AEC\":\"BBB\"}", 731]]))
	print_line("set json2 array value with key abc = " + set_json_field(json2, "abc", [5.32, 382519, ["Hello", "babY"], ["{\"AEC\":\"BBB\"}", 731.32i - 5.559]]))
	print_line("set json2 array value with key abc = " + set_json_field(json2, "abc", [5.32, 382519, ["Hello", "babY"], "{\"AEC\":\"BBB\"}"]))
	try
		print_line("set json0 complex value = " + set_json_field(json0, "def", 3 + 4i))
	catch
		print_line("Wrong data type complex value")
	endtry
	try
		print_line("set json0 object value = " + set_json_field(json0, "def", object()))
	catch
		print_line("Wrong data type object value")
	endtry
endf

Help
This function test plot functions. 
Endh

function plot_reg_test()
	print("Now test plot_const_x_y_z()\n")
	plot_const_x_y_z()
	input("Press Enter to continue", "S")
	print("Now test plot3d_multi_cvs()\n")
	plot3d_multi_cvs()
	input("Press Enter to continue", "S")
	print("Now test plot_2d_data_multi_cvs()\n")
	plot_2d_data_multi_cvs()
	input("Press Enter to continue", "S")
	print("Now test plot_3d_data_multi_cvs()\n")
	plot_3d_data_multi_cvs()
	input("Press Enter to continue", "S")
	print("Now test plot_exprs_multi_cvs()\n")
	plot_exprs_multi_cvs()
	input("Press Enter to continue", "S")
	print("Now test plot_multi_xyz_multi_cvs()\n")
	plot_multi_xyz_multi_cvs()
	input("Press Enter to continue", "S")
	print("Now test plot_polar_data_multi_cvs()\n")
	plot_polar_data_multi_cvs()
	input("Press Enter to continue", "S")
	print("Now test plot_3d_surfaces_multi_cvs()\n")
	plot_3d_surfaces_multi_cvs()
	input("Press Enter to continue", "S")
	print("Now test plottest()\n")
	plottest()
	input("Press Enter to continue", "S")
	print("Now test pextest()\n")
	pextest()
	input("Press Enter to continue", "S")
	print("Now test plottest_nofile()\n")
	plottest_nofile()
	input("Press Enter to continue", "S")
	print("Now test plottest1()\n")
	plottest1()
	input("Press Enter to continue", "S")
	print("Now test plottest2()\n")
	plottest2()
	input("Press Enter to continue", "S")
	print("Now test plottest3()\n")
	plottest3()
	input("Press Enter to continue", "S")
	print("Now test plotpolar()\n")
	plotpolar()
	input("Press Enter to continue", "S")
	print("Now test plotdataexprs()\n")
	plotdataexprs()
	input("Press Enter to continue", "S")
	print("Now test test_plot_singular_points()\n")
	test_plot_singular_points()
	input("Press Enter to continue", "S")
	print("Now test test_plot_nan_inf()\n")
	test_plot_nan_inf()
	input("Press Enter to continue", "S")
	print("Now test plot_implicit_func_reg1()\n")
	plot_implicit_func_reg1()
	input("Press Enter to continue", "S")
	print("Now test plot_implicit_func_reg2()\n")
	plot_implicit_func_reg2()
	input("Press Enter to continue", "S")
	print("Now test plot_implicit_func_reg3()\n")
	plot_implicit_func_reg3()
	input("Press Enter to continue", "S")
	print("Now test plot_implicit_func_reg4()\n")
	plot_implicit_func_reg4()
	print("Now test test_plot_cs_reference()\n")
	test_cs_reference::test_plot_cs_reference()
endf

Help
This function test indefinite integral functions. 
Endh

@compulsory_link get_all_referred_units()
@compulsory_link get_functions("abc(0)")

function indef_integ_reg_test()
	variable var1

    print("\n\nintegrate(\"1/sqrt(1-x)\",\"x\") = ")
    print(integrate("1/sqrt(1-x)","x"))

    print("\n\nintegrate(\"7/sqrt(2.1+3.9*x)\",\"x\") = ")
    print(integrate("7/sqrt(2.1+3.9*x)","x"))

    print("\n\nintegrate(\"tanh(x)**-1\",\"x\") = ")
    print(integrate("tanh(x)**-1","x"))

    print("\n\nintegrate(\"sinh(x)*cosh(x)**-1\",\"x\") = ")
    print(integrate("sinh(x)*cosh(x)**-1","x"))

@compulsory_link get_all_referred_units()
@compulsory_link get_functions("abc(0)")

    print("\n\nintegrate(\"sin(x)*cos(x)**-1\",\"x\") = ")
    print(integrate("sin(x)*cos(x)**-1","x"))

    print("\n\nintegrate(\"sinh(x)**-1\",\"x\") = ")
    print(integrate("sinh(x)**-1","x"))

    print("\n\nintegrate(\"cosh(x)**-1\",\"x\") = ")
    print(integrate("cosh(x)**-1","x"))

    print("\n\nintegrate(\"sinh(x)\",\"x\") = ")
    print(integrate("sinh(x)","x"))

    print("\n\nintegrate(\"cosh(x)\",\"x\") = ")
    print(integrate("cosh(x)","x"))

    print("\n\nintegrate(\"sinh(x)**2\",\"x\") = ")
    print(integrate("sinh(x)**2","x"))

    print("\n\nintegrate(\"sinh(x)*sinh(x)\",\"x\") = ")
    print(integrate("sinh(x)*sinh(x)","x"))

    print("\n\nintegrate(\"sinh(x)*cosh(x)\",\"x\") = ")
    print(integrate("sinh(x)*cosh(x)","x"))

    print("\n\nintegrate(\"sinh(x)**-2\",\"x\") = ")
    print(integrate("sinh(x)**-2","x"))

    print("\n\nintegrate(\"sinh(x*3)**-2\",\"x\") = ")
    print(integrate("sinh(x*3)**-2","x"))

    print("\n\nintegrate(\"cosh(x)**2\",\"x\") = ")
    print(integrate("cosh(x)**2","x"))

    print("\n\nintegrate(\"1/cosh(x)**2\",\"x\") = ")
    print(integrate("1/cosh(x)**2","x"))

    print("\n\nintegrate(\"1/cosh(x)\",\"x\") = ")
    print(integrate("1/cosh(x)","x"))

    print("\n\nintegrate(\"3/sin(x)\",\"x\") = ")
    print(integrate("3/sin(x)","x"))

    print("\n\nintegrate(\"3/sinh(x)\",\"x\") = ")
    print(integrate("3/sinh(x)","x"))

    print("\n\nintegrate(\"tanh(3*x)\",\"x\") = ")
    print(integrate("tanh(3*x)","x"))

    print("\n\nintegrate(\"tanh(x)**-1\",\"x\") = ")
    print(integrate("tanh(x)**-1","x"))

    print("\n\nintegrate(\"1/tanh(x)\",\"x\") = ")
    print(integrate("1/tanh(x)","x"))

    print("\n\nintegrate(\"1/tanh(x)**2\",\"x\") = ")
    print(integrate("1/tanh(x)**2","x"))

    print("\n\nintegrate(\"tanh(x)**2\",\"x\") = ")
    print(integrate("tanh(x)**2","x"))

    print("\n\nintegrate(\"tanh(x)**-2\",\"x\") = ")
    print(integrate("tanh(x)**-2","x"))

    print("\n\nintegrate(\"tanh(x)**1\",\"x\") = ")
    print(integrate("tanh(x)**1","x"))

    print("\n\nintegrate(\"sinh(x)**-1\",\"x\") = ")
    print(integrate("sinh(x)**-1","x"))

    print("\n\nintegrate(\"cosh(x)**-1\",\"x\") = ")
    print(integrate("cosh(x)**-1","x"))

    print("\n\nintegrate(\"cosh(x)**1\",\"x\") = ")
    print(integrate("cosh(x)**1","x"))

    print("\n\nintegrate(\"1/cosh(x)*tanh(x)\",\"x\") = ")
    print(integrate("1/cosh(x)*tanh(x)","x"))

    print("\n\nintegrate(\"sinh(x)/cosh(x)**2\",\"x\") = ")
    print(integrate("sinh(x)/cosh(x)**2","x"))

    print("\n\nintegrate(\"1/tanh(x)\",\"x\") = ")
    print(integrate("1/tanh(x)","x"))

    print("\n\nintegrate(\"cosh(x)/sinh(x)\",\"x\") = ")
    print(integrate("cosh(x)/sinh(x)","x"))

    print("\n\nintegrate(\"cosh(x)/sinh(x)**2\",\"x\") = ")
    print(integrate("cosh(x)/sinh(x)**2","x"))

    print("\n\nintegrate(\"1/(sinh(x)*tanh(x))\",\"x\") = ")
    print(integrate("1/(sinh(x)*tanh(x))","x"))

    print("\n\nintegrate(\"1/sinh(x)*1/tanh(x)\",\"x\") = ")
    print(integrate("1/sinh(x)*1/tanh(x)","x"))

    print("\n\nintegrate(\"tan(x)**-3\",\"x\") = ")
    print(integrate("tan(x)**-3","x"))

    print("\n\nintegrate(\"(sin(x)/cos(x))**-3\",\"x\") = ")
    print(integrate("(sin(x)/cos(x))**-3","x"))

    print("\n\nintegrate(\"cos(x)**3/sin(x)**3\",\"x\") = ")
    print(integrate("cos(x)**3/sin(x)**3","x"))

    print("\n\nintegrate(\"sin(x)**-3/cos(x)**-3\",\"x\") = ")
    print(integrate("sin(x)**-3/cos(x)**-3","x"))

    print("\n\nintegrate(\"sin(x)**-3\",\"x\") = ")
    print(integrate("sin(x)**-3","x"))

    print("\n\nintegrate(\"sin(x)**-3*cos(x)**0\",\"x\") = ")
    print(integrate("sin(x)**-3*cos(x)**0","x"))

    print("\n\nintegrate(\"tan(x)**3\",\"x\") = ")
    print(integrate("tan(x)**3","x"))

    print("\n\nintegrate(\"(sin(x)/cos(x))**3\",\"x\") = ")
    print(integrate("(sin(x)/cos(x))**3","x"))

    print("\n\nintegrate(\"sin(x)**3/cos(x)**3\",\"x\") = ")
    print(integrate("sin(x)**3/cos(x)**3","x"))

    print("\n\nintegrate(\"cos(x)**-3*sin(x)**3\",\"x\") = ")
    print(integrate("cos(x)**-3*sin(x)**3","x"))

    print("\n\nintegrate(\"sin(x)**3\",\"x\") = ")
    print(integrate("sin(x)**3","x"))

    print("\n\nintegrate(\"cos(x)**-3\",\"x\") = ")
    print(integrate("cos(x)**-3","x"))

    print("\n\nintegrate(\"sin(x)**0*cos(x)**-3\",\"x\") = ")
    print(integrate("sin(x)**0*cos(x)**-3","x"))

    print("\n\nintegrate(\"sin(x)**3*cos(x)**0\",\"x\") = ")
    print(integrate("sin(x)**3*cos(x)**0","x"))

    print("\n\nintegrate(\"sin(x)**2/cos(x)**2\",\"x\") = ")
    print(integrate("sin(x)**2/cos(x)**2","x"))

    print("\n\nintegrate(\"(sin(x)/cos(x))**2\",\"x\") = ")
    print(integrate("(sin(x)/cos(x))**2","x"))

    print("\n\nintegrate(\"sin(x)**3/cos(x)**3\",\"x\") = ")
    print(integrate("sin(x)**3/cos(x)**3","x"))

    print("\n\nintegrate(\"sin(x)**-3/cos(x)**-3\",\"x\") = ")
    print(integrate("sin(x)**-3/cos(x)**-3","x"))

    print("\n\nintegrate(\"tan(x)\",\"x\") = ")
    print(integrate("tan(x)","x"))

    print("\n\nintegrate(\"1/tan(x)\",\"x\") = ")
    print(integrate("1/tan(x)","x"))

    print("\n\nintegrate(\"1/tan(x)**1\",\"x\") = ")
    print(integrate("1/tan(x)**1","x"))

    print("\n\nintegrate(\"1/tan(x)**-1\",\"x\") = ")
    print(integrate("1/tan(x)**-1","x"))

    print("\n\nintegrate(\"1/(tan(x)**-1)\",\"x\") = ")
    print(integrate("1/(tan(x)**-1)","x"))

    print("\n\nintegrate(\"tan(x)**-3\",\"x\") = ")
    print(integrate("tan(x)**-3","x"))

    print("\n\nintegrate(\"tan(x)**3\",\"x\") = ")
    print(integrate("tan(x)**3","x"))

    print("\n\nintegrate(\"sin(x)**3/cos(x)**3\",\"x\") = ")
    print(integrate("sin(x)**3/cos(x)**3","x"))

    print("\n\nintegrate(\"(sin(x)/cos(x))**3\",\"x\") = ")
    print(integrate("(sin(x)/cos(x))**3","x"))

    print("\n\nintegrate(\"tan(x)**2\",\"x\") = ")
    print(integrate("tan(x)**2","x"))

    print("\n\nintegrate(\"tan(x)**-2\",\"x\") = ")
    print(integrate("tan(x)**-2","x"))

    print("\n\nintegrate(\"(sin(x)/cos(x))**2\",\"x\") = ")
    print(integrate("(sin(x)/cos(x))**2","x"))

    print("\n\nintegrate(\"tan(x)**2\",\"x\") = ")
    print(integrate("tan(x)**2","x"))

    print("\n\nintegrate(\"tan(x)\",\"x\") = ")
    print(integrate("tan(x)","x"))

    print("\n\nintegrate(\"sin(x)**2/cos(x)**2\",\"x\") = ")
    print(integrate("sin(x)**2/cos(x)**2","x"))

    print("\n\nintegrate(\"sin(x)**2*cos(x)**-2\",\"x\") = ")
    print(integrate("sin(x)**2*cos(x)**-2","x"))

    print("\n\nintegrate(\"(sin(x)/cos(x))**2\",\"x\") = ")
    print(integrate("(sin(x)/cos(x))**2","x"))

    print("\n\nintegrate(\"(tan(x))**2\",\"x\") = ")
    print(integrate("(tan(x))**2","x"))

    print("\n\nintegrate(\"(cos(x)**-1*sin(x))**2\",\"x\") = ")
    print(integrate("(cos(x)**-1*sin(x))**2","x"))

    print("\n\nintegrate(\"sin(x)*cos(x)**-3/(sin(x)**-1*cos(x)**-1)\",\"x\") = ")
    print(integrate("sin(x)*cos(x)**-3/(sin(x)**-1*cos(x)**-1)","x"))

    print("\n\nintegrate(\"3*sin(x)**3/cos(x)**3\",\"x\") = ")
    print(integrate("3*sin(x)**3/cos(x)**3","x"))

	print("\n\nintegrate(\"1/(pow(x,2)+1)\",\"x\") = ")
	print(integrate("1/(pow(x,2)+1)","x"))

	print("\n\nintegrate(\"1/pow(x,2)+1\",\"x\") = ")
	print(integrate("1/pow(x,2)+1","x"))

	print("\n\nintegrate(\"1/sqrt(x)+1\",\"x\") = ")
	print(integrate("1/sqrt(x)+1","x"))

	print("\n\nintegrate(\"exp(x+2)\",\"x\") = ")
	print(integrate("exp(x+2)","x"))

	print("\n\nintegrate(\"pow(sqrt(x), -2)+1\",\"x\") = ")
	print(integrate("pow(sqrt(x), -2)+1","x"))

	print("\n\nintegrate(\"2*x**2.83\",\"x\") = ")
	print(integrate("2*x**2.83","x"))

	print("\n\nintegrate(\"2*x**(-2.83)\",\"x\") = ")
	print(integrate("2*x**(-2.83)","x"))

	print("\n\nintegrate(\"2/x**2.83\",\"x\") = ")
	print(integrate("2/x**2.83","x"))

	print("\n\nintegrate(\"1/x**2.83\",\"x\") = ")
	print(integrate("1/x**2.83","x"))

	print("\n\nintegrate(\"1*x**2.83\",\"x\") = ")
	print(integrate("1*x**2.83","x"))

	print("\n\nintegrate(\"x**2.83\",\"x\") = ")
	print(integrate("x**2.83","x"))

	print("\n\nintegrate(\"x**(-2.83)\",\"x\") = ")
	print(integrate("x**(-2.83)","x"))

	print("\n\nintegrate(\"1/x\",\"x\") = ")
	print(integrate("1/x","x"))

	print("\n\nintegrate(\"x**(-1)\",\"x\") = ")
	print(integrate("x**(-1)","x"))

	print("\n\nintegrate(\"3.77+4.21i\",\"x\") = ")
	print(integrate("3.77+4.21i","x"))

	print("\n\nintegrate(\"[3.77+4.21i]\",\"x\") = ")
	print(integrate("[3.77+4.21i]","x"))

	try
		print("\n\nintegrate(\"[3.77+4.21i,9]\",\"x\") = ")
		print(integrate("[3.77+4.21i,9]","x"))
	catch (var1 = info) == info
		print("\n\nintegrate(\"[3.77+4.21i,9]\",\"x\") throws an exception : " + var1)
	endtry
	
	try
		print("\n\nintegrate(\"e**(-x**2)\",\"x\") = ")
		print(integrate("e**(-x**2)","x"))
	catch (var1 = info) == info
		print("\n\nintegrate(\"e**(-x**2)\",\"x\") throws an exception : " + var1)
	endtry
	
	try
		print("\n\nintegrate(\"e**(x**2)\",\"x\") = ")
		print(integrate("e**(x**2)","x"))
	catch (var1 = info) == info
		print("\n\nintegrate(\"e**(x**2)\",\"x\") throws an exception : " + var1)
	endtry
	
	try
		print("\n\nintegrate(\"3**(-x**2)\",\"x\") = ")
		print(integrate("3**(-x**2)","x"))
	catch (var1 = info) == info
		print("\n\nintegrate(\"3**(-x**2)\",\"x\") throws an exception : " + var1)
	endtry
	
	try
		print("\n\nintegrate(\"3**(x**2)\",\"x\") = ")
		print(integrate("3**(x**2)","x"))
	catch (var1 = info) == info
		print("\n\nintegrate(\"3**(x**2)\",\"x\") throws an exception : " + var1)
	endtry
	
	try
		print("\n\nintegrate(\"e**(-x**1)\",\"x\") = ")
		print(integrate("e**(-x**1)","x"))
	catch (var1 = info) == info
		print("\n\nintegrate(\"e**(-x**1)\",\"x\") throws an exception : " + var1)
	endtry
	
	try
		print("\n\nintegrate(\"e**(x**1)\",\"x\") = ")
		print(integrate("e**(x**1)","x"))
	catch (var1 = info) == info
		print("\n\nintegrate(\"e**(x**1)\",\"x\") throws an exception : " + var1)
	endtry
	
	try
		print("\n\nintegrate(\"3**(-x**1)\",\"x\") = ")
		print(integrate("3**(-x**1)","x"))
	catch (var1 = info) == info
		print("\n\nintegrate(\"3**(-x**1)\",\"x\") throws an exception : " + var1)
	endtry
	
	try
		print("\n\nintegrate(\"3**(x**1)\",\"x\") = ")
		print(integrate("3**(x**1)","x"))
	catch (var1 = info) == info
		print("\n\nintegrate(\"3**(x**1)\",\"x\") throws an exception : " + var1)
	endtry
	

	print("\n\nintegrate(\"x\",\"x\") = ")
	print(integrate("x","x"))

	print("\n\nintegrate(\"7.77i*x\",\"x\") = ")
	print(integrate("7.77i*x","x"))

	print("\n\nintegrate(\"2/7.77i*x\",\"x\") = ")
	print(integrate("2/7.77i*x","x"))

	print("\n\nintegrate(\"1/7.77i/x\",\"x\") = ")
	print(integrate("1/7.77i/x","x"))

	print("\n\nintegrate(\"1/7.77i/x**2\",\"x\") = ")
	print(integrate("1/7.77i/x**2","x"))

	print("\n\nintegrate(\"1/x**2\",\"x\") = ")
	print(integrate("1/x**2","x"))

	print("\n\nintegrate(\"1*x**2\",\"x\") = ")
	print(integrate("1*x**2","x"))

	print("\n\nintegrate(\"8.71i/x\",\"x\") = ")
	print(integrate("8.71i/x","x"))

	print("\n\nintegrate(\"x*8.71i\",\"x\") = ")
	print(integrate("x*8.71i","x"))

	print("\n\nintegrate(\"x*8.71i*x**2\",\"x\") = ")
	print(integrate("x*8.71i*x**2","x"))

	print("\n\nintegrate(\"x*9.4+8.71i/x**2-1*x**2\",\"x\") = ")
	print(integrate("x*9.4+8.71i/x**2-1*x**2","x"))

	print("\n\nintegrate(\"tanh(x)\",\"x\") = ")
	print(integrate("tanh(x)","x"))

	print("\n\nintegrate(\"cosh(x)\",\"x\") = ")
	print(integrate("cosh(x)","x"))

	print("\n\nintegrate(\"sinh(x)\",\"x\") = ")
	print(integrate("sinh(x)","x"))

	print("\n\nintegrate(\"1/x/log(x)\",\"x\") = ")
	print(integrate("1/x/log(x)","x"))

	print("\n\nintegrate(\"1/(log(z)*z)\",\"z\") = ")
	print(integrate("1/(log(z)*z)","z"))

	print("\n\nintegrate(\"1/log(z)/z\",\"z\") = ")
	print(integrate("1/log(z)/z","z"))

	print("\n\nintegrate(\"log(y)*y**2.1/4.88\",\"y\") = ")
	print(integrate("log(y)*y**2.1/4.88","y"))

	print("\n\nintegrate(\"log(y)*y**2.1*4.88\",\"y\") = ")
	print(integrate("log(y)*y**2.1*4.88","y"))

	print("\n\nintegrate(\"log(y)/4.88*y**2.1\",\"y\") = ")
	print(integrate("log(y)/4.88*y**2.1","y"))

	print("\n\nintegrate(\"2*log(y)\",\"y\") = ")
	print(integrate("2*log(y)","y"))

	print("\n\nintegrate(\"log(y)/2\",\"y\") = ")
	print(integrate("log(y)/2","y"))

	print("\n\nintegrate(\"e**(3*x)*cos(4*x)\",\"x\") = ")
	print(integrate("e**(3*x)*cos(4*x)","x"))

	print("\n\nintegrate(\"e**(3*x)*sin(4*x)\",\"x\") = ")
	print(integrate("e**(3*x)*sin(4*x)","x"))

	print("\n\nintegrate(\"e**(4.1*x)*x\",\"x\") = ")
	print(integrate("e**(4.1*x)*x","x"))

	print("\n\nintegrate(\"7**xy\",\"xy\") = ")
	print(integrate("7**xy","xy"))

	print("\n\nintegrate(\"atan(x)\",\"x\") = ")
	print(integrate("atan(x)","x"))

	print("\n\nintegrate(\"atan(2*x)\",\"x\") = ")
	print(integrate("atan(2*x)","x"))

	try
		print("\n\nintegrate(\"atan(z/2)\",\"x\") = ")
		print(integrate("atan(z/2)","x"))
	catch (var1 = info) == info
		print("\n\nintegrate(\"atan(z/2)\",\"x\") throws an exception : " + var1)
	endtry

	print("\n\nintegrate(\"atan(z/2)\",\"z\") = ")
	print(integrate("atan(z/2)","z"))

	print("\n\nintegrate(\"atan(2\\z)\",\"z\") = ")
	print(integrate("atan(2\\z)","z"))

	print("\n\nintegrate(\"atan(1/2*z)\",\"z\") = ")
	print(integrate("atan(1/2*z)","z"))

	print("\n\nintegrate(\"acos(2*k)\",\"k\") = ")
	print(integrate("acos(2*k)","k"))

	print("\n\nintegrate(\"tan(x)/cos(x)\",\"x\") = ")
	print(integrate("tan(x)/cos(x)","x"))

	print("\n\nintegrate(\"tan(x)*1/cos(x)\",\"x\") = ")
	print(integrate("tan(x)*1/cos(x)","x"))

	print("\n\nintegrate(\"1/cos(x)**2\",\"x\") = ")
	print(integrate("1/cos(x)**2","x"))

	print("\n\nintegrate(\"(1/cos(x))**2\",\"x\") = ")
	print(integrate("(1/cos(x))**2","x"))

	print("\n\nintegrate(\"(1/cos(x))**1\",\"x\") = ")
	print(integrate("(1/cos(x))**1","x"))

	print("\n\nintegrate(\"(1/cos(x))\",\"x\") = ")
	print(integrate("(1/cos(x))","x"))

	print("\n\nintegrate(\"1/(tan(x)*sin(x))\",\"x\") = ")
	print(integrate("1/(tan(x)*sin(x))","x"))

	print("\n\nintegrate(\"1/tan(x)/sin(x)\",\"x\") = ")
	print(integrate("1/tan(x)/sin(x)","x"))

	print("\n\nintegrate(\"1/sin(x)/sin(x)\",\"x\") = ")
	print(integrate("1/sin(x)/sin(x)","x"))

	print("\n\nintegrate(\"1/sin(x)/tan(x)\",\"x\") = ")
	print(integrate("1/sin(x)/tan(x)","x"))

	print("\n\nintegrate(\"1/sin(z)\",\"z\") = ")
	print(integrate("1/sin(z)","z"))

	print("\n\nintegrate(\"1/sin(z)**2\",\"z\") = ")
	print(integrate("1/sin(z)**2","z"))

	print("\n\nintegrate(\"1/tan(x)/tan(x)\",\"x\") = ")
	print(integrate("1/tan(x)/tan(x)","x"))

	print("\n\nintegrate(\"1/(tan(x)*tan(x))\",\"x\") = ")
	print(integrate("1/(tan(x)*tan(x))","x"))

	print("\n\nintegrate(\"tan(x)\",\"x\") = ")
	print(integrate("tan(x)","x"))

	print("\n\nintegrate(\"tan(x)**2\",\"x\") = ")
	print(integrate("tan(x)**2","x"))

	print("\n\nintegrate(\"cos(x)\",\"x\") = ")
	print(integrate("cos(x)","x"))

	print("\n\nintegrate(\"1/sqrt(3*x**2+2.1*x+6)/x\",\"x\") = ")
	print(integrate("1/sqrt(3*x**2+2.1*x+6)/x","x"))

	print("\n\nintegrate(\"1/(sqrt(3*x**2+2.1*x+6)*x)\",\"x\") = ")
	print(integrate("1/(sqrt(3*x**2+2.1*x+6)*x)","x"))

	print("\n\nintegrate(\"1/(sqrt(3*x**2+2.1*x+6)/x)\",\"x\") = ")
	print(integrate("1/(sqrt(3*x**2+2.1*x+6)/x)","x"))

	print("\n\nintegrate(\"x/(sqrt(3*x**2+2.1*x+6))\",\"x\") = ")
	print(integrate("x/(sqrt(3*x**2+2.1*x+6))","x"))

	print("\n\nintegrate(\"1/sqrt(3*x**2+2.1*x+6)\",\"x\") = ")
	print(integrate("1/sqrt(3*x**2+2.1*x+6)","x"))

	print("\n\nintegrate(\"x**2/sqrt(3-x**2)\",\"x\") = ")
	print(integrate("x**2/sqrt(3-x**2)","x"))

	print("\n\nintegrate(\"1/x**2/sqrt(3-x**2)\",\"x\") = ")
	print(integrate("1/x**2/sqrt(3-x**2)","x"))

	print("\n\nintegrate(\"1/sqrt(3-x**2)/x**2\",\"x\") = ")
	print(integrate("1/sqrt(3-x**2)/x**2","x"))

	print("\n\nintegrate(\"1/sqrt(3-x**2)/x\",\"x\") = ")
	print(integrate("1/sqrt(3-x**2)/x","x"))

	print("\n\nintegrate(\"x*sqrt(3-x**2)*x\",\"x\") = ")
	print(integrate("x*sqrt(3-x**2)*x","x"))

	print("\n\nintegrate(\"1/(x**2+2)\",\"x\") = ")
	print(integrate("1/(x**2+2)","x"))

	print("\n\nintegrate(\"0/(x**2+2)\",\"x\") = ")
	print(integrate("0/(x**2+2)","x"))

	print("\n\nintegrate(\"0/(-x**2+2)\",\"x\") = ")
	print(integrate("0/(-x**2+2)","x"))

	print("\n\nintegrate(\"1/(-x**2+2)\",\"x\") = ")
	print(integrate("1/(-x**2+2)","x"))

	print("\n\nintegrate(\"1/x**1/sqrt(2+2*x)\",\"x\") = ")
	print(integrate("1/x**1/sqrt(2+2*x)","x"))

	print("\n\nintegrate(\"x**2/(3+4*x)\",\"x\") = ")
	print(integrate("x**2/(3+4*x)","x"))

	print("\n\nintegrate(\"sqrt(z*1.1+1)*z**6\",\"z\") = ")
	print(integrate("sqrt(z*1.1+1)*z**6","z"))

	print("\n\nintegrate(\"1/sqrt(2+z*3)\",\"z\") = ")
	print(integrate("1/sqrt(2+z*3)","z"))

	print("\n\nintegrate(\"1/(-3-4*x)\",\"x\") = ")
	print(integrate("1/(-3-4*x)","x"))

	print("\n\nintegrate(\"1/(x-3)\",\"x\") = ")
	print(integrate("1/(x-3)","x"))

	print("\n\nintegrate(\"x*(x*-4-3)**-1\",\"x\") = ")
	print(integrate("x*(x*-4-3)**-1","x"))

	print("\n\nintegrate(\"x*(-x-5)**-1\",\"x\") = ")
	print(integrate("x*(-x-5)**-1","x"))

	print("\n\nintegrate(\"x/(-4+x)\",\"x\") = ")
	print(integrate("x/(-4+x)","x"))

	print("\n\nintegrate(\"(-x-5)**-1*x**2\",\"x\") = ")
	print(integrate("(-x-5)**-1*x**2","x"))

	print("\n\nintegrate(\"x**2/(-4+x)\",\"x\") = ")
	print(integrate("x**2/(-4+x)","x"))

	print("\n\nintegrate(\"1/(x+x**2)\",\"x\") = ")
	print(integrate("1/(x+x**2)","x"))

	print("\n\nintegrate(\"1/(-x-x**2)\",\"x\") = ")
	print(integrate("1/(-x-x**2)","x"))

	print("\n\nintegrate(\"1/(x**2+x**3)\",\"x\") = ")
	print(integrate("1/(x**2+x**3)","x"))

	try
		print("\n\nintegrate(\"1/(-x**2-x**3)\",\"x\") = ")
		print(integrate("1/(-x**2-x**3)","x"))
	catch (var1 = info) == info
		print("throws an exception : " + var1)
	endtry

	print("\n\nintegrate(\"1/(-2*x**2+3*x**3)\",\"x\") = ")
	print(integrate("1/(-2*x**2+3*x**3)","x"))

	print("\n\nintegrate(\"(3+x)**0.5\",\"x\") = ")
	print(integrate("(3+x)**0.5","x"))

	print("\n\nintegrate(\"sqrt(-x+4)\",\"x\") = ")
	print(integrate("sqrt(-x+4)","x"))

	print("\n\nintegrate(\"sqrt(-2*x+4)\",\"x\") = ")
	print(integrate("sqrt(-2*x+4)","x"))

	print("\n\nintegrate(\"x*sqrt(1+x)\",\"x\") = ")
	print(integrate("x*sqrt(1+x)","x"))

	print("\n\nintegrate(\"(4-x)**0.5*x\",\"x\") = ")
	print(integrate("(4-x)**0.5*x","x"))

	print("\n\nintegrate(\"(4-3i*x)**0.5*x\",\"x\") = ")
	print(integrate("(4-3i*x)**0.5*x","x"))

	print("\n\nintegrate(\"(4-3i*x)**0.5*x**6\",\"x\") = ")
	print(integrate("(4-3i*x)**0.5*x**6","x"))

	print("\n\nintegrate(\"(3+x)**0.5*x**-1\",\"x\") = ")
	print(integrate("(3+x)**0.5*x**-1","x"))

	print("\n\nintegrate(\"x**-1*sqrt(-x-4)\",\"x\") = ")
	print(integrate("x**-1*sqrt(-x-4)","x"))

	print("\n\nintegrate(\"(4-x)**0.5/x**5\",\"x\") = ")
	print(integrate("(4-x)**0.5/x**5","x"))

	print("\n\nintegrate(\"sqrt(-4-2*x)/x**5\",\"x\") = ")
	print(integrate("sqrt(-4-2*x)/x**5","x"))

	print("\n\nintegrate(\"1/sqrt(3+2*x)\",\"x\") = ")
	print(integrate("1/sqrt(3+2*x)","x"))

	print("\n\nintegrate(\"1/sqrt(3-x)\",\"x\") = ")
	print(integrate("1/sqrt(3-x)","x"))

	print("\n\nintegrate(\"(3+x)**-0.5\",\"x\") = ")
	print(integrate("(3+x)**-0.5","x"))

	print("\n\nintegrate(\"1/(-x-3)**0.5\",\"x\") = ")
	print(integrate("1/(-x-3)**0.5","x"))

	print("\n\nintegrate(\"1/(x*(2+x)**0.5)\",\"x\") = ")
	print(integrate("1/(x*(2+x)**0.5)","x"))

	print("\n\nintegrate(\"1/x*(2+x)**-0.5\",\"x\") = ")
	print(integrate("1/x*(2+x)**-0.5","x"))

	print("\n\nintegrate(\"1/x/(2+x)**0.5\",\"x\") = ")
	print(integrate("1/x/(2+x)**0.5","x"))

	print("\n\nintegrate(\"1/x**5/sqrt(x+1)\",\"x\") = ")
	print(integrate("1/x**5/sqrt(x+1)","x"))

	print("\n\nintegrate(\"x**-5*(x+1)**-0.5\",\"x\") = ")
	print(integrate("x**-5*(x+1)**-0.5","x"))

	print("\n\nintegrate(\"1/(x+1)**0.5/x**5\",\"x\") = ")
	print(integrate("1/(x+1)**0.5/x**5","x"))

	print("\n\nintegrate(\"1/(x**2-3)\",\"x\") = ")
	print(integrate("1/(x**2-3)","x"))

	print("\n\nintegrate(\"1/(x**2+3)\",\"x\") = ")
	print(integrate("1/(x**2+3)","x"))

	print("\n\nintegrate(\"1/(-(x**2)-3)\",\"x\") = ")
	print(integrate("1/(-(x**2)-3)","x"))

	print("\n\nintegrate(\"1/(-(x**2)+3)\",\"x\") = ")
	print(integrate("1/(-(x**2)+3)","x"))

	print("\n\nintegrate(\"1/(3-x**2)\",\"x\") = ")
	print(integrate("1/(3-x**2)","x"))

	print("\n\nintegrate(\"1/(3-2*x**2)\",\"x\") = ")
	print(integrate("1/(3-2*x**2)","x"))

	print("\n\nintegrate(\"1/(3+2*x**2)\",\"x\") = ")
	print(integrate("1/(3+2*x**2)","x"))

	print("\n\nintegrate(\"1/(3--2*x**2)\",\"x\") = ")
	print(integrate("1/(3--2*x**2)","x"))

	print("\n\nintegrate(\"(x**2-3)**0.5\",\"x\") = ")
	print(integrate("(x**2-3)**0.5","x"))

	print("\n\nintegrate(\"(x**2-3)**0.5*x**2\",\"x\") = ")
	print(integrate("(x**2-3)**0.5*x**2","x"))

	print("\n\nintegrate(\"(x**2+3)**0.5*x**-1\",\"x\") = ")
	print(integrate("(x**2+3)**0.5*x**-1","x"))

	try
		print("\n\nintegrate(\"1/x*sqrt(x**2-3)\",\"x\") = ")
		print(integrate("1/x*sqrt(x**2-3)","x"))
	catch (var1 = info) == info
		print("throws an exception : " + var1)
	endtry

	print("\n\nintegrate(\"(x**2-3)**0.5/x**2\",\"x\") = ")
	print(integrate("(x**2-3)**0.5/x**2","x"))

	print("\n\nintegrate(\"(x**2-3)**0.5*x**-2\",\"x\") = ")
	print(integrate("(x**2-3)**0.5*x**-2","x"))

	print("\n\nintegrate(\"1/(x**2-3)**0.5\",\"x\") = ")
	print(integrate("1/(x**2-3)**0.5","x"))

	print("\n\nintegrate(\"(x**2-3)**-0.5\",\"x\") = ")
	print(integrate("(x**2-3)**-0.5","x"))

	print("\n\nintegrate(\"(x**2-3)**-0.5*x**2\",\"x\") = ")
	print(integrate("(x**2-3)**-0.5*x**2","x"))

	print("\n\nintegrate(\"x**2/(x**2-3)**0.5\",\"x\") = ")
	print(integrate("x**2/(x**2-3)**0.5","x"))

	print("\n\nintegrate(\"1/(3+x**2)**0.5/x\",\"x\") = ")
	print(integrate("1/(3+x**2)**0.5/x","x"))

	print("\n\nintegrate(\"1/(3+x**2)**0.5/x**2\",\"x\") = ")
	print(integrate("1/(3+x**2)**0.5/x**2","x"))

	print("\n\nintegrate(\"x**-2/(3+x**2)**0.5\",\"x\") = ")
	print(integrate("x**-2/(3+x**2)**0.5","x"))

	print("\n\nintegrate(\"x**-3/(3+x**2)**0.5*x\",\"x\") = ")
	print(integrate("x**-3/(3+x**2)**0.5*x","x"))

	print("\n\nintegrate(\"1/(-(x**2)-3)**0.5\",\"x\") = ")
	print(integrate("1/(-(x**2)-3)**0.5","x"))

	print("\n\nintegrate(\"(-(x**2)+3)**-0.5\",\"x\") = ")
	print(integrate("(-(x**2)+3)**-0.5","x"))

	print("\n\nintegrate(\"(-(x**2)+3)**0.5\",\"x\") = ")
	print(integrate("(-(x**2)+3)**0.5","x"))

	print("\n\nintegrate(\"sqrt(-(x**2)+3)\",\"x\") = ")
	print(integrate("sqrt(-(x**2)+3)","x"))

	print("\n\nintegrate(\"(-(x**2)+3)**0.5*x**2\",\"x\") = ")
	print(integrate("(-(x**2)+3)**0.5*x**2","x"))

	print("\n\nintegrate(\"(-(x**2)+3)**0.5/x\",\"x\") = ")
	print(integrate("(-(x**2)+3)**0.5/x","x"))

	print("\n\nintegrate(\"(-(x**2)+3)**0.5*x**-2\",\"x\") = ")
	print(integrate("(-(x**2)+3)**0.5*x**-2","x"))

	print("\n\nintegrate(\"(-(x**2)+3)**0.5/x**2\",\"x\") = ")
	print(integrate("(-(x**2)+3)**0.5/x**2","x"))

	try
		print("\n\nintegrate(\"(-(x**2)+3)**-0.5/x\",\"x\") = ")
		print(integrate("(-(x**2)+3)**-0.5/x","x"))
	catch (var1 = info) == info
		print("throws an exception : " + var1)
	endtry

	print("\n\nintegrate(\"1/x*(-(x**2)+3)**-0.5\",\"x\") = ")
	print(integrate("1/x*(-(x**2)+3)**-0.5","x"))

	print("\n\nintegrate(\"1/sqrt(3-x**2)/x\",\"x\") = ")
	print(integrate("1/sqrt(3-x**2)/x","x"))

	print("\n\nintegrate(\"x**2*(-(x**2)+3)**-0.5\",\"x\") = ")
	print(integrate("x**2*(-(x**2)+3)**-0.5","x"))

	print("\n\nintegrate(\"x**2/(-(x**2)+3)**0.5\",\"x\") = ")
	print(integrate("x**2/(-(x**2)+3)**0.5","x"))

	try
		print("\n\nintegrate(\"x**-2/(-(x**2)+3)**0.5\",\"x\") = ")
		print(integrate("x**-2/(-(x**2)+3)**0.5","x"))
	catch (var1 = info) == info
		print("throws an exception : " + var1)
	endtry

	print("\n\nintegrate(\"1/x**2/(-(x**2)+3)**0.5\",\"x\") = ")
	print(integrate("1/x**2/(-(x**2)+3)**0.5","x"))

	print("\n\nintegrate(\"1/x**2*(-(x**2)+3)**-0.5\",\"x\") = ")
	print(integrate("1/x**2*(-(x**2)+3)**-0.5","x"))

	print("\n\nintegrate(\"(-(x**2)+3)**-0.5*x**-2\",\"x\") = ")
	print(integrate("(-(x**2)+3)**-0.5*x**-2","x"))

	print("\n\nintegrate(\"(x**2+x-3)**-0.5\",\"x\") = ")
	print(integrate("(x**2+x-3)**-0.5","x"))

	try
		print("\n\nintegrate(\"sqrt((-x-x**2+4)**-1)\",\"x\") = ")
		print(integrate("sqrt((-x-x**2+4)**-1)","x"))
	catch (var1 = info) == info
		print("throws an exception : " + var1)
	endtry

	try
		print("\n\nintegrate(\"sqrt((-x**2-x+4)**-1)\",\"x\") = ")
		print(integrate("sqrt((-x**2-x+4)**-1)","x"))
	catch (var1 = info) == info
		print("throws an exception : " + var1)
	endtry

	print("\n\nintegrate(\"sqrt(1/(-x**2-x+4))\",\"x\") = ")
	print(integrate("sqrt(1/(-x**2-x+4))","x"))

	print("\n\nintegrate(\"sqrt(1/(-(x**2)-x+4))\",\"x\") = ")
	print(integrate("sqrt(1/(-(x**2)-x+4))","x"))

	print("\n\nintegrate(\"1/(-x-x**2+4)**0.5\",\"x\") = ")
	print(integrate("1/(-x-x**2+4)**0.5","x"))

	print("\n\nintegrate(\"x/(-x-x**2+4)**0.5\",\"x\") = ")
	print(integrate("x/(-x-x**2+4)**0.5","x"))

	print("\n\nintegrate(\"x*(-(x**2)-x+4)**-0.5\",\"x\") = ")
	print(integrate("x*(-(x**2)-x+4)**-0.5","x"))

	try
		print("\n\nintegrate(\"1/(-(x**2)-x+4)**0.5*x\",\"x\") = ")
		print(integrate("1/(-(x**2)-x+4)**0.5*x","x"))
	catch (var1 = info) == info
		print("throws an exception : " + var1)
	endtry

	try
		print("\n\nintegrate(\"x**-1/(x**2+x-4)**0.5\",\"x\") = ")
		print(integrate("x**-1/(x**2+x-4)**0.5","x"))
	catch (var1 = info) == info
		print("throws an exception : " + var1)
	endtry

	print("\n\nintegrate(\"1/x/(-x-x**2+4)**0.5\",\"x\") = ")
	print(integrate("1/x/(-x-x**2+4)**0.5","x"))

	try
		print("\n\nintegrate(\"x**-1*(-(x**2)-x+4)**-0.5\",\"x\") = ")
		print(integrate("x**-1*(-(x**2)-x+4)**-0.5","x"))
	catch (var1 = info) == info
		print("throws an exception : " + var1)
	endtry

	try
		print("\n\nintegrate(\"1/(-(x**2)-x+4)**0.5/x\",\"x\") = ")
		print(integrate("1/(-(x**2)-x+4)**0.5/x","x"))
	catch (var1 = info) == info
		print("throws an exception : " + var1)
	endtry

	try
		print("\n\nintegrate(\"1/(-(x**2)-x+4)**0.5/(x*10)\",\"x\") = ")
		print(integrate("1/(-(x**2)-x+4)**0.5/(x*10)","x"))
	catch (var1 = info) == info
		print("throws an exception : " + var1)
	endtry

	try
		print("\n\nintegrate(\"1/(-(x**2)-x+4)**0.5/x/10\",\"x\") = ")
		print(integrate("1/(-(x**2)-x+4)**0.5/x/10","x"))
	catch (var1 = info) == info
		print("throws an exception : " + var1)
	endtry

	try
		print("\n\nintegrate(\"(-(x**2)-x+4)**-0.5/x/10\",\"x\") = ")
		print(integrate("(-(x**2)-x+4)**-0.5/x/10","x"))
	catch (var1 = info) == info
		print("throws an exception : " + var1)
	endtry

	try
		print("\n\nintegrate(\"0.1*(-(x**2)-x+4)**-0.5/x\",\"x\") = ")
		print(integrate("0.1*(-(x**2)-x+4)**-0.5/x","x"))
	catch (var1 = info) == info
		print("throws an exception : " + var1)
	endtry

	try
		print("\n\nintegrate(\"(x**2+x-4)**-0.5/x\",\"x\") = ")
		print(integrate("(x**2+x-4)**-0.5/x","x"))
	catch (var1 = info) == info
		print("throws an exception : " + var1)
	endtry

	try
		print("\n\nintegrate(\"2*(1/(-(x**2)-x+4)**0.5/x)\",\"x\") = ")
		print(integrate("2*(1/(-(x**2)-x+4)**0.5/x)","x"))
	catch (var1 = info) == info
		print("throws an exception : " + var1)
	endtry

	print("\n\nintegrate(\"sin(x)\",\"x\") = ")
	print(integrate("sin(x)","x"))

	print("\n\nintegrate(\"1/sin(x)**-2\",\"x\") = ")
	print(integrate("1/sin(x)**-2","x"))

	print("\n\nintegrate(\"1/sin(x)**-7\",\"x\") = ")
	print(integrate("1/sin(x)**-7","x"))

	print("\n\nintegrate(\"cos(x)\",\"x\") = ")
	print(integrate("cos(x)","x"))

	print("\n\nintegrate(\"cos(x)**2\",\"x\") = ")
	print(integrate("cos(x)**2","x"))

	print("\n\nintegrate(\"cos(x)**4\",\"x\") = ")
	print(integrate("cos(x)**4","x"))

	print("\n\nintegrate(\"tan(x)\",\"x\") = ")
	print(integrate("tan(x)","x"))

	print("\n\nintegrate(\"tan(x)**2\",\"x\") = ")
	print(integrate("tan(x)**2","x"))

	print("\n\nintegrate(\"tan(x)**3\",\"x\") = ")
	print(integrate("tan(x)**3","x"))

	print("\n\nintegrate(\"1/tan(x)\",\"x\") = ")
	print(integrate("1/tan(x)","x"))

	print("\n\nintegrate(\"tan(x)**-2\",\"x\") = ")
	print(integrate("tan(x)**-2","x"))

	print("\n\nintegrate(\"tan(x)**-3\",\"x\") = ")
	print(integrate("tan(x)**-3","x"))

	print("\n\nintegrate(\"1/tan(x)**3\",\"x\") = ")
	print(integrate("1/tan(x)**3","x"))

	print("\n\nintegrate(\"tan(x)**-1\",\"x\") = ")
	print(integrate("tan(x)**-1","x"))

	print("\n\nintegrate(\"sin(x)**-1\",\"x\") = ")
	print(integrate("sin(x)**-1","x"))

	print("\n\nintegrate(\"1/sin(x)\",\"x\") = ")
	print(integrate("1/sin(x)","x"))

	print("\n\nintegrate(\"1/sin(x)**2\",\"x\") = ")
	print(integrate("1/sin(x)**2","x"))

	print("\n\nintegrate(\"sin(x)**-2\",\"x\") = ")
	print(integrate("sin(x)**-2","x"))

	print("\n\nintegrate(\"1/sin(x)**-4\",\"x\") = ")
	print(integrate("1/sin(x)**-4","x"))

	print("\n\nintegrate(\"sin(x)**-4\",\"x\") = ")
	print(integrate("sin(x)**-4","x"))

	print("\n\nintegrate(\"1/sin(x)**4\",\"x\") = ")
	print(integrate("1/sin(x)**4","x"))

	print("\n\nintegrate(\"1/sin(x)/tan(x)\",\"x\") = ")
	print(integrate("1/sin(x)/tan(x)","x"))

	print("\n\nintegrate(\"tan(x)**-1/sin(x)\",\"x\") = ")
	print(integrate("tan(x)**-1/sin(x)","x"))

	print("\n\nintegrate(\"sin(x)**-1/tan(x)\",\"x\") = ")
	print(integrate("sin(x)**-1/tan(x)","x"))

	print("\n\nintegrate(\"sin(x)**-1*tan(x)**-1\",\"x\") = ")
	print(integrate("sin(x)**-1*tan(x)**-1","x"))

	print("\n\nintegrate(\"cos(x)**-1\",\"x\") = ")
	print(integrate("cos(x)**-1","x"))

	print("\n\nintegrate(\"1/cos(x)\",\"x\") = ")
	print(integrate("1/cos(x)","x"))

	print("\n\nintegrate(\"1/cos(x)**2\",\"x\") = ")
	print(integrate("1/cos(x)**2","x"))

	print("\n\nintegrate(\"cos(x)**-2\",\"x\") = ")
	print(integrate("cos(x)**-2","x"))

	print("\n\nintegrate(\"1/cos(x)**-4\",\"x\") = ")
	print(integrate("1/cos(x)**-4","x"))

	print("\n\nintegrate(\"cos(x)**-4\",\"x\") = ")
	print(integrate("cos(x)**-4","x"))

	print("\n\nintegrate(\"1/cos(x)**4\",\"x\") = ")
	print(integrate("1/cos(x)**4","x"))

	print("\n\nintegrate(\"1/cos(x)*tan(x)\",\"x\") = ")
	print(integrate("1/cos(x)*tan(x)","x"))

	print("\n\nintegrate(\"cos(x)**(-1)*tan(x)\",\"x\") = ")
	print(integrate("cos(x)**(-1)*tan(x)","x"))

	print("\n\nintegrate(\"asin(x)\",\"x\") = ")
	print(integrate("asin(x)","x"))

	print("\n\nintegrate(\"acos(x)\",\"x\") = ")
	print(integrate("acos(x)","x"))

	print("\n\nintegrate(\"atan(x)\",\"x\") = ")
	print(integrate("atan(x)","x"))

	print("\n\nintegrate(\"e**(2*x)\",\"x\") = ")
	print(integrate("e**(2*x)","x"))

	print("\n\nintegrate(\"exp(x)/10\",\"x\") = ")
	print(integrate("exp(x)/10","x"))

	print("\n\nintegrate(\"7**x\",\"x\") = ")
	print(integrate("7**x","x"))

	print("\n\nintegrate(\"x*e**(9*x)\",\"x\") = ")
	print(integrate("x*e**(9*x)","x"))

	print("\n\nintegrate(\"x*exp(9*x)\",\"x\") = ")
	print(integrate("x*exp(9*x)","x"))

	print("\n\nintegrate(\"x*e**x\",\"x\") = ")
	print(integrate("x*e**x","x"))

	print("\n\nintegrate(\"x*exp(x)\",\"x\") = ")
	print(integrate("x*exp(x)","x"))

	print("\n\nintegrate(\"x*e**-x\",\"x\") = ")
	print(integrate("x*e**-x","x"))

	print("\n\nintegrate(\"x*exp(-x)\",\"x\") = ")
	print(integrate("x*exp(-x)","x"))

	print("\n\nintegrate(\"x**1*exp(-x)\",\"x\") = ")
	print(integrate("x**1*exp(-x)","x"))

	print("\n\nintegrate(\"x**4*e**(9*x)\",\"x\") = ")
	print(integrate("x**4*e**(9*x)","x"))

	print("\n\nintegrate(\"x**4*exp(9*x)\",\"x\") = ")
	print(integrate("x**4*exp(9*x)","x"))

	print("\n\nintegrate(\"x**4*e**x\",\"x\") = ")
	print(integrate("x**4*e**x","x"))

	print("\n\nintegrate(\"x**4*exp(x)\",\"x\") = ")
	print(integrate("x**4*exp(x)","x"))

	print("\n\nintegrate(\"x**4*e**-x\",\"x\") = ")
	print(integrate("x**4*e**-x","x"))

	print("\n\nintegrate(\"x**4*exp(-x)\",\"x\") = ")
	print(integrate("x**4*exp(-x)","x"))

	print("\n\nintegrate(\"e**(3*x)*sin(4*x)\",\"x\") = ")
	print(integrate("e**(3*x)*sin(4*x)","x"))

	print("\n\nintegrate(\"e**(x)*sin(x)\",\"x\") = ")
	print(integrate("e**(x)*sin(x)","x"))

	print("\n\nintegrate(\"e**(x)*sin(-x)\",\"x\") = ")
	print(integrate("e**(x)*sin(-x)","x"))

	print("\n\nintegrate(\"e**(-x)*sin(x)\",\"x\") = ")
	print(integrate("e**(-x)*sin(x)","x"))

	print("\n\nintegrate(\"e**(-x)*sin(-x)\",\"x\") = ")
	print(integrate("e**(-x)*sin(-x)","x"))

	print("\n\nintegrate(\"sin(x)/e**(-x)\",\"x\") = ")
	print(integrate("sin(x)/e**(-x)","x"))

	print("\n\nintegrate(\"sin(-x)/e**(x)\",\"x\") = ")
	print(integrate("sin(-x)/e**(x)","x"))

	print("\n\nintegrate(\"e**(3*x)*cos(4*x)\",\"x\") = ")
	print(integrate("e**(3*x)*cos(4*x)","x"))

	print("\n\nintegrate(\"e**(x)*cos(x)\",\"x\") = ")
	print(integrate("e**(x)*cos(x)","x"))

	print("\n\nintegrate(\"e**(x)*cos(-x)\",\"x\") = ")
	print(integrate("e**(x)*cos(-x)","x"))

	print("\n\nintegrate(\"e**(-x)*cos(x)\",\"x\") = ")
	print(integrate("e**(-x)*cos(x)","x"))

	print("\n\nintegrate(\"e**(-x)*cos(-x)\",\"x\") = ")
	print(integrate("e**(-x)*cos(-x)","x"))

	print("\n\nintegrate(\"cos(x)/e**(-x)\",\"x\") = ")
	print(integrate("cos(x)/e**(-x)","x"))

	print("\n\nintegrate(\"cos(-x)/e**(x)\",\"x\") = ")
	print(integrate("cos(-x)/e**(x)","x"))

	print("\n\nintegrate(\"log(x)\",\"x\") = ")
	print(integrate("log(x)","x"))

	print("\n\nintegrate(\"x*log(x)\",\"x\") = ")
	print(integrate("x*log(x)","x"))

	print("\n\nintegrate(\"x**4*log(x)\",\"x\") = ")
	print(integrate("x**4*log(x)","x"))

	try
		print("\n\nintegrate(\"x**-1/log(x)\",\"x\") = ")
		print(integrate("x**-1/log(x)","x"))
	catch (var1 = info) == info
		print("throws an exception : " + var1)
	endtry

	print("\n\nintegrate(\"1/x/log(x)\",\"x\") = ")
	print(integrate("1/x/log(x)","x"))

	print("\n\nintegrate(\"sinh(x)\",\"x\") = ")
	print(integrate("sinh(x)","x"))

	print("\n\nintegrate(\"cosh(x)\",\"x\") = ")
	print(integrate("cosh(x)","x"))

	print("\n\nintegrate(\"tanh(x)\",\"x\") = ")
	print(integrate("tanh(x)","x"))

	print("\n\nintegrate(\"sin(x)*cos(x)\",\"x\") = ")
	print(integrate("sin(x)*cos(x)","x"))
	
	print("\n\nintegrate(\"sin(x)/cos(x)\",\"x\") = ")
	print(integrate("sin(x)/cos(x)","x"))
	
	print("\n\nintegrate(\"cos(x)/sin(x)\",\"x\") = ")
	print(integrate("cos(x)/sin(x)","x"))
	
	print("\n\nintegrate(\"cos(x)\\sin(x)\",\"x\") = ")
	print(integrate("cos(x)\\sin(x)","x"))
	
	print("\n\nintegrate(\"sin(x)**-1/cos(x)**-1\",\"x\") = ")
	print(integrate("sin(x)**-1/cos(x)**-1","x"))
	
	print("\n\nintegrate(\"tan(x)/cos(x)**2\",\"x\") = ")
	print(integrate("tan(x)/cos(x)**2","x"))
	
	print("\n\nintegrate(\"tan(x)*cos(x)**-2\",\"x\") = ")
	print(integrate("tan(x)*cos(x)**-2","x"))
	
	print("\n\nintegrate(\"log(1/cos(x)+tan(x))/cos(x)\",\"x\") = ")
	print(integrate("log(1/cos(x)+tan(x))/cos(x)","x"))
	
	print("\n\nintegrate(\"asin(x/3)/sqrt(9-x**2)\",\"x\") = ")
	print(integrate("asin(x/3)/sqrt(9-x**2)","x"))
	
	print("\n\nintegrate(\"1/4*atan(x*2)/(2+8*x**2)\",\"x\") = ")
	print(integrate("1/4*atan(x*2)/(2+8*x**2)","x"))
	
	print("\n\nintegrate(\"atan(x*2)/(2+8*x**2)*3\",\"x\") = ")
	print(integrate("atan(x*2)/(2+8*x**2)*3","x"))
	
	print("\n\nintegrate(\"x**3/2\",\"x\") = ")
	print(integrate("x**3/2","x"))
	
	print("\n\nintegrate(\"x**-1/2\",\"x\") = ")
	print(integrate("x**-1/2","x"))
	
	print("\n\nintegrate(\"(x/2+sin(x*2)/4)**2*cos(x)**2\",\"x\") = ")
	print(integrate("(x/2+sin(x*2)/4)**2*cos(x)**2","x"))
	
	try
		print("\n\nintegrate(\"(x/2+sin(x*2)/4)*cos(x)**2\",\"x\") = ")
		print(integrate("(x/2+sin(x*2)/4)*cos(x)**2","x"))
	catch (var1 = info) == info
		print("throws an exception : " + var1)
	endtry
	
	try
		print("\n\nintegrate(\"(x*0.5+sin(x*2)/4)**2*cos(x)**2\",\"x\") = ")
		print(integrate("(x*0.5+sin(x*2)/4)**2*cos(x)**2","x"))
	catch (var1 = info) == info
		print("throws an exception : " + var1)
	endtry
	
	try
		print("\n\nintegrate(\"0.5*log(4*sqrt(4*x**2+2*x+1)+8*x+2)/sqrt(4*x**2+2*x+1)\",\"x\") = ")
		print(integrate("0.5*log(4*sqrt(4*x**2+2*x+1)+8*x+2)/sqrt(4*x**2+2*x+1)","x"))
	catch (var1 = info) == info
		print("throws an exception : " + var1)
	endtry
	
	print("\n\nintegrate(\"1/sqrt(4*x**2+2*x+1)*log(4*sqrt(4*x**2+2*x+1)+8*x+2)\",\"x\") = ")
	print(integrate("1/sqrt(4*x**2+2*x+1)*log(4*sqrt(4*x**2+2*x+1)+8*x+2)","x"))
	
	print("\n\nintegrate(\"0.5/sqrt(4*x**2+2*x+1)*log(4*sqrt(4*x**2+2*x+1)+8*x+2)\",\"x\") = ")
	print(integrate("0.5/sqrt(4*x**2+2*x+1)*log(4*sqrt(4*x**2+2*x+1)+8*x+2)","x"))
	
	print("\n\nintegrate(\"5*(4*x**2+2*x+1)**-0.5*log(4*sqrt(4*x**2+2*x+1)+8*x+2)\",\"x\") = ")
	print(integrate("5*(4*x**2+2*x+1)**-0.5*log(4*sqrt(4*x**2+2*x+1)+8*x+2)","x"))
	
	print("\n\nintegrate(\"0.5*(4*x**2+2*x+1)**-0.5*log(4*sqrt(4*x**2+2*x+1)+8*x+2)\",\"x\") = ")
	print(integrate("0.5*(4*x**2+2*x+1)**-0.5*log(4*sqrt(4*x**2+2*x+1)+8*x+2)","x"))
	
	print("\n\nintegrate(\"exp(-x)\",\"x\") = ")
	print(integrate("exp(-x)","x"))

	print("\n\nintegrate(\"sin(-x)\",\"x\") = ")
	print(integrate("sin(-x)","x"))
	
	print("\n\nintegrate(\"cos(-x)\",\"x\") = ")
	print(integrate("cos(-x)","x"))

	try
		print("\n\nintegrate(\"1/4*atan(-x*2)/(2+8*-x**2)\",\"x\") = ")
		print(integrate("1/4*atan(-x*2)/(2+8*-x**2)","x"))
	catch (var1 = info) == info
		print("throws an exception : " + var1)
	endtry

endf

Function compareAB(strangeA, strangeB)
	print_line(strangeA + " > " + strangeB + " is " + (strangeA > strangeB))
	print_line(strangeA + " >= " + strangeB + " is " + (strangeA >= strangeB))
	print_line(strangeA + " < " + strangeB + " is " + (strangeA < strangeB))
	print_line(strangeA + " <= " + strangeB + " is " + (strangeA <= strangeB))
	print_line(strangeA + " == " + strangeB + " is " + (strangeA == strangeB))
	print_line(strangeA + " != " + strangeB + " is " + (strangeA != strangeB))
endf

Help
This function is to run regression test in PC to verify the correctness of the scripting language. 
Endh

Function regtest()
	regtest(1)
Endf

Help
This function is to run regression test to verify the correctness of the scripting language with selected regmode. 
Endh
Function regtest(regmode)
// internal functions
	variable varStartTS = now()
	print("\nrand() = " + rand())
	
	print_line()
	compareAB(NAN, NAN)
	compareAB(INF, INF)
	compareAB(-INF, -INF)
	compareAB(NANi, NANi)
	compareAB(INFi, INFi)
	compareAB(-INFi, -INFi)
	compareAB(NAN, INF)
	compareAB(INF, NAN)
	compareAB(-INF, INF)
	compareAB(INF, -INF)
	compareAB(NAN, -INF)
	compareAB(-INF, NAN)
	compareAB(INF, 0)
	compareAB(0, INF)
	compareAB(-INF, 0)
	compareAB(0, -INF)
	compareAB(NAN, 0)
	compareAB(0, NAN)
	compareAB(INF, 0.373241)
	compareAB(0.373241, INF)
	compareAB(-INF, 0.373241)
	compareAB(0.373241, -INF)
	compareAB(NAN, 0.373241)
	compareAB(0.373241, NAN)
	compareAB(INF, -0.373241)
	compareAB(-0.373241, INF)
	compareAB(-INF, -0.373241)
	compareAB(-0.373241, -INF)
	compareAB(NAN, -0.373241)
	compareAB(-0.373241, NAN)
	compareAB(INF, 0.373241e57)
	compareAB(0.373241e57, INF)
	compareAB(-INF, 0.373241e57)
	compareAB(0.373241e57, -INF)
	compareAB(NAN, 0.373241e57)
	compareAB(0.373241e57, NAN)
	compareAB(INF, -0.373241e57)
	compareAB(-0.373241e57, INF)
	compareAB(-INF, -0.373241e57)
	compareAB(-0.373241e57, -INF)
	compareAB(NAN, -0.373241e57)
	compareAB(-0.373241e57, NAN)
	compareAB(INF, 0.373241e-57)
	compareAB(0.373241e-57, INF)
	compareAB(-INF, 0.373241e-57)
	compareAB(0.373241e-57, -INF)
	compareAB(NAN, 0.373241e-57)
	compareAB(0.373241e-57, NAN)
	compareAB(INF, -0.373241e-57)
	compareAB(-0.373241e-57, INF)
	compareAB(-INF, -0.373241e-57)
	compareAB(-0.373241e-57, -INF)
	compareAB(NAN, -0.373241e-57)
	compareAB(-0.373241e-57, NAN)
	compareAB(INF, 0.373241e571)
	compareAB(0.373241e571, INF)
	compareAB(-INF, 0.373241e571)
	compareAB(0.373241e571, -INF)
	compareAB(NAN, 0.373241e571)
	compareAB(0.373241e571, NAN)
	compareAB(INF, -0.373241e571)
	compareAB(-0.373241e571, INF)
	compareAB(-INF, -0.373241e571)
	compareAB(-0.373241e571, -INF)
	compareAB(NAN, -0.373241e571)
	compareAB(-0.373241e571, NAN)
	compareAB(3.7321e-57, 0)
	compareAB(-3.7321e-57, 0)
	compareAB(0, 3.7321e-57)
	compareAB(0, -3.7321e-57)
	
	variable originalArray = [[1,2],[3,4]]
	variable partArrayRef = originalArray[1]
	partArrayRef[1] = 9
	print_line("originalArray = " + originalArray)
	
	try
		print("\ngamma(0-2i) = " + gamma(0-2i))
	catch
		print("\ngamma(0-2i) throws an exception!")
	endtry
	try
		print("\ngamma(-1) = " + gamma(-1))
	catch
		print("\ngamma(-1) throws an exception!")
	endtry
	print("\ngamma(5) = " + gamma(5))
	print("\ngamma(5.1) = " + gamma(5.1))
	print("\ngamma(5.33327) = " + gamma(5.33327))
	print("\ngamma(5.70143) = " + gamma(5.70143))
	print("\ngamma(5.9218) = " + gamma(5.9218))
	print("\ngamma(6) = " + gamma(6))
	print("\ngamma(5+1.4i) = " + gamma(5+1.4i))
	print("\ngamma(5+0.67i) = " + gamma(5+0.67i))
	print("\ngamma(5+0.03253i) = " + gamma(5+0.03253i))
	print("\ngamma(5+0.000432421i) = " + gamma(5+0.000432421i))
	print("\ngamma(5+0.0000000322921i) = " + gamma(5+0.0000000322921i))
	print("\ngamma(5-1.4i) = " + gamma(5-1.4i))
	print("\ngamma(5-0.67i) = " + gamma(5-0.67i))
	print("\ngamma(5-0.03253i) = " + gamma(5-0.03253i))
	print("\ngamma(5-0.000432421i) = " + gamma(5-0.000432421i))
	print("\ngamma(5-0.0000000322921i) = " + gamma(5-0.0000000322921i))
	print("\ngamma(19) = " + gamma(19))
	print("\ngamma(19) - 18! = " + (gamma(19) - 18!))
	print("\nbeta(3,7) = " + beta(3, 7))

	print("\nceil(2.31) = " + ceil(2.31))
	print("\nceil(-2.31) = " + ceil(-2.31))

	print("\nfloor(2.31) = " + floor(2.31))
	print("\nfloor(-2.31) = " + floor(-2.31))

	print("\nround(2.31) = " + round(2.31))
	print("\nround(-2.31) = " + round(-2.31))
	
	print("\nround(0.12345,3) = " + round(0.12345,3))
	print("\nround(0.12345,30) = " + round(0.12345,30))
	print("\nceil(0.12345,3) = " + ceil(0.12345,3))
	print("\nfloor(0.12354,3) = " + floor(0.12354,3))
	print("\nfloor(7.12354,0) = " + floor(7.12354, 0))
	print("\nround(7.512354, 0) = " + round(7.512354, 0))
	variable varRoundTry
	try
		print("\nround(7.512354, -2.0) = " + round(7.512354, -2.0))
	catch (varRoundTry = info) == info
		print("\nround(7.512354, -2.0) throws an exception : " + varRoundTry)
	endtry
	
	try
		print("\n\ntrim(NULL) = " + trim(NULL))
	catch (varRoundTry = info) == info
		print("\n\ntrim(NULL) throws an exception")
	endtry

	try
		print("\n\ntrim_right(NULL) = " + trim_right(NULL))
	catch (varRoundTry = info) == info
		print("\n\ntrim_right(NULL) throws an exception")
	endtry

	print("\n\ntrim_left(\"   \n\t  hello \r  \t \n  \") = " + trim_left("   \n\t  hello \r  \t \n  "))
	print("\n\ntrim_right(\"   \n\t  hello \r  \t \n  \") = " + trim_right("   \n\t  hello \r  \t \n  "))
	print("\n\ntrim(\"   \n\t  hello \r  \t \n  \") = " + trim("   \n\t  hello \r  \t \n  "))
	
	print("\n\ntrim_left(\"   \n\t   \r  \t \n  \") = " + trim_left("   \n\t   \r  \t \n  "))
	print("\n\ntrim_right(\"   \n\t   \r  \t \n  \") = " + trim_right("   \n\t   \r  \t \n  "))
	print("\n\ntrim(\"   \n\t   \r  \t \n  \") = " + trim("   \n\t   \r  \t \n  "))
	
	print("\n\ntrim_left(\"\") = " + trim_left(""))
	print("\n\ntrim_right(\"\") = " + trim_right(""))
	print("\n\ntrim(\"\") = " + trim(""))
	
	print("\n\nsplit(\"hello_world 3 false\", \" \") = " + split("hello_world 3 false", " "))
	print("\n\nsplit(\"hello_world 3 false \", \" \") = " + split("hello_world 3 false ", " "))
	print("\n\nsplit(\" hello_world 3 false\", \" \") = " + split(" hello_world 3 false", " "))
	print("\n\nsplit(\" hello_world 3 false \", \" \") = " + split(" hello_world 3 false ", " "))
	print("\n\nsplit(\"\", \" \") = " + split("", " "))
	print("\n\nsplit(\"\", \"\") = " + split("", ""))
	print("\n\nsplit(\" \", \"\") = " + split(" ", ""))
	try
		print("\n\nsplit(\"2(3\",\"(\") = " + split("2(3","("))
	catch (varRoundTry = info) == info
		print("\n\nsplit(\"2(3\",\"(\") throws an exception")
	endtry
	try
		print("\n\nsplit(\"2(3\",\"\\\\(\") = " + split("2(3","\\("))
	catch (varRoundTry = info) == info
		print("\n\nsplit(\"2(3\",\"\\\\(\") throws an exception")
	endtry
	
	print("\nand(3, 4, -2, 1, 6) = " + and(3, 4, -2, 1, 6) + "\nand(3, 4, -2, 1, 0) = " + and(3, 4, -2, 1, 0))

	print("\nor(3, 0, 0, 4, -2) = " + or(3, 0, 0, 4, -2))
	print("\nor(0,0,0,0, 0) = " + or(0,0,0,0, 0))

	print("\nsin(PI * 1 /3 + PI) = " + sin(PI * 1/3 + PI))

	print("\ncos(PI * 1 /3 + PI) = " + cos(PI * 1/3 + PI))

	print("\ntan(PI * 1 /3 + PI) = " + tan(PI * 1/3 + PI))

	print("\nasin(1/2) = " + asin(1/2))

	print("\nacos(1/2) = " + acos(1/2))

	print("\natan(1/2) = " + atan(1/2))

	print("\nlog(exp(-7.326) = " + log(exp(-7.326)))
	
	print("\nsin(4 + 7.53i) = " + sin(4 + 7.53i))

	print("\nasin(-705.00165016 - 608.90333828 * i) = " + asin(-705.00165016 - 608.90333828 * i))

	print("\ncos(3.48+6.33i) = " + cos(3.48+6.33i))

	print("\nacos(-7.16+5.44i) = " + acos(-7.16+5.44i))

	print("\ntan(0.57+2.31i) = " + tan(0.57+2.31i))

	print("\natan(5.44-0.91i) = " + atan(5.44-0.91i))

	print("\nabs(4 - 3i) = " + abs(4 -3 * i))
	
	print("\nlog(2.673 + 18.56i) = " + log(2.673 + 18.56i))

	print("\npow(1.51 -5.71i, -6.48+2.21i) = " + pow(1.51 -5.71i, -6.48+2.21i))

	print("\n(1.51 -5.71i) ** (-6.48+2.21i) = " + (1.51 -5.71i) ** (-6.48+2.21i))
	
	print("\nmod(7, 4) = " + mod(7, 4))

	print("\npow(4, 1/5) = " + pow(4, 1/5))

	print("\npow(0.3, 4.7 + i*1/5) = " + pow(0.3, 4.7 + i*1/5))

	print("\npow(2.4, -3 - 3.8i) = " + pow(2.4, -3 - 3.8i))

	print("\n2.4 ** (-3 - 3.8i) = " + 2.4 ** (-3 - 3.8i))

	print("\n0.3 ** (4.7 + i*1/5) = " + 0.3 ** (4.7 + i*1/5))
	
	print("\nexp(0.37 -2.41i) = " + exp(0.37 - 2.41i))

	print("\nalloc_array([], 7) = " + alloc_array([], 7))

	print("\nalloc_array([]) = " + alloc_array([]))

	print("\nalloc_array([],[7,8,[\"hello\"],9]) = " + alloc_array([],[7,8,["hello"],9]))

	print("\nalloc_array(2,3,4) = " + alloc_array(2, 3, 4))

	print("\nsize(alloc_array(2,3,4), 2) = " + size(alloc_array(2,3,4), 2))

	print("\nadj([[1,3,-4.81-0.66i],[-0.91i, 5.774, 3.81+2.03i],[0, -6, -7.66-3i]]) = " + adj([[1,3,-4.81-0.66i],[-0.91i, 5.774, 3.81+2.03i],[0, -6, -7.66-3i]]))

	print("\ncofactor([[1,3,-4.81-0.66i],[-0.91i, 5.774, 3.81+2.03i],[0, -6, -7.66-3i]]) = " + cofactor([[1,3,-4.81-0.66i],[-0.91i, 5.774, 3.81+2.03i],[0, -6, -7.66-3i]]))

	print("\nadj([[1,-7],[-4, 6]]) = " + adj([[1,-7],[-4, 6]]))

	print("\ncofactor([[1,-7],[-4, 6]]) = " + cofactor([[1,-7],[-4, 6]]))

	print("\nset_array_elem([3, 1.9-2.7i], [1, 2, 4], 2 + 3i) = " + set_array_elem([3, 1.9-2.7i], [1, 2, 4], 2 + 3i))

	print("\nset_array_elem([1,2],[1,3],[3,4]) = " + set_array_elem([1,2],[1,3],[3,4]))
	print("\nset_array_elem([1],[1,3],[3,4]) = " + set_array_elem([1],[1,3],[3,4]))
	print("\nset_array_elem([1, NULL],[1,3],[3,4]) = " + set_array_elem([1, NULL],[1,3],[3,4]))
	print("\nset_array_elem([1, NULL, 9],[1,3],[3,4]) = " + set_array_elem([1, NULL, 9],[1,3],[3,4]))
	print("\nset_array_elem([1, [NULL], 9],[1,3],[3,4]) = " + set_array_elem([1, [NULL], 9],[1,3],[3,4]))
	print("\nset_array_elem([1, [3.7], 9],[1,3],[3,4]) = " + set_array_elem([1, [3.7], 9],[1,3],[3,4]))
	print("\nset_array_elem([1, [NULL]],[1,3],[3,4]) = " + set_array_elem([1, [NULL]],[1,3],[3,4]))
	print("\nset_array_elem([1, [3.7]],[1,3],[3,4]) = " + set_array_elem([1, [3.7]],[1,3],[3,4]))
	print_line("\nset_array_elem([[5,1, [3.7]]],[1,3],[3,4]) = " + set_array_elem([[5,1, [3.7]]],[1,3],[3,4]))

	variable alocalVar = [1,2]
	print_line("alocalVar = " + alocalVar)
	print("\nset_array_elem(alocalVar, [3], alocalVar) = " + set_array_elem(alocalVar, [3], alocalVar))	
	
	print("\n[[4 + 7.2i, -2-0.9i, 3],[0.3 - 0.6, i, sqrt(4.6)]] + [[3, 2, 1],[2,-9,5]] = " + ([[4 + 7.2i, -2-0.9i, 3],[0.3 - 0.6, i, sqrt(4.6)]] + [[3, 2, 1],[2,-9,5]]))

	print("\n[[4 + 7.2i, -2-0.9i, 3],[0.3 - 0.6, i, sqrt(4.6)]] - [[3, 2, 1],[2,-9,5]] = " + ([[4 + 7.2i, -2-0.9i, 3],[0.3 - 0.6, i, sqrt(4.6)]] - [[3, 2, 1],[2,-9,5]]))


	print("\n[[[1,2],[3,4],[5,6]],[[2,3],[4,5],[6,7]],[[3,4],[5,6],[7,8]],[[4,5],[6,7],[8,9]]] * [[3,[-1,-6,-7,-12],[0,4,-3,-2]],[[6,3,2,0],[0,0],[2]]] = ")
	print([[[1,2],[3,4],[5,6]],[[2,3],[4,5],[6,7]],[[3,4],[5,6],[7,8]],[[4,5],[6,7],[8,9]]] * [[3,[-1,-6,-7,-12],[0,4,-3,-2]],[[6,3,2,0],[0,0],[2]]])

	print("\n[[4 + 7.2i, -2-0.9i, \"hello catty!\"],[0.3 - 0.6, i, sqrt(4.6)]]' = " + [[4 + 7.2i, -2-0.9i, "hello catty!"],[0.3 - 0.6, i, sqrt(4.6)]]')

	variable evaluateVar = 3
	print("\nevaluate(\"evaluateVar + 9\") = ")
	print(evaluate("evaluateVar + 9"))
	print("\nevaluate(\"evaluateVar = -7+i-+ 9\") = ")
	print(evaluate("evaluateVar = -7+i-+ 9"))
	print("\nAfter evaluateVar = -7+i-+ 9, evaluateVar is " + evaluateVar)
	print("\nevaluate(\"evaluateVar + 9\", \"evaluateVar\", -77) = ")
	print(evaluate("evaluateVar + 9", "evaluateVar", -77))
	print("\nAfter evaluate(\"evaluateVar + 9\", \"evaluateVar\", -77), evaluateVar is " + evaluateVar)
	
	print("\nIntegrate(\"Integrate(\\\"x**2 + 2 * exp(u) - 4\\\",\\\"u\\\", 0.1, 4, 100)\", \"x\", 7+ 4i, 9+ 11i, 31) = ")
	print(Integrate("Integrate(\"x**2 + 2 * exp(u) - 4\",\"u\", 0.1, 4, 25)", "x", 7+ 4i, 9+ 11i, 11))
	print("\n\nintegrate(\"x**2*e**(-x**2)\", \"x\", -inf, inf) = " + integrate("x**2*e**(-x**2)", "x", -inf, inf))

	print("\n\n2+2**-1*2 = " + (2+2**-1*2))
	print("\n\n2+2**-1*2**2 = " + (2+2**-1*2**2))
	print("\n\n4*-3+5 = " + (4*-3+5))
	print("\n\n3+-9**2 = " + (3+-9**2))
	print("\n\n2+--+++--+-2**-++--++2---+--+1*2 = " + (2+--+++--+-2**-++--++2---+--+1*2))
	print("\n\n3|+5*2 = " + (3|+5*2))
	print("\n\n3|+5-2 = " + (3|+5-2))
	print("\n\n3*-5**2 = " + (3*-5**2))
	print("\n\n5-+2|6 = " + (5-+2|6))
	print("\n\n5**+2*3 = " + (5**+2*3))
	print("\n\n5*+2|3 = " + (5*+2|3))
	
    print("\n\n0**0 = " + (0**0))
    print("\n\n0**3 = " + (0**3))
    print("\n\n0**-4.2 = " + (0**-4.2))
    print("\n\n0**-2i = " + (0**-2i))
    print("\n\n0**7.2i = " + (0**7.2i))
    print("\n\n0**(3-2i) = " + (0**(3-2i)))
    print("\n\n0**(3+2i) = " + (0**(3+2i)))
    print("\n\n0**(-3-2i) = " + (0**(-3-2i)))
    print("\n\n0**(-3+2i) = " + (0**(-3+2i)))
    
	print("\n2**63 = ")
	print(2**63)

	print("\n2**63+2 = ")
	print(2**63+2)

	print("\n2**64 = ")
	print(2**64)

	print("\n234**8 = ")
	print(234**8)

	print("\n234.1**8 = ")
	print(234.1**8)

	print("\n234**9 = ")
	print(234**9)

	print("\n235**8 = ")
	print(235**8)

	print("\n(-2)**63 = ")
	print((-2)**63)

	print("\n(-2)**63-2 = ")
	print((-2)**63-2)

	print("\n(-2)**64 = ")
	print((-2)**64)

	print("\n(-234)**8 = ")
	print((-234)**8)

	print("\n(-234.1)**8 = ")
	print((-234.1)**8)

	print("\n(-234)**9 = ")
	print((-234)**9)

	print("\n(-235)**8 = ")
	print((-235)**8)

	print("\nsleep(3000)")
	sleep(3000)

// external functions
	print("\nteststatement():")
	teststatement()
	print("\nselectest(0.9) = ")
	print(selectest(0.9))
	print("\nselectest(-0.7) = ")
	print(selectest(-0.7))
	print("\nselectest(1) = ")
	print(selectest(1))
	print("\nselectest(2) = ")
	print(selectest(2))
	print("\nselectest(3) = ")
	print(selectest(3))
	print("\nselectest(4) = ")
	print(selectest(4))
	print("\nselectest(5) = ")
	print(selectest(5))

	print("\ntest1(1,2,3) = ")
	print(test1(1,2, 3))
	print("\ntest1(4,3,2) = ")
	print(test1(4, 3, 2))

	print("\ntest2() = ")
	print(test2())
	print("\nsize(test2()) = ")
	print(size(test2()))

	print("\nxor(4 + 7i, exp(log(4.0)) + i *(sqrt(9) + size([2, 4, 9+3i,7],1))) = ")
	print(xor(4 + 7i, exp(log(4.0)) + i *(sqrt(9) + 4)))
	print("\nxor(7,[7]) = ")
	print(xor(7, [7]))

	print("\ntorad(120 + 240i) = ")
	print(torad(120 + 240i))
	print("\ntodeg(pi * 0.3) = ")
	print(todeg(pi * 0.3))

	print("\ntanh(3) = ")
	print(tanh(3))

	print("\nsum(1, 4,7,-2, 2+i, exp(log(7))) = ")
	print(sum(1,4,7,-2, 2+i, exp(log(7))))

	print("\nstdevp(1,2,3,4) = ")
	print(stdevp(1,2,3,4))

	print("\nstdev(1,2,3,4) = ")
	print(stdev(1,2,3,4))

	print("\nsqrt(1024) = ")
	print(sqrt(1024))

	print("\nsinh(-3) = ")
	print(sinh(-3))

	print("\nquick_sort(TRUE, [3, 7,9,-5.2, 4, 8, -6,sqrt(9), 8, 7,-3,-9]) = ")
	print(quick_sort(TRUE, [3, 7,9,-5.2, 4, 8, -6,sqrt(9), 8, 7,-3,-9]))

	print("\nnot(-7) = ")
	print(not(-7))

	print("\nmin(3, 7,9,-5.2, 4, 8, -6,sqrt(9), 8, 7,-3,-9, 0, -4.22, -18/2) = ")
	print(min(3, 7,9,-5.2, 4, 8, -6,sqrt(9), 8, 7,-3,-9, 0, -4.22, -18/2))

	print("\nmed(3, 7,9,-5.2, 4, 8, -6,sqrt(9), 8, 7,-3,-9, 0, -4.22, -18/2) = ")
	print(med(3, 7,9,-5.2, 4, 8, -6,sqrt(9), 8, 7,-3,-9, 0, -4.22, -18/2))

	print("\nmed(3, 3, 3, 3, 4,4,4,4) = ")
	print(med(3, 3, 3, 3, 4,4,4,4))

	print("\nmax(3, 7,9,-5.2, 4, 8, -6,sqrt(9), 8, 7,-3,-9, 0, -4.22, log10(0.1) * -18/2) = ")
	print(max(3, 7,9,-5.2, 4, 8, -6,sqrt(9), 8, 7,-3,-9, 0, -4.22, log10(0.1) * -18/2))

	print("\nloge(exp(2.763)) = ")
	print(loge(exp(2.763)))

	print("\nlog10(0.001 * sqrt(1000)) = ")
	print(log10(0.001 * sqrt(1000)))

	print("\nlog2(1024) = ")
	print(log2(1024))

	print("\nln(0.001 * sqrt(1000)) = ")
	print(ln(0.001 * sqrt(1000)))

	print("\nlg(exp(-3.8729)) = ")
	print(lg(exp(-3.8729)))

	print("\nis_prime(61 * 61) = ")
	print(is_prime(61 * 61))

	print("\nis_prime(701) = ")
	print(is_prime(701))

	print("\nhavg(3, 7, 5, -9 + i) = ")
	print(havg(3, 7, 5, -9 + i))

	print("\ngavg(3, 7, 5, -9 + i) = ")
	print(gavg(3, 7, 5, -9 + i))

	print("\nfact(21) = ")
	print(fact(21))

	print("\ndprod([1,3,5, 7], [2,4,6,8]) = ")
	print(dprod([1,3,5,7], [2,4,6,8]))

	print("\ncosh(3) = ")
	print(cosh(3))

	print("\navg(3, 7,9-4i,-5.2, 4, 8, -6,sqrt(9), 8, 7,-3,-9 * 2.1i, 0, -4.22, -18/2) = ")
	print(avg(3, 7,9-4i,-5.2, 4, 8, -6,sqrt(9), 8, 7,-3,-9 * 2.1i, 0, -4.22, -18/2))

	print("\natanh(-0.3) = ")
	print(atanh(-0.3))

	print("\nasinh(3) = ")
	print(asinh(3))

	print("\nacosh(3) = ")
	print(acosh(3))

	print("\ntip(130, 21) = ")
	print(tip(130, 21))

	print("\ntip(130, 21%) = ")
	print(tip(130, 21%))
	
	print("\nNow test try throw catch endtry statements:\n")
	trycatch()
	print("\nNow test try throw catch endtry statements with divided by 0 test:\n")
	trycatchdivby0()
	
	print("\n[[[1,2],[3,5],[6,-2]],[[-1,7],[-3,6],[2,0]],[[0,4],[-2,3],[9,3]],[[3,-7],[-4,-1],[-2,0]]]*[[[3,7,2,-2],[5,-6,4,8],[2,9,0,3]],[[-5,-3,8,-7],[2,-4,-6,9],[-3,3,0,-2]]] = \n")
	print([[[1,2],[3,5],[6,-2]],[[-1,7],[-3,6],[2,0]],[[0,4],[-2,3],[9,3]],[[3,-7],[-4,-1],[-2,0]]]*[[[3,7,2,-2],[5,-6,4,8],[2,9,0,3]],[[-5,-3,8,-7],[2,-4,-6,9],[-3,3,0,-2]]])
	
	print("\n[[[1,2],[3,5],[6,-2]],[[-1,7],[-3,6],[2,0]],[[0,4],[-2,3],[9,3]],[[3,-7],[-4,-1],[-2,0]]]\n\\\n[[[[-7, 1, 18, -16], [9, -14, -8, 26], [-4, 15, 0, -1]], [[-16, 6, 46, -41], [25, -38, -18, 69], [-9, 42, 0, -1]], [[28, 48, -4, 2], [26, -28, 36, 30], [18, 48, 0, 22]]], [[[-38, -28, 54, -47], [9, -22, -46, 55], [-23, 12, 0, -17]], [[-39, -39, 42, -36], [-3, -6, -48, 30], [-24, -9, 0, -21]], [[6, 14, 4, -4], [10, -12, 8, 16], [4, 18, 0, 6]]], [[[-20, -12, 32, -28], [8, -16, -24, 36], [-12, 12, 0, -8]], [[-21, -23, 20, -17], [-4, 0, -26, 11], [-13, -9, 0, -12]], [[12, 54, 42, -39], [51, -66, 18, 99], [9, 90, 0, 21]]], [[[44, 42, -50, 43], [1, 10, 54, -39], [27, 6, 0, 23]], [[-7, -25, -16, 15], [-22, 28, -10, -41], [-5, -39, 0, -10]], [[-6, -14, -4, 4], [-10, 12, -8, -16], [-4, -18, 0, -6]]]] = \n")
	
	print([[[1,2],[3,5],[6,-2]],[[-1,7],[-3,6],[2,0]],[[0,4],[-2,3],[9,3]],[[3,-7],[-4,-1],[-2,0]]]\[[[[-7, 1, 18, -16], [9, -14, -8, 26], [-4, 15, 0, -1]], [[-16, 6, 46, -41], [25, -38, -18, 69], [-9, 42, 0, -1]], [[28, 48, -4, 2], [26, -28, 36, 30], [18, 48, 0, 22]]], [[[-38, -28, 54, -47], [9, -22, -46, 55], [-23, 12, 0, -17]], [[-39, -39, 42, -36], [-3, -6, -48, 30], [-24, -9, 0, -21]], [[6, 14, 4, -4], [10, -12, 8, 16], [4, 18, 0, 6]]], [[[-20, -12, 32, -28], [8, -16, -24, 36], [-12, 12, 0, -8]], [[-21, -23, 20, -17], [-4, 0, -26, 11], [-13, -9, 0, -12]], [[12, 54, 42, -39], [51, -66, 18, 99], [9, 90, 0, 21]]], [[[44, 42, -50, 43], [1, 10, 54, -39], [27, 6, 0, 23]], [[-7, -25, -16, 15], [-22, 28, -10, -41], [-5, -39, 0, -10]], [[-6, -14, -4, 4], [-10, 12, -8, -16], [-4, -18, 0, -6]]]])
	
	print("\nInvert([[4+3.7i, 5.1i - 6, 3.11i -0.8],[5.41i + 3.07,4.47+3.81i,0.73-5.54i],[3.33-4.31i,-5.42+3.02i,5.85-6.03i]]) = \n")
	print(Invert([[4+3.7i, 5.1i - 6, 3.11i -0.8],[5.41i + 3.07,4.47+3.81i,0.73-5.54i],[3.33-4.31i,-5.42+3.02i,5.85-6.03i]]))
	
	print("\nInvert([[0.044659 - 0.021092i, 0.027376 - 0.076583i, 0.026606 + 0.036280i], [-0.053074 - 0.054748i, 0.036653 - 0.003088i, -0.046330 + 0.008069i], [-0.053123 - 0.033173i, 0.014513 + 0.056939i, 0.028621 + 0.059845i]]) = \n")
	print(Invert([[0.044659 - 0.021092i, 0.027376 - 0.076583i, 0.026606 + 0.036280i], [-0.053074 - 0.054748i, 0.036653 - 0.003088i, -0.046330 + 0.008069i], [-0.053123 - 0.033173i, 0.014513 + 0.056939i, 0.028621 + 0.059845i]]))

	print("\nInvert([[0,0,1],[0.5E-47,1,0],[1,0,0]]) = \n")
	print(Invert([[0,0,1],[0.5E-47,1,0],[1,0,0]]))

	print("\n[[0.044659 - 0.021092i, 0.027376 - 0.076583i, 0.026606 + 0.036280i], [-0.053074 - 0.054748i, 0.036653 - 0.003088i, -0.046330 + 0.008069i], [-0.053123 - 0.033173i, 0.014513 + 0.056939i, 0.028621 + 0.059845i]] ** -1 = \n")
	print([[0.044659 - 0.021092i, 0.027376 - 0.076583i, 0.026606 + 0.036280i], [-0.053074 - 0.054748i, 0.036653 - 0.003088i, -0.046330 + 0.008069i], [-0.053123 - 0.033173i, 0.014513 + 0.056939i, 0.028621 + 0.059845i]] ** -1)

	matrixtest()
	
	print("\nsind(30) = ")
	print(sind(30))

	print("\nsind(60) = ")
	print(sind(60))

	print("\nsind(90) = ")
	print(sind(90))

	print("\nsind(180) = ")
	print(sind(180))

	print("\ncosd(30) = ")
	print(cosd(30))

	print("\ncosd(60) = ")
	print(cosd(60))

	print("\ncosd(90) = ")
	print(cosd(90))

	print("\ncosd(180) = ")
	print(cosd(180))

	print("\ntand(45) = ")
	print(tand(45))

	print("\ntand(89) = ")
	print(tand(89))

	print("\ntand(180) = ")
	print(tand(180))

	print("\nasind(0.5) = ")
	print(asind(0.5))

	print("\nasind(-0.5) = ")
	print(asind(-0.5))

	print("\nasind(1) = ")
	print(asind(1))

	print("\nacosd(0.5) = ")
	print(acosd(0.5))

	print("\nacosd(-0.5) = ")
	print(acosd(-0.5))

	print("\nacosd(1) = ")
	print(acosd(1))

	print("\natand(1) = ")
	print(atand(1))

	print("\natand(-1) = ")
	print(atand(-1))

	print("\natand(0) = ")
	print(atand(0))

	print("\nconv_bin_to_dec(\"0001101000111000011\") = " + conv_bin_to_dec("0001101000111000011"))

	print("\nconv_dec_to_bin(53699) = " + conv_dec_to_bin(53699))

	print("\nconv_hex_to_dec(\"a3d107fa79bc\") = " + conv_hex_to_dec("a3d107fa79bc"))

	print("\nconv_dec_to_hex(180118177348028) = " + conv_dec_to_hex(180118177348028))
	
	print("\nconv_bin_to_hex(\"0011100101001001010101010010110111111001\") = " + conv_bin_to_hex("0011100101001001010101010010110111111001"))
	
	print("\nconv_hex_to_bin(\"3949552df9\") = " + conv_hex_to_bin("3949552df9"))
	
	print("\nmod(tand(45), 7) = " + mod(tand(45), 7))
	
	print("\neye(2,3) = " + eye(2,3))
	
	print("\ntestdeter():\n")
	testdeter()
	
	print("\nalloc_array(3,2,4) = ")
	print(alloc_array(3,2,4))
	
	print("\nalloc_array([3,2,4], \"Hello Kitty!\") = ")
	print(alloc_array([3,2,4], "Hello Kitty!"))
	
	print("\nget_extreme_elem([[2, 3], \"hello\", 5], null, 1) = ")
	print(get_extreme_elem([[2, 3], "hello", 5], null, 1))
	
	print("\nget_extreme_elem([[3,4,6],[5+3i, 7, 9.88-4.61], [5.77 -0.03i]], -8, 0) = ")
	print(get_extreme_elem([[3,4,6],[5+3i, 7, 9.88-4.61], [5.77 -0.03i]], -8, 0))
	
	print("\nget_extreme_elem([[3,4,6],[5+3i, 7, -8.01, 9.88-4.61], [5.77 -0.03i], \"kkk\"], -8, 0) = ")
	print(get_extreme_elem([[3,4,6],[5+3i, 7, -8.01, 9.88-4.61], [5.77 -0.03i], "kkk"], -8, 0))
	
	print("\nget_extreme_elem([[3,4,6],[5+3i, 7, -8.01, 9.88-4.61], [5.77 -0.03i], \"kkk\", 7.64], null, 1) = ")
	print(get_extreme_elem([[3,4,6],[5+3i, 7, -8.01, 9.88-4.61], [5.77 -0.03i], "kkk", 7.64], null, 1))
	
	print("\nget_extreme_elem(5, null, 1) = ")
	print(get_extreme_elem(5, null, 1))
	
	print("\nget_extreme_elem(5, null, 0) = ")
	print(get_extreme_elem(5, null, 0))
	
	print("\nget_extreme_elem(5, 6, 0) = ")
	print(get_extreme_elem(5, 6, 0))
	
	print("\nget_extreme_elem(5, 6, 1) = ")
	print(get_extreme_elem(5, 6, 1))
	
	print("\nget_extreme_elem(5, 4, 0) = ")
	print(get_extreme_elem(5, 4, 0))
	
	print("\nget_extreme_elem(5, 4, 1) = ")
	print(get_extreme_elem(5, 4, 1))
	
	print("\nget_extreme_elem([\"heelo\",\"b\"],null,1) = ")
	print(get_extreme_elem(["heelo","b"],null,1))
	
	variable matrix1
	matrix1 = set_array_elem(matrix1, [4, 3], 4 + 5i, NULL)
	print("\nmatrix1 = set_array_elem(matrix1, [4, 3], 4 + 5i, 0) = ")
	print(matrix1)
	
	matrix1 = set_array_elem(matrix1, [2, 2], "Str")
	print("\nmatrix1 = set_array_elem(matrix1, [2, 2], \"Str\") = ")
	print(matrix1)
	
	matrix1 = set_array_elem(matrix1, [3], 0.549i, "yyy")
	print("\nmatrix1 = set_array_elem(matrix1, [3], 0.549i, \"yyy\") = ")
	print(matrix1)
	
	matrix1 = set_array_elem(matrix1, [3, 2], [3i,"abc"])
	print("\nmatrix1 = set_array_elem(matrix1, [3, 2], [3i,\"abc\"]) = ")
	print(matrix1)
	
	matrix1 = set_array_elem(matrix1, [4, 1], 0.837)
	print("\nmatrix1 = set_array_elem(matrix1, [4, 1], 0.837) = ")
	print(matrix1)
	
	print("\n+[5, -4.33i,7,[9,8.01i-0.88]] = ")
	print(+[5, -4.33i,7,[9,8.01i-0.88]])
	
	print("\n-[5, -4.33i,7,[9,8.01i-0.88]] = ")
	print(-[5, -4.33i,7,[9,8.01i-0.88]])
	
	print("\n")
	print([1, 2, 3, [4, 5]] + " hello string plus " + NULL + FALSE)
	
	print("\nis_zeros([0, 0, [0, [0, 0, NULL, 0]], 0, NULL], true) = " + is_zeros([0, 0, [0, [0, 0, NULL, 0]], 0, NULL], true))
	print("\nis_zeros([0, 0, [0, [0, 0, NULL, 0]], 0, NULL], false) = " + is_zeros([0, 0, [0, [0, 0, NULL, 0]], 0, NULL], false))
	print("\nis_zeros([0, 0, [0, [0, 0, NULL, 0]], 0, NULL]) = " + is_zeros([0, 0, [0, [0, 0, NULL, 0]], 0, NULL]))
	print("\nis_zeros([0, 0, [0, [0, 0, 0, 0]], 0, 0], true) = " + is_zeros([0, 0, [0, [0, 0, 0, 0]], 0, 0], true))
	print("\nis_zeros([0, 0, [0, [0, 0, 0, 0]], 0, 0], false) = " + is_zeros([0, 0, [0, [0, 0, 0, 0]], 0, 0], false))
	print("\nis_zeros([0, 0, [0, [0, 0, 0, 0]], 0, 0]) = " + is_zeros([0, 0, [0, [0, 0, 0, 0]], 0, 0]))

	print("\nis_zeros(0) = " + is_zeros(0))
	print("\nis_zeros([]) = " + is_zeros([]))
	print("\nis_zeros([0, 0, []]) = " + is_zeros([0, 0, []]))
	print("\nis_zeros([[], [[],[]],[]]) = " + is_zeros([[], [[],[]],[]]))
	
	variable matrix2
	matrix2 = set_array_elem(matrix2, [3, 2], [0])
	print("\nmatrix2 = set_array_elem(matrix2, [3, 2], [0]) = ")
	print(matrix2)
	print("\nis_zeros(matrix2, true) = " + is_zeros(matrix2, true))
	print("\nis_zeros(matrix2, false) = " + is_zeros(matrix2, false))
	print("\nis_zeros(matrix2) = " + is_zeros(matrix2))
	
	print("\nis_eye(eye(3, 4), true) = " + is_eye(eye(3, 4), true))
	print("\nis_eye(eye(3, 4), false) = " + is_eye(eye(3, 4), false))
	print("\nis_eye(eye(3, 4)) = " + is_eye(eye(3, 4)))
	print("\nis_eye([], true) = " + is_eye([], true))
	print("\nis_eye([[]], true) = " + is_eye([[]], true))
	
	variable matrix3
	matrix3 = set_array_elem(matrix3, [0, 0, 0], [1])
	matrix3 = set_array_elem(matrix3, [1, 1, 1], [1])
	matrix3 = set_array_elem(matrix3, [2, 2, 2], [1])
	matrix3 = set_array_elem(matrix3, [3, 3, 3], [1])
	print("\nmatrix3 is " + matrix3)
	print("\nis_eye(matrix3, true) = " + is_eye(matrix3, true))
	print("\nis_eye(matrix3, false) = " + is_eye(matrix3, false))
	print_line("\nis_eye(matrix3) = " + is_eye(matrix3))
	
	variable matrixnulls = [Null, Null]
	print_line("set_array_elem(null,2,\"str\") = " + set_array_elem(null,2,"str"))
	print_line("set_array_elem(null,[2],\"str\") = " + set_array_elem(null,[2],"str"))
	print_line("set_array_elem(null,[2,2],\"str\") = " + set_array_elem(null,[2,2],"str"))
	print_line("set_array_elem(matrixnulls,[1,1],\"str\") = " + set_array_elem(matrixnulls,[1,1],"str"))
	print_line("set_array_elem(matrixnulls,[2,2],\"str\") = " + set_array_elem(matrixnulls,[2,2],"str"))
	print_line("set_array_elem(matrixnulls,3,\"str\") = " + set_array_elem(matrixnulls,3,"str"))
	print_line("set_array_elem(null,2,\"str\", 7-8i) = " + set_array_elem(null,2,"str", 7-8i))
	print_line("set_array_elem(null,[2],\"str\", 7-8i) = " + set_array_elem(null,[2],"str", 7-8i))
	print_line("set_array_elem(null,[2,2],\"str\", 7-8i) = " + set_array_elem(null,[2,2],"str", 7-8i))
	print_line("set_array_elem(matrixnulls,[1,1],\"str\", 7-8i) = " + set_array_elem(matrixnulls,[1,1],"str", 7-8i))
	print_line("set_array_elem(matrixnulls,[2,2],\"str\", 7-8i) = " + set_array_elem(matrixnulls,[2,2],"str", 7-8i))
	print_line("set_array_elem(matrixnulls,3,\"str\", 7-8i) = " + set_array_elem(matrixnulls,3,"str", 7-8i))

	variable matrix4
	matrix4 = set_array_elem(matrix4, [0, 0, 0], 1)
	matrix4 = set_array_elem(matrix4, [1, 1, 1], 1)
	matrix4 = set_array_elem(matrix4, [2, 2, 2], 1)
	matrix4 = set_array_elem(matrix4, [3, 3, 3], 1, NULL)
	print("\nmatrix4 is " + matrix4)
	print("\nis_eye(matrix4, true) = " + is_eye(matrix4, true))
	print("\nis_eye(matrix4, false) = " + is_eye(matrix4, false))
	print("\nis_eye(matrix4) = " + is_eye(matrix4))
	
	print("\nis_eye([1, [0, [0, 1, 2]]], true) = " + is_eye([1, [0, [0, 1, 2]]], true))
	print("\nis_eye([1, [0, [0, 1, 2]]], false) = " + is_eye([1, [0, [0, 1, 2]]], false))
	print("\nis_eye([1, [0, [0, 1, 2]]]) = " + is_eye([1, [0, [0, 1, 2]]]))

	print("\nis_eye([1, [0, [0, 1]]], true) = " + is_eye([1, [0, [0, 1]]], true))
	print("\nis_eye([1, [0, [0, 1]]], false) = " + is_eye([1, [0, [0, 1]]], false))
	print("\nis_eye([1, [0, [0, 1]]]) = " + is_eye([1, [0, [0, 1]]]))

	print("\nis_eye(1) = " + is_eye(1))

	print("\n(0.000000000000077351 - 4.3768234236i)/(-0.000000000000000000000364476 + 0.0000000000000000000000007620245i) = " + (0.000000000000077351 - 4.3768234236i)/(-0.000000000000000000000364476 + 0.0000000000000000000000007620245i))

	print("\ni* 123809023453476.324233e-0002i = " + (i* 123809023453476.324233e-0002i))
	print("\n0.0082324e+7i = " + 0.0082324e+7i)
	print("\n- 2341.38023e41 = " + (- 2341.38023e41))
	
	print("\n1/3-1/6==1/6 is " + (1/3-1/6==1/6))
	print("\n0.1+0.1+0.1==0.3 is " + (0.1+0.1+0.1==0.3))
	print("\n1/3 = " + 1/3)
	print("\n1/2 - 2e-48 == 0.5" + (1/2 + 2e-48 == 0.5))
	print("\n1/2 - 3e-48 == 0.5" + (1/2 + 3e-48 == 0.5))
	print("\n0 - 4e-48 == 0" + (0 - 4e-48 == 0))
	print("\n0 - 5e-48 == 0" + (0 - 5e-48 == 0))
	print("\n0 - 6e-48 == 0" + (0 - 6e-48 == 0))
	
	print("\nGFoc(0.001,0.5,-0.150,0.004,1.5,532e-9,1.2) = " + GFoc(0.001,0.5,-0.150,0.004,1.5,532e-9,1.2))
	print("\n(-1)**0.5 = " + (-1)**0.5)
	print("\npow(-1, 0.5, 3) = " + pow(-1, 0.5, 3))
	print("\npow(-1, 1/3, 4) = " + pow(-1, 1/3, 4))
	print("\npow(3, 1/3, 4) = " + pow(3, 1/3, 4))
	print("\npow(-i, 1/3, 4) = " + pow(-i, 1/3, 4))
	print("\npow(i, 1/3, 4) = " + pow(i, 1/3, 4))
	
	variable var1,var2,var3
	var1 = 2 + 3.7e5i
	var2 = "hello kitty!!!"
	var3 = [5, 4, [3, [7]], [6, 8, 9.0+7.88i]]
	print("\nvar1=var2= 7+\"yyy\" = var2 + var3= [8, \"ybc\" + [5, 6]] is " + (var1=var2= 7+"yyy" + (var3= [8, "ybc" + [5, 6]])))
	print("\nvar1 is " + var1)
	print("\nvar2 is " + var2)
	print("\nvar3 is " + var3)
	
	print("\nconvert_unit([-2.78792e3i, 93897689234256.00987-56346.7787i], \"psi\", \"atm\") = " + convert_unit([-2.78792e3i, 93897689234256.00987-56346.7787i], "psi", "atm"))
	
	try
		print("\nconvert_unit(5.31, \"psi\", \"km\") = " + convert_unit(5.31, "psi", "km"))
	catch (var1 = info) == info
		print("\nconvert_unit(5.31, \"psi\", \"km\") throws an exception : " + var1)
	endtry
	try
		print("\nconvert_unit(8.99, \"0K\", \"0c\") = " + convert_unit(8.99, "0K", "0c"))
	catch (var1 = info) == info
		print("\nconvert_unit(8.99, \"0K\", \"0c\") throws an exception : " + var1)
	endtry
	print("\n")
	
	print("\nrecip(-2.7 + 6e-001i) = " + recip(-2.7 + 6e-001i))
	print("\nleft_recip(-2.7 + 6e-001i) = " + left_recip(-2.7 + 6e-001i))
	
	print("\nrecip([[1,2],[3,4]]) = " + recip([[1,2],[3,4]]))
	print("\nleft_recip([[1,2],[3,4]]) = " + left_recip([[1,2],[3,4]]))
	print("\nrecip([[1,2,3],[5,7,9],[3,1,3]]) = " + recip([[1,2,3],[5,7,9],[3,1,3]]))
	try
		print("\nrecip([[1,2],[3,4],[5,6]]) = " + recip([[1,2],[3,4],[5,6]]))
	catch (var1 = info) == info
		print("\nrecip([[1,2],[3,4],[5,6]]) throws an exception : " + var1)
	endtry
	try
		print("\nleft_recip([[1,2,3],[4,5,6]]) = " + left_recip([[1,2,3],[4,5,6]]))
	catch (var1 = info) == info
		print("\nleft_recip([[1,2,3],[4,5,6]]) throws an exception : " + var1)
	endtry
	try
		print("\nrecip([[1,2,3],[4,5,6]]) = " + recip([[1,2,3],[4,5,6]]))
	catch (var1 = info) == info
		print("\nrecip([[1,2,3],[4,5,6]]) throws an exception : " + var1)
	endtry
	try
		print("\nleft_recip([[1,2],[3,4],[5,6]]) = " + left_recip([[1,2],[3,4],[5,6]]))
	catch (var1 = info) == info
		print("\nleft_recip([[1,2],[3,4],[5,6]]) throws an exception : " + var1)
	endtry

	print("\n1/[[1,2,3],[4,5,6],[7,8,91]] = " + 1/[[1,2,3],[4,5,6],[7,8,91]])
	print("\n1/[[1,2],[3,4]] = " + 1/[[1,2],[3,4]])
	print("\n[[1,2],[3,4]]/1 = " + [[1,2],[3,4]]/1)
	print("\n[[1,2],[3,4]]*1 = " + [[1,2],[3,4]]*1)
	
	print("\n0 + [1,2,[3,4,5]] = " + (0 + [1,2,[3,4,5]]))
	print("\n0 - [1,2,[3,4,5]] = " + (0 - [1,2,[3,4,5]]))
	print("\n[1,2,[3,4,5]] + 0 = " + ([1,2,[3,4,5]] + 0))
	print("\n[1,2,[3,4,5]] - 0 = " + ([1,2,[3,4,5]] - 0))
	
	var1 = [1, 2, [3,4]]
	var1[2,1] = 9 + 7i
	print("\nafter var1[2,1] = 9 + 7i, var1 is " + var1)
	try
@compulsory_link get_functions("kkkk()")
		var1[2,2] = 9 + 8i
	catch (var2 = info) == info
		print("\nvar1[2,2] = 9 + 8i throws an exception : " + var2)
	endtry
	
	var2 = 18
	print("\nafter var2 = 18, var2 value is " + var2)
	
	print("\n(var1[2,1]) = " + (var1[2,1]))
	print("\n[var1[2,1], var2] = " + [var1[2,1], var2])
	print("\n[var2, var1[2,1]] = " + [var2, var1[2,1]])
	print("\n[[1,2],[3,4]][1][0] = " + [[1,2],[3,4]][1][0])
	print("\n[[1,2],[3,4]][1] = " + [[1,2],[3,4]][1])
	print("\n(1/[[1,2],[3,4]])[0,1] = " + (1/[[1,2],[3,4]])[0,1])
	print("\nrecip([[1,2],[3,4]])[0,1] = " + recip([[1,2],[3,4]])[0,1])
	
	var1 = [[1,2],[3,4]]
	print("\nat first, var1 is " + var1)
	var1[1,1] = [2i,4i,5 - 9i]
	print("\nafter var1[1,1] = [2i,4i,5 - 9i], var1 is " + var1)
	var1[1,1][2] = 9.77i * 3
	print("\nafter var1[1,1][2] = 9.77 i * 3, var1 is " + var1)
	var1[1][1,2] = 13.86i * 3
	print("\nafter var1[1][1,2] = 13.86i * 3, var1 is " + var1)
	var1[1][1][2] = 57
	print("\nafter var1[1][1][2] = 57, var1 is " + var1)
	var1[1,1,2] = -9.999
	print("\nafter var1[1,1,2] = -9.999, var1 is " + var1)
	
	print("\nroots([4.81 + 9i, -5.44-0.78i]) = " + roots([4.81 + 9i, -5.44-0.78i]))
	print("\nroots_internal(4.81 + 9i, -5.44-0.78i) = " + roots_internal(4.81 + 9i, -5.44-0.78i))
	print("\nroots(1,2,1) = " + roots(1,2,1))
	print("\nroots_internal(1,2,1) = " + roots_internal(1,2,1))
	print("\nroots(0,0,7.41,8.93+0.47i,5.81-6.89i) = " + roots(0,0,7.41,8.93+0.47i,5.81-6.89i))
	print("\nroots_internal(0,0,7.41,8.93+0.47i,5.81-6.89i) = " + roots_internal(0,0,7.41,8.93+0.47i,5.81-6.89i))
	print("\nroots(1,3+9i,-24+18i,-24-18i) = " + roots(1,3+9i,-24+18i,-24-18i))
	print("\nroots_internal(1,3+9i,-24+18i,-24-18i) = " + roots_internal(1,3+9i,-24+18i,-24-18i))
	print("\nroots(1,4+7i,-10+20i,-22+4i) = " + roots(1,4+7i,-10+20i,-22+4i))
	print("\nroots_internal(1,4+7i,-10+20i,-22+4i) = " + roots_internal(1,4+7i,-10+20i,-22+4i))
	print("\nroots(7.69+7.88i,0.89-9.12i,-21+64i,85-20i,-3.778i,4.89324 + 7i, 5.22,8.94+0.31i,0) = " + roots(7.69+7.88i,0.89-9.12i,-21+64i,85-20i,-3.778i,4.89324 + 7i, 5.22,8.94+0.31i,0))
	print("\nroots_internal(7.69+7.88i,0.89-9.12i,-21+64i,85-20i,-3.778i,4.89324 + 7i, 5.22,8.94+0.31i,0) = " + roots_internal(7.69+7.88i,0.89-9.12i,-21+64i,85-20i,-3.778i,4.89324 + 7i, 5.22,8.94+0.31i,0))
	print("\nroots([8.3i + 4.33,5.39-2.71i,-6.82+0.337i,-5.44-3.889i]) = " + roots([8.3i + 4.33,5.39-2.71i,-6.82+0.337i,-5.44-3.889i]))
	print("\nroots_internal(8.3i + 4.33,5.39-2.71i,-6.82+0.337i,-5.44-3.889i) = " + roots_internal(8.3i + 4.33,5.39-2.71i,-6.82+0.337i,-5.44-3.889i))
	print("\nroots([8.3i + 4.33,5.39-2.71i,-6.82+0.337i,-5.44-3.889i,8.55+4.87i]) = " + roots([8.3i + 4.33,5.39-2.71i,-6.82+0.337i,-5.44-3.889i,8.55+4.87i]))
	print("\nroots_internal(8.3i + 4.33,5.39-2.71i,-6.82+0.337i,-5.44-3.889i,8.55+4.87i) = " + roots_internal(8.3i + 4.33,5.39-2.71i,-6.82+0.337i,-5.44-3.889i,8.55+4.87i))
	print("\nroots([9.81-4.66i,8.3i + 4.33,5.39-2.71i,-6.82+0.337i,-5.44-3.889i,8.55+4.87i]) = " + roots([9.81-4.66i,8.3i + 4.33,5.39-2.71i,-6.82+0.337i,-5.44-3.889i,8.55+4.87i]))
	print("\nroots_internal(9.81-4.66i,8.3i + 4.33,5.39-2.71i,-6.82+0.337i,-5.44-3.889i,8.55+4.87i) = " + roots_internal(9.81-4.66i,8.3i + 4.33,5.39-2.71i,-6.82+0.337i,-5.44-3.889i,8.55+4.87i))
	print("\nroots(1,6,11,6) = " + roots(1,6,11,6))
	print("\nroots_internal(1,6,11,6) = " + roots_internal(1,6,11,6))
	print("\nroots([0,0,3,5,7,6,8,9]) = " + roots([0,0,3,5,7,6,8,9]))
	print("\nroots(0,0,3,5,7,6,8,9) = " + roots(0,0,3,5,7,6,8,9))
	print("\nroots_internal(0,0,3,5,7,6,8,9) = " + roots_internal(0,0,3,5,7,6,8,9))

	print("\nroots_internal(1,2,1) = " + roots_internal(1,2,1))
	print("\nroots_internal(1,6+4i,5+12i) = " + roots_internal(1,6+4i,5+12i))
	print("\nroots_internal(0,0, 9.44+18.76i,2.87+8.33i/pi, 6.9937/e + 8.4428i/pi, 0) = " + roots_internal(0,0, 9.44+18.76i,2.87+8.33i/pi, 6.9937/e + 8.4428i/pi, 0))

	print("\n\nroots_internal(3,7,6,-2) = " + roots_internal(3,7,6,-2))
	print("\n\nroots_internal(1,-3,3,1) = " + roots_internal(1,-3,3,1))
	print("\n\nroots_internal(1,3,3,1) = " + roots_internal(1,3,3,1))
	print("\n\nroots_internal(1,-3,-3,1) = " + roots_internal(1,-3,-3,1))
	print("\n\nroots_internal(1,-1,-8,1) = " + roots_internal(1,-1,-8,1))
	print("\n\nroots_internal(1,-1,-8,12) = " + roots_internal(1,-1,-8,12))
	print("\n\nroots_internal(-2,5.71341,-2,-5) = " + roots_internal(-2,5.71341,-2,-5))
	print("\n\nroots_internal(-2,4,-2,-5) = " + roots_internal(-2,4,-2,-5))
	
	print("\nnCr(16,0) = " + nCr(16,0))
	print("\nnCr(16,7) = " + nCr(16,7))
	print("\nnCr(16,16) = " + nCr(16,16))
	print("\nnPr(16,0) = " + nPr(16,0))
	print("\nnPr(16,7) = " + nPr(16,7))
	print("\nnPr(16,16) = " + nPr(16,16))
	
	variable vartest1 = "3,4,[5,", _
		vartest2 = vartest1 + [2.83,7.2,(7),["2,9"]] _
		,vartest3 = sind(30) * [[8,7],8] _
		
	print("\nvartest1 = " + vartest1)
	print("\nvartest2 = " + vartest2)
	print("\nvartest3 = " + vartest3)
	
	Help
		Now test wrong variable declaration _
	Endh
	try
		variable vartest4 = "5,8
	catch (var2 = info) == info
		print("\nvariable vartest4 = \"5,8 throws an exception : " + var2)
	endtry
	
	try
		variable vartest4 = [5,[8]
	catch (var2 = info) == info
		print("\nvariable vartest4 = [5,[8] throws an exception : " + var2)
	endtry
	
	try
		variable vartest4 = [5,[8]] * vartest5, vartest5 = 3
	catch (var2 = info) == info
		print("\nvariable vartest4 = [5,[8]] * vartest5, vartest5 = 3 throws an exception : " + var2)
	endtry
	
	try
		variable vartest4, vartest5 = 3, vartest4 = 2
	catch (var2 = info) == info
		print("\nvartest4, vartest5 = 3, vartest4 = 2 throws an exception : " + var2)
	endtry
	
	try
		variable vartest4, vartest5 = 3,,
	catch (var2 = info) == info
		print("\nvartest4, vartest5 = 3,, throws an exception : " + var2)
	endtry
	
	try
		variable vartest4, vartest5 = 3, vartest6 =  ,
	catch (var2 = info) == info
		print("\nvartest4, vartest5 = 3, vartest6 =  , throws an exception : " + var2)
	endtry
	
	try
		print("\nzeros([]) = " + zeros([]))
	catch (var2 = info) == info
		print("\nzeros([]) throws an exception : " + var2)
	endtry
	try
		print("\nzeros([2,0]) = " + zeros([2,0]))
	catch (var2 = info) == info
		print("\nzeros([2,0]) throws an exception : " + var2)
	endtry
	try
		print("\nzeros([0,2]) = " + zeros([0,2]))
	catch (var2 = info) == info
		print("\nzeros([0,2]) throws an exception : " + var2)
	endtry
	try
		print("\nzeros([0]) = " + zeros([0]))
	catch (var2 = info) == info
		print("\nzeros([0]) throws an exception : " + var2)
	endtry
	try
		print("\nzeros(0) = " + zeros(0))
	catch (var2 = info) == info
		print("\nzeros(0) throws an exception : " + var2)
	endtry
	print("\nzeros(size([2,3,[1,7,6]])) = " + zeros(size([2,3,[1,7,6]])))
	print("\nones(size(3)) = " + ones(size(3)))
	try
		print("\nones(0) = " + ones(0))
	catch (var2 = info) == info
		print("\nones(0) throws an exception : " + var2)
	endtry
	print("\nones(size(30)) = " + ones(size(30)))
	print("\nones(size([7])) = " + ones(size([7])))
	try
		print("\nones([]) = " + ones([]))
	catch (var2 = info) == info
		print("\nones([]) throws an exception : " + var2)
	endtry
	try
		print("\nones([2,0]) = " + ones([2,0]))
	catch (var2 = info) == info
		print("\nones([2,0]) throws an exception : " + var2)
	endtry
	try
		print("\nones([0,2]) = " + ones([0,2]))
	catch (var2 = info) == info
		print("\nones([0,2]) throws an exception : " + var2)
	endtry
	print("\neye(0,1) = " + eye(0,1) + " ; eye(0, 4) = " + eye(0,4))
	print("\neye(0) = " + eye(0))
	
	var2 = ["Hello,World", 2+ 3i]
	print("\nto_lowercase_string([\"Hello,World\", 2+ 3i]) = " + to_lowercase_string(var2))
	print("\nto_uppercase_string([\"Hello,World\", 2+ 3i]) = " + to_uppercase_string(var2))
	
	print("\nstrcmp(\"abC235yu\",\"abC235yu\") = " + strcmp("abC235yu","abC235yu"))
	print("\nstrcmp(\"abC235yu\",\"abC235yU\") = " + strcmp("abC235yu","abC235yU"))
	print("\nstricmp(\"abC235yu\",\"abC235yU\") = " + stricmp("abC235yu","abC235yU"))
	
	try
		print("\n[5,[8,6]] > [5,[8,6]] = " + ([5,[8,6]] > [5,[8,6]]))
	catch (var2 = info) == info
		print("\n[5,[8,6]] > [5,[8,6]] throws an exception : " + var2)
	endtry
	try
		print("\n[5,[8,6]] < [5,[8,6]] = " + ([5,[8,6]] < [5,[8,6]]))
	catch (var2 = info) == info
		print("\n[5,[8,6]] > [5,[8,6]] throws an exception : " + var2)
	endtry
	print("\n[5,[8,6]] >= [5,[8,6]] = " + ([5,[8,6]] >= [5,[8,6]]))
	print("\n[5,[8,6]] <= [5,[8,6]] = " + ([5,[8,6]] <= [5,[8,6]]))
	print("\n[5,[8,6]] == [5,[8,6]] = " + ([5,[8,6]] == [5,[8,6]]))
	print("\n[5,[8,6]] != [5,[8,6]] = " + ([5,[8,6]] != [5,[8,6]]))
	
	try
		print("\n[5,[8,7]] > [5,[8,6]] = " + ([5,[8,7]] > [5,[8,6]]))
	catch (var2 = info) == info
		print("\n[5,[8,7]] > [5,[8,6]] throws an exception : " + var2)
	endtry
	try
		print("\n[5,[8,7]] < [5,[8,6]] = " + ([5,[8,7]] < [5,[8,6]]))
	catch (var2 = info) == info
		print("\n[5,[8,7]] < [5,[8,6]] throws an exception : " + var2)
	endtry
	try
		print("\n[5,[8,7]] >= [5,[8,6]] = " + ([5,[8,7]] >= [5,[8,6]]))
	catch (var2 = info) == info
		print("\n[5,[8,7]] >= [5,[8,6]] throws an exception : " + var2)
	endtry
	try
		print("\n[5,[8,7]] <= [5,[8,6]] = " + ([5,[8,7]] <= [5,[8,6]]))
	catch (var2 = info) == info
		print("\n[5,[8,7]] <= [5,[8,6]] throws an exception : " + var2)
	endtry
	try
		print("\n[5,[8,7]] == [5,[8,6]] = " + ([5,[8,7]] == [5,[8,6]]))
	catch (var2 = info) == info
		print("\n[5,[8,7]] == [5,[8,6]] throws an exception : " + var2)
	endtry
	try
		print("\n[5,[8,7]] != [5,[8,6]] = " + ([5,[8,7]] != [5,[8,6]]))
	catch (var2 = info) == info
		print("\n[5,[8,7]] != [5,[8,6]] throws an exception : " + var2)
	endtry
	
	try
		print("\n[5,[8,6,0]] > [5,[8,6]] = " + ([5,[8,6,0]] > [5,[8,6]]))
	catch (var2 = info) == info
		print("\n[5,[8,6,0]] > [5,[8,6]] throws an exception : " + var2)
	endtry
	try
		print("\n[5,[8,6,0]] < [5,[8,6]] = " + ([5,[8,6,0]] < [5,[8,6]]))
	catch (var2 = info) == info
		print("\n[5,[8,6,0]] < [5,[8,6]] throws an exception : " + var2)
	endtry
	try
		print("\n[5,[8,6,0]] >= [5,[8,6]] = " + ([5,[8,6,0]] >= [5,[8,6]]))
	catch (var2 = info) == info
		print("\n[5,[8,6,0]] >= [5,[8,6]] throws an exception : " + var2)
	endtry
	try
		print("\n[5,[8,6,0]] <= [5,[8,6]] = " + ([5,[8,6,0]] <= [5,[8,6]]))
	catch (var2 = info) == info
		print("\n[5,[8,6,0]] <= [5,[8,6]] throws an exception : " + var2)
	endtry
	try
		print("\n[5,[8,6,0]] == [5,[8,6]] = " + ([5,[8,6,0]] == [5,[8,6]]))
	catch (var2 = info) == info
		print("\n[5,[8,6,0]] == [5,[8,6]] throws an exception : " + var2)
	endtry
	try
		print("\n[5,[8,6,0]] != [5,[8,6]] = " + ([5,[8,6,0]] != [5,[8,6]]))
	catch (var2 = info) == info
		print("\n[5,[8,6,0]] != [5,[8,6]] throws an exception : " + var2)
	endtry

	try
		print("\n[6] > 6 = " + ([6] > 6))
	catch (var2 = info) == info
		print("\n[6] > 6 throws an exception : " + var2)
	endtry
	try
		print("\n[6] < 6 = " + ([6] < 6))
	catch (var2 = info) == info
		print("\n[6] < 6 throws an exception : " + var2)
	endtry
	try
		print("\n[6] >= 6 = " + ([6] >= 6))
	catch (var2 = info) == info
		print("\n[6] >= 6 throws an exception : " + var2)
	endtry
	try
		print("\n[6] <= 6 = " + ([6] <= 6))
	catch (var2 = info) == info
		print("\n[6] <= 6 throws an exception : " + var2)
	endtry
	try
		print("\n[6] == 6 = " + ([6] == 6))
	catch (var2 = info) == info
		print("\n[6] == 6 throws an exception : " + var2)
	endtry
	try
		print("\n[6] != 6 = " + ([6] != 6))
	catch (var2 = info) == info
		print("\n[6] != 6 throws an exception : " + var2)
	endtry

	try
		print("\ni > i = " + (i > i))
	catch (var2 = info) == info
		print("\ni > i throws an exception : " + var2)
	endtry
	try
		print("\ni < i = " + (i < i))
	catch (var2 = info) == info
		print("\ni < i throws an exception : " + var2)
	endtry
	try
		print("\ni >= i = " + (i >= i))
	catch (var2 = info) == info
		print("\ni >= i throws an exception : " + var2)
	endtry
	try
		print("\ni <= i = " + (i <= i))
	catch (var2 = info) == info
		print("\ni <= i throws an exception : " + var2)
	endtry
	try
		print("\ni == i = " + (i == i))
	catch (var2 = info) == info
		print("\ni == i throws an exception : " + var2)
	endtry
	try
		print("\ni != i = " + (i != i))
	catch (var2 = info) == info
		print("\ni != i throws an exception : " + var2)
	endtry

	print("\n3 > 7 = " + (3 > 7))
	print("\n3 < 7 = " + (3 < 7))
	print("\n3 >= 7 = " + (3 >= 7))
	print("\n3 <= 7 = " + (3 <= 7))
	print("\n3 != 7 = " + (3 != 7))
	print("\n3 == 7 = " + (3 == 7))
	
	variable xarray = [0.5751, 0.4514, 0.0439, 0.0272, 0.3127, 0.0129, 0.3840, 0.6831, 0.0928, 0.0353, 0.6124, 0.6085, 0.0158, 0.0164, 0.1901, 0.5869]
    variable xarray_new = FFT (xarray)
	print("\n\nFFT " + xarray + " ==>\n" + xarray_new)
    xarray = IFFT (xarray_new)
	print("\n\nIFFT " + xarray_new + " ==>\n" + xarray)
	
	print("\n\nFFT(1,2,3,4) ==> " + FFT(1,2,3,4))
	print("\n\nFFT([1,2,3,4]) ==> " + FFT([1,2,3,4]))
	print("\n\nIFFT(1,2,3,4) ==> " + IFFT(1,2,3,4))
	print("\n\nIFFT([1,2,3,4]) ==> " + IFFT([1,2,3,4]))
	print("\n\nFFT(1,2) ==> " + FFT(1,2))
	print("\n\nFFT([1,2]) ==> " + FFT([1,2]))
	print("\n\nIFFT(1,2) ==> " + IFFT(1,2))
	print("\n\nIFFT([1,2]) ==> " + IFFT([1,2]))

	print("\n\nconv([4,8,2,9],[5,3,8,9,6,7,8]) ==> " + conv([4,8,2,9],[5,3,8,9,6,7,8]))
	print("\n\nconv([[4,8,2,9],[8,6,7,9],[2,2,8,-4]],[[-5,i,7],[0.6,8,4]]) ==> " + conv([[4,8,2,9],[8,6,7,9],[2,2,8,-4]],[[-5,i,7],[0.6,8,4]]))
	
	print("\n\niff(true, 3, 2) ======> " + iff(true, 3, 2))
	print("\n\niff(3 < 2, 3, 2) ======> " + iff(3 < 2, 3, 2))
	print("\n\niff(3 < 2, 3, 5 > 4, 5, 6 == 9, 6, 9) ======> " + iff(3 < 2, 3, 5 > 4, 5, 6 == 9, 6, 9))
	print("\n\niff(3 < 2, 3, 5 < 4, 5, 6 == 9, 6, 9) ======> " + iff(3 < 2, 3, 5 < 4, 5, 6 == 9, 6, 9))
	
	print("\nintegrate(\"x+1\",\"x\",\"x=5+6\",\"17\") ====> " + integrate("x+1","x","x=5+6","17"))
	print("\nintegrate(\"x+1\",\"x\",\"x=5+6\",\"17\",19) ====> " + integrate("x+1","x","x=5+6","17",19))
	print("\nintegrate(\"x+1\",\"x\",\"5+6\",\"17\",19) ====> " + integrate("x+1","x","5+6","17",19))
	print("\nintegrate(\"x**2+5*x+1\",\"x\",\"x=5+6i\",\"17-7.88i\",19) ====> " + integrate("x**2+5*x+1","x","x=5+6i","17-7.88i",19))
	print("\nintegrate(\"x+1\",\"x\", 5+6i, 17-7.88i,19) ====> " + integrate("x+1","x", 5+6i, 17-7.88i,19))
	print("\nintegrate(\"integrate(\\\"x*y+x+y+1\\\", \\\"x\\\", \\\"x=4+7.6i\\\", 9-4.81i, 173)\",\"y\",3.81,\"4+9.71i\") ====> " + integrate("integrate(\"x*y+x+y+1\", \"x\", \"x=4+7.6i\", 9-4.81i, 173)","y",3.81,"4+9.71i"))
	print("\nintegrate(\"integrate(\\\"x*y+x+y+1\\\", \\\"x\\\", 4+7.6i, 9-4.81i, 173)\",\"y\",3.81,4+9.71i) ====> " + integrate("integrate(\"x*y+x+y+1\", \"x\", 4+7.6i, 9-4.81i, 173)","y",3.81,4+9.71i))
	print("\nintegrate(\"3/x + 2\", \"x\", -5, 5, 100) ====> " + integrate("3/x + 2", "x", -5, 5, 100))
	try
		print("\nintegrate(\"3/x + 2\", \"x\", -5, 5) ====> ")
		print(integrate("3/x + 2", "x", -5, 5))
	catch (var1 = info) == info
		print("throws an exception : " + var1)
	endtry
	
	print("\nintegrate(\"3/x + 2\", \"x\", -5 + 4i, 7 -9i, 0) ====> " + integrate("3/x + 2", "x", -5 + 4i, 7 - 9i, 0))
	print("\nintegrate(\"3/x + 2\", \"x\", -5 + 4i, 7 -9i, 1000) ====> " + integrate("3/x + 2", "x", -5 + 4i, 7 - 9i, 1000))

	print("\n\nimage(3+4i) = ")
	print(image(3+4i))

	print("\n\nimage(3+4i, false) = ")
	print(image(3+4i, false))

	print("\n\nimage(3+4i, true) = ")
	print(image(3+4i, true))

	print("\n\nimage(inf*-i, true) = ")
	print(image(inf*-i, true))

	print("\n\nimage(inf*i) = ")
	print(image(inf*i))

	print("\n\nimage(inf*i, false) = ")
	print(image(inf*i, false))

	try
		print("\n\ninteg_basic(\"1/x\",\"x\",-1,1) = ")
		print(integ_basic("1/x","x",-1,1))
	catch (var1 = info) == info
		print("throws an exception : " + var1)
	endtry

	try
		print("\n\ninteg_gk(\"1/x\",\"x\",-1,1) = ")
		print(integ_gk("1/x","x",-1,1))
	catch (var1 = info) == info
		print("throws an exception : " + var1)
	endtry

	try
		print("\n\nintegrate(\"1/x\",\"x\",-1,1) = ")
		print(integrate("1/x","x",-1,1))
	catch (var1 = info) == info
		print("throws an exception : " + var1)
	endtry

	try
		print("\n\nintegrate(\"1/x\",\"x\",-1,1, 100) = ")
		print(integrate("1/x","x",-1,1, 100))
	catch (var1 = info) == info
		print("throws an exception : " + var1)
	endtry

	try
		print("\n\nintegrate(\"1/x\",\"x\",-i,image(inf*i,true)) = ")
		print(integrate("1/x","x",-i,image(inf*i,true)))
	catch (var1 = info) == info
		print("throws an exception : " + var1)
	endtry

	try
		print("\n\nintegrate(\"1/x\",\"x\",-i,image(inf*i,true), 100) = ")
		print(integrate("1/x","x",-i,image(inf*i,true), 100))
	catch (var1 = info) == info
		print("throws an exception : " + var1)
	endtry

	try
		print("\n\nintegrate(\"1/x\",\"x\",i,image(inf*i,true)) = ")
		print(integrate("1/x","x",i,image(inf*i,true)))
	catch (var1 = info) == info
		print("throws an exception : " + var1)
	endtry

	try
		print("\n\nintegrate(\"1/x\",\"x\",i,image(inf*i,true), 100) = ")
		print(integrate("1/x","x",i,image(inf*i,true), 100))
	catch (var1 = info) == info
		print("throws an exception : " + var1)
	endtry

	try
		print("\n\nintegrate(\"1/x**2\",\"x\",i,image(inf*i,true)) = ")
		print(integrate("1/x**2","x",i,image(inf*i,true)))
	catch (var1 = info) == info
		print("throws an exception : " + var1)
	endtry

	try
		print("\n\nintegrate(\"1/x**2\",\"x\",i,image(inf*i,true), 100) = ")
		print(integrate("1/x**2","x",i,image(inf*i,true), 100))
	catch (var1 = info) == info
		print("throws an exception : " + var1)
	endtry

	try
		print("\n\nintegrate(\"1/x**2\",\"x\",3-i,3+image(inf*i,true)) = ")
		print(integrate("1/x**2","x",3-i,3+image(inf*i,true)))
	catch (var1 = info) == info
		print("throws an exception : " + var1)
	endtry

	try
		print("\n\nintegrate(\"1/x**2\",\"x\",3-i,3+image(inf*i,true), 100) = ")
		print(integrate("1/x**2","x",3-i,3+image(inf*i,true), 100))
	catch (var1 = info) == info
		print("throws an exception : " + var1)
	endtry

	print("\n\n0-image(inf*i,true) = ")
	print(0-image(inf*i,true))

	print("\n\n-image(inf*i,true) = ")
	print(-image(inf*i,true))

	print("\n\n-1*image(inf*i,true) = ")
	print(-1*image(inf*i,true))

	print("\n\ninfi = " + infi)

	print("\n\ninfi * i = " + infi * i)

	print("\n\ninf * 1 = " + inf * 1)

	print("\n\n-infi = " + (-infi))

	print("\n\n3 +-+-infi = " + (3 +-+-infi))

	print("\n\n3 +-+-7i = " + (3 +-+-7i))

	print("\n\n3-infi = " + (3-infi))

	print("\n\n3 - INFi = " + (3 - INFi))

	print("\n\n3 - nan*i = " + (3 - nan*i))

	print("\n\ninfi*i = " + (infi*i))

	print("\n\ninfi*1 = " + (infi*1))

	print("\n\ninfi*-1 = " + (infi*-1))

	print("\n\n-1*infi = " + (-1*infi))

	print("\n\n-infi = " + (-infi))

	print("\n\nimage(inf * i, true) = " + image(inf * i, true))

	print("\n\n-[2+3i,infi] = " + (-[2+3i,infi]))

	try
		print("\n\nintegrate(\"iff(x>1,1/x**2,x<-1,1/x**2,1)\",\"x\",-inf,inf) = ")
		print(integrate("iff(x>1,1/x**2,x<-1,1/x**2,1)","x",-inf,inf))
	catch (var1 = info) == info
		print("throws an exception : " + var1)
	endtry

	try
		print("\n\nintegrate(\"1/x**2\",\"x\",-inf,inf) = ")
		print(integrate("1/x**2","x",-inf,inf))
	catch (var1 = info) == info
		print("throws an exception : " + var1)
	endtry

	try
		print("\n\nintegrate(\"1/x**2\",\"x\",-1,inf) = ")
		print(integrate("1/x**2","x",-1,inf))
	catch (var1 = info) == info
		print("throws an exception : " + var1)
	endtry

	try
		print("\n\nintegrate(\"1/x**2\",\"x\",1,inf) = ")
		print(integrate("1/x**2","x",1,inf))
	catch (var1 = info) == info
		print("throws an exception : " + var1)
	endtry

	try
		print("\n\nintegrate(\"iff(x>1,1/x**2,x<-1,1/x**2,1)\",\"x\",-i,inf) = ")
		print(integrate("iff(x>1,1/x**2,x<-1,1/x**2,1)","x",-i,inf))
	catch (var1 = info) == info
		print("throws an exception : " + var1)
	endtry

	try
		print("\n\nintegrate(\"iff(x>1,1/x**2,x<-1,1/x**2,1)\",\"x\",-1,inf) = ")
		print(integrate("iff(x>1,1/x**2,x<-1,1/x**2,1)","x",-1,inf))
	catch (var1 = info) == info
		print("throws an exception : " + var1)
	endtry

	try
		print("\n\nintegrate(\"iff(x>1,1/x**2,x<-1,1/x**2,1)\",\"x\",-1,100) = ")
		print(integrate("iff(x>1,1/x**2,x<-1,1/x**2,1)","x",-1,100))
	catch (var1 = info) == info
		print("throws an exception : " + var1)
	endtry

	try
		print("\n\nintegrate(\"iff(x>1,1/x**2,x<-1,1/x**2,1)\",\"x\",-1,100,500) = ")
		print(integrate("iff(x>1,1/x**2,x<-1,1/x**2,1)","x",-1,100,500))
	catch (var1 = info) == info
		print("throws an exception : " + var1)
	endtry

	try
		print("\n\nintegrate(\"1/x**2\",\"x\",-infi,-i) = ")
		print(integrate("1/x**2","x",-infi,-i))
	catch (var1 = info) == info
		print("throws an exception : " + var1)
	endtry

	try
		print("\n\nintegrate(\"1/x**2\",\"x\",infi,i) = ")
		print(integrate("1/x**2","x",infi,i))
	catch (var1 = info) == info
		print("throws an exception : " + var1)
	endtry

	try
		print("\n\nintegrate(\"1/x**2\",\"x\",i,infi) = ")
		print(integrate("1/x**2","x",i,infi))
	catch (var1 = info) == info
		print("throws an exception : " + var1)
	endtry

	try
		print("\n\nintegrate(\"1/x**2\",\"x\",-i,-infi) = ")
		print(integrate("1/x**2","x",-i,-infi))
	catch (var1 = info) == info
		print("throws an exception : " + var1)
	endtry

	try
		print("\n\nintegrate(\"2*sin(1/x)-cos(1/x )\",\"x\",0,inf) = ")
		print(integrate("2*sin(1/x)-cos(1/x )","x",0,inf))
	catch (var1 = info) == info
		print("throws an exception : " + var1)
	endtry

	try
		print("\n\nintegrate(\"2*sin(1/x)-cos(1/x )\",\"x\",0.001,inf) = ")
		print(integrate("2*sin(1/x)-cos(1/x )","x",0.001,inf))
	catch (var1 = info) == info
		print("throws an exception : " + var1)
	endtry

	try
		print("\n\nintegrate(\"2*sin(1/x)-cos(1/x )\",\"x\",0.001,1) = ")
		print(integrate("2*sin(1/x)-cos(1/x )","x",0.001,1))
	catch (var1 = info) == info
		print("throws an exception : " + var1)
	endtry

	try
		print("\n\nintegrate(\"2*sin(1/x)-cos(1/x )\",\"x\",0.001,1000) = ")
		print(integrate("2*sin(1/x)-cos(1/x )","x",0.001,1000))
	catch (var1 = info) == info
		print("throws an exception : " + var1)
	endtry

	try
		print("\n\nintegrate(\"2*sin(1/x)-cos(1/x )\",\"x\",0.001,10000) = ")
		print(integrate("2*sin(1/x)-cos(1/x )","x",0.001,10000))
	catch (var1 = info) == info
		print("throws an exception : " + var1)
	endtry

	try
		print("\n\nintegrate(\"2*sin(1/x)-cos(1/x )\",\"x\",0.0001,100000) = ")
		print(integrate("2*sin(1/x)-cos(1/x )","x",0.0001,100000))
	catch (var1 = info) == info
		print("throws an exception : " + var1)
	endtry

	try
		print("\n\nintegrate(\"2*sin(1/x)-cos(1/x )\",\"x\",0.001,1,1000) = ")
		print(integrate("2*sin(1/x)-cos(1/x )","x",0.001,1,1000))
	catch (var1 = info) == info
		print("throws an exception : " + var1)
	endtry

	try
		print("\n\nintegrate(\"2*sin(1/x)-cos(1/x )\",\"x\",0.1,1,1000) = ")
		print(integrate("2*sin(1/x)-cos(1/x )","x",0.1,1,1000))
	catch (var1 = info) == info
		print("throws an exception : " + var1)
	endtry

	try
		print("\n\nintegrate(\"2*sin(1/x)-cos(1/x )\",\"x\",0.00001,1,1000) = ")
		print(integrate("2*sin(1/x)-cos(1/x )","x",0.00001,1,1000))
	catch (var1 = info) == info
		print("throws an exception : " + var1)
	endtry

	try
		print("\n\nintegrate(\"2*sin(1/x)-cos(1/x )\",\"x\",0.001,1000,1000) = ")
		print(integrate("2*sin(1/x)-cos(1/x )","x",0.001,1000,1000))
	catch (var1 = info) == info
		print("throws an exception : " + var1)
	endtry

	try
		print("\n\nintegrate(\"2*sin(1/x)-cos(1/x )\",\"x\",0.001,10000,1000) = ")
		print(integrate("2*sin(1/x)-cos(1/x )","x",0.001,10000,1000))
	catch (var1 = info) == info
		print("throws an exception : " + var1)
	endtry

	try
		print("\n\nintegrate(\"2*sin(1/x)-cos(1/x )\",\"x\",0.0001,100000,1000) = ")
		print(integrate("2*sin(1/x)-cos(1/x )","x",0.0001,100000,1000))
	catch (var1 = info) == info
		print("throws an exception : " + var1)
	endtry

	try
		print("\n\nintegrate(\"2*sin(1/x)-cos(1/x )\",\"x\",0.1,1,0) = ")
		print(integrate("2*sin(1/x)-cos(1/x )","x",0.1,1,0))
	catch (var1 = info) == info
		print("throws an exception : " + var1)
	endtry

	try
		print("\n\nintegrate(\"2*sin(1/x)-cos(1/x )\",\"x\",0.001,1,0) = ")
		print(integrate("2*sin(1/x)-cos(1/x )","x",0.001,1,0))
	catch (var1 = info) == info
		print("throws an exception : " + var1)
	endtry

	try
		print("\n\nintegrate(\"2*sin(1/x)-cos(1/x )\",\"x\",0.0001,1,0) = ")
		print(integrate("2*sin(1/x)-cos(1/x )","x",0.0001,1,0))
	catch (var1 = info) == info
		print("throws an exception : " + var1)
	endtry

	try
		print("\n\ninteg_gk(\"2*sin(1/x)-cos(1/x )\",\"x\",0.0001,1) = ")
		print(integ_gk("2*sin(1/x)-cos(1/x )","x",0.0001,1))
	catch (var1 = info) == info
		print("throws an exception : " + var1)
	endtry

	try
		print("\n\ninteg_gk(\"2*sin(1/x)-cos(1/x )\",\"x\",0.0001,1,0) = ")
		print(integ_gk("2*sin(1/x)-cos(1/x )","x",0.0001,1,0))
	catch (var1 = info) == info
		print("throws an exception : " + var1)
	endtry

	try
		print("\n\ninteg_gk(\"2*sin(1/x)-cos(1/x )\",\"x\",0.0001,1,200) = ")
		print(integ_gk("2*sin(1/x)-cos(1/x )","x",0.0001,1,200))
	catch (var1 = info) == info
		print("throws an exception : " + var1)
	endtry

	try
		print("\n\ninteg_gk(\"2*sin(1/x)-cos(1/x )\",\"x\",0.0001,1,2000) = ")
		print(integ_gk("2*sin(1/x)-cos(1/x )","x",0.0001,1,2000))
	catch (var1 = info) == info
		print("throws an exception : " + var1)
	endtry

	try
		print("\n\nintegrate(\"2*sin(1/x)-cos(1/x )\",\"x\",0.00001,1,0) = ")
		print(integrate("2*sin(1/x)-cos(1/x )","x",0.00001,1,0))
	catch (var1 = info) == info
		print("throws an exception : " + var1)
	endtry

	try
		print("\n\nintegrate(\"2*sin(1/x)-cos(1/x )\",\"x\",0.001,1000,0) = ")
		print(integrate("2*sin(1/x)-cos(1/x )","x",0.001,1000,0))
	catch (var1 = info) == info
		print("throws an exception : " + var1)
	endtry

	try
		print("\n\nintegrate(\"2*sin(1/x)-cos(1/x )\",\"x\",0.001,10000,0) = ")
		print(integrate("2*sin(1/x)-cos(1/x )","x",0.001,10000,0))
	catch (var1 = info) == info
		print("throws an exception : " + var1)
	endtry

	try
		print("\n\nintegrate(\"2*sin(1/x)-cos(1/x )\",\"x\",0.0001,100000,0) = ")
		print(integrate("2*sin(1/x)-cos(1/x )","x",0.0001,100000,0))
	catch (var1 = info) == info
		print("throws an exception : " + var1)
	endtry

	print("\n\ninteg_gk(\"2*sin(1/x)-cos(1/x)\",\"x\",0.000001,1,1000,true, false, false) = ")
	print(integ_gk("2*sin(1/x)-cos(1/x)","x",0.000001,1,1000,true, false, false))

	try
		print("\n\ninteg_gk(\"2*sin(1/x)-cos(1/x)\",\"x\",0.000001,1,1000,true, true, true) = ")
		print(integ_gk("2*sin(1/x)-cos(1/x)","x",0.000001,1,1000,true, true, true))
	catch (var1 = info) == info
		print("throws an exception : " + var1)
	endtry

	try
		print("\n\ninteg_gk(\"2*sin(1/x)-cos(1/x)\",\"x\",0.000001,1,1000,true, true, false) = ")
		print(integ_gk("2*sin(1/x)-cos(1/x)","x",0.000001,1,1000,true, true, false))
	catch (var1 = info) == info
		print("throws an exception : " + var1)
	endtry

	try
		print("\n\ninteg_gk(\"2*sin(1/x)-cos(1/x)\",\"x\",0.000001,1,1000,true, false,true) = ")
		print(integ_gk("2*sin(1/x)-cos(1/x)","x",0.000001,1,1000,true, false,true))
	catch (var1 = info) == info
		print("throws an exception : " + var1)
	endtry

	try
		print("\n\ninteg_gk(\"abs(1/x)\",\"x\",-inf,inf,1000,true, false, false) = ")
		print(integ_gk("abs(1/x)","x",-inf,inf,1000,true, false, false))
	catch (var1 = info) == info
		print("throws an exception : " + var1)
	endtry

	print("\n\ninteg_gk(\"abs(1/x)\",\"x\",-inf,inf,1000,false, false, false) = ")
	print(integ_gk("abs(1/x)","x",-inf,inf,1000,false, false, false))

	try
		print("\n\ninteg_gk(\"abs(1/x)\",\"x\",-inf,inf,1000,true, false, true) = ")
		print(integ_gk("abs(1/x)","x",-inf,inf,1000,true, false, true))
	catch (var1 = info) == info
		print("throws an exception : " + var1)
	endtry

	try
		print("\n\ninteg_gk(\"abs(1/x)\",\"x\",-inf,inf,1000,true, true, true) = ")
		print(integ_gk("abs(1/x)","x",-inf,inf,1000,true, true, true))
	catch (var1 = info) == info
		print("throws an exception : " + var1)
	endtry

	try
		print("\n\ninteg_gk(\"abs(1/x)\",\"x\",-inf,inf,1000,false, true, true) = ")
		print(integ_gk("abs(1/x)","x",-inf,inf,1000,false, true, true))
	catch (var1 = info) == info
		print("throws an exception : " + var1)
	endtry

	print("\n\ninteg_gk(\"abs(1/x)\",\"x\",-inf,inf,1000,false, true, false) = ")
	print(integ_gk("abs(1/x)","x",-inf,inf,1000,false, true, false))

	try
		print("\n\nintegrate(\"abs(1/x)\",\"x\",-inf,inf,0) = ")
		print(integrate("abs(1/x)","x",-inf,inf,0))
	catch (var1 = info) == info
		print("throws an exception : " + var1)
	endtry

	print("\n\nintegrate(\"2*sin(1/x)-cos(1/x)\",\"x\",0.0000001,1) = ")
	print(integrate("2*sin(1/x)-cos(1/x)","x",0.0000001,1))

	print("\n\nintegrate(\"2*sin(1/x)-cos(1/x)\",\"x\",0.0,1) = ")
	print(integrate("2*sin(1/x)-cos(1/x)","x",0.0,1))

	print("\n\ninteg_gk(\"2*sin(1/x)-cos(1/x)\",\"x\",0,1, 1000, true, false, false) = ")
	print(integ_gk("2*sin(1/x)-cos(1/x)","x",0,1, 1000, true, false, false))

	try
		print("\n\ninteg_gk(\"2*sin(1/x)-cos(1/x)\",\"x\",0,1, 1000, true, false, true) = ")
		print(integ_gk("2*sin(1/x)-cos(1/x)","x",0,1, 1000, true, false, true))
	catch (var1 = info) == info
		print("throws an exception : " + var1)
	endtry

	try
		print("\n\ninteg_gk(\"2*sin(1/x)-cos(1/x)\",\"x\",0,1, 1000, true, true, false) = ")
		print(integ_gk("2*sin(1/x)-cos(1/x)","x",0,1, 1000, true, true, false))
	catch (var1 = info) == info
		print("throws an exception : " + var1)
	endtry

	print("\n\ninteg_gk(\"2*sin(1/x)-cos(1/x)\",\"x\",0,1, 1000, false, false, false) = ")
	print(integ_gk("2*sin(1/x)-cos(1/x)","x",0,1, 1000, false, false, false))

	try
		print("\n\nstrsub(\"exit\", 4) = ")
		print(strsub("exit",4))
	catch (var1 = info) == info
		print("throws an exception : " + var1)
	endtry

	try
		print("\n\nstrsub(\"exit\",4,5) = ")
		print(strsub("exit",4,5))
	catch (var1 = info) == info
		print("throws an exception : " + var1)
	endtry

	try
		print("\n\nstrsub(\"exit\",4,4) = ")
		print(strsub("exit", 4, 4))
	catch (var1 = info) == info
		print("throws an exception : " + var1)
	endtry

	try
		print("\n\nstrsub(\"exit\",4,3) = ")
		print(strsub("exit", 4, 3))
	catch (var1 = info) == info
		print("throws an exception : " + var1)
	endtry

	print("\n\nstrcmp(\"\",\"exit\") = ")
	print(strcmp("", "exit"))

	print("\n\nstricmp(\"exit\",\"eXIt\") = ")
	print(stricmp("exit", "eXIt"))

	print("\n\nstricmp(\"eXit\",\"\") = ")
	print(stricmp("eXit", ""))

	print("\n\nstricmp(\"abc\",\"kedsf\", 3,3,5,5) = ")
	print(stricmp("abc","kedsf", 3,3,5,5))

	try
		print("\n\nstricmp(\"abc\",\"kedsf\", 3,3,5,6) = ")
		print(stricmp("abc","kedsf", 3,3,5,6))
	catch (var1 = info) == info
		print("throws an exception : " + var1)
	endtry

	print("\n\nstrcpy(\"abc\",\"kedsf\",0,3,4,4) = ")
	print(strcpy("abc","kedsf",0,3,4,4))

	print("\n\nstrcpy(\"abc\",\"kedsf\",0,3,5) = ")
	print(strcpy("abc","kedsf",0,3,5))

	print("\n\nstrcpy(\"abc\",\"kedsf\",0,3,5,5) = ")
	print(strcpy("abc","kedsf",0,3,5,5))

	print("\n\nstrcpy(\"abc\",\"kedsf\",3,3,5,5) = ")
	print(strcpy("abc","kedsf",3,3,5,5))

	try
		print("\n\nstrcpy(\"abc\",\"kedsf\",3,3,5,6) = ")
		print(strcpy("abc","kedsf",3,3,5,6))
	catch (var1 = info) == info
		print("throws an exception : " + var1)
	endtry

	print("\n\nstrcpy(\"abc\",\"kedsf\",3,3,4,5) = ")
	print(strcpy("abc","kedsf",3,3,4,5))

	try
		print("\n\nstrcpy(\"abc\",\"kedsf\",3,3,5,4) = ")
		print(strcpy("abc","kedsf",3,3,5,4))
	catch (var1 = info) == info
		print("throws an exception : " + var1)
	endtry

	try
		print("\n\nstrcpy(\"abc\",\"kedsf\",3,2,4,5) = ")
		print(strcpy("abc","kedsf",3,2,4,5))
	catch (var1 = info) == info
		print("throws an exception : " + var1)
	endtry

	try
		print("\n\nstrcpy(\"abc\",\"kedsf\",3,4,4,5) = ")
		print(strcpy("abc","kedsf",3,4,4,5))
	catch (var1 = info) == info
		print("throws an exception : " + var1)
	endtry

	print("\n\nstrcpy(\"abc\",\"kedsf\",2,3,4,5) = ")
	print(strcpy("abc","kedsf",2,3,4,5))

	print("\n\nstrcmp(\"abc\",\"aBc\") = ")
	print(strcmp("abc","aBc"))

	print("\n\nstricmp(\"abc\",\"aBc\") = ")
	print(stricmp("abc","aBc"))

	print("\nsum_over(\"x+1\",\"x==10\",\"5\") ====> " + sum_over("x+1","x==10","5"))
	print("\nsum_over(\"x+1\",\"x=10\",\"5\") ====> " + sum_over("x+1","x=10","5"))
	print("\nsum_over(\"x1**2+1\",\"x1=6.4+0i\",\"5.81+4*i*i\") ====> " + sum_over("x1**2+1","x1=6.4+0i","5.81+4*i*i"))
	print("\nsum_over(\"x1**2+1\",\"x1=6.4\",\"5.81-4\") ====> " + sum_over("x1**2+1","x1=6.4","5.81-4"))

	print("\nproduct_over(\"x+1\",\"x==10\",\"5\") ====> " + product_over("x+1","x==10","5"))
	print("\nproduct_over(\"x+1\",\"x=10\",\"5\") ====> " + product_over("x+1","x=10","5"))
	print("\nproduct_over(\"x1**2+1\",\"x1=6.4+0i\",\"5.81+4*i*i\") ====> " + product_over("x1**2+1","x1=6.4+0i","5.81+4*i*i"))
	print("\nproduct_over(\"x1**2+1\",\"x1=6.4\",\"5.81-4\") ====> " + product_over("x1**2+1","x1=6.4","5.81-4"))
	
	print("\nevaluate(\" x + 2 \", \" x \", 2) ====> " + evaluate(" x + 2 ", " x ", 2))
	print("\nintegrate(\" x + 2 \", \" x \", \" x = 18 \", \" 9 \") ====> " + integrate(" x + 2 ", " x ", " x = 18 ", " 9 "))
	print("\nsum_over(\" x + 2 \", \" x = 18 \", \" 9 \") ====> " + sum_over(" x + 2 ", " x = 18 ", " 9 "))
	print("\nproduct_over(\" x + 2 \", \" x = 18 \", \" 9 \") ====> " + product_over(" x + 2 ", " x = 18 ", " 9 "))
	
	try
		print("\n\npow(1000,1000) = " + pow(1000,1000))
	catch(var2 = info) == info
		print("\n\npow(1000,1000) throws an exception : " + var2)
	endtry
	
	try
		print("\n\n0x5efab0.bc90340 = " + 0x5efab0.bc90340)
	catch(var2 = info) == info
		print("\n\n0x5efab0.bc90340 throws an exception : " + var2)
	endtry
	
	try
		print("\n\n0x = " + 0x)
	catch(var2 = info) == info
		print("\n\n0x throws an exception : " + var2)
	endtry
	
	try
		print("\n\n0x. = " + 0x.)
	catch(var2 = info) == info
		print("\n\n0x. throws an exception : " + var2)
	endtry
	
	try
		print("\n\n0x.3 = " + 0x.3)
	catch(var2 = info) == info
		print("\n\n0x.3 throws an exception : " + var2)
	endtry
	
	try
		print("\n\n0b.1 = " + 0b.1)
	catch(var2 = info) == info
		print("\n\n0b.1 throws an exception : " + var2)
	endtry
	
	try
		print("\n\n0b = " + 0b)
	catch(var2 = info) == info
		print("\n\n0b throws an exception : " + var2)
	endtry
	
	try
		print("\n\n0b. = " + 0b.)
	catch(var2 = info) == info
		print("\n\n0b. throws an exception : " + var2)
	endtry
	
	try
		print("\n\n00. = " + 00.)
	catch(var2 = info) == info
		print("\n\n00. throws an exception : " + var2)
	endtry
	
	try
		print("\n\n00.0 = " + 00.0)
	catch(var2 = info) == info
		print("\n\n00.0 throws an exception : " + var2)
	endtry
	
	try
		print("\n\n0 = " + 0)
	catch(var2 = info) == info
		print("\n\n0 throws an exception : " + var2)
	endtry
	
	try
		print("\n\n0x05efab0.bc90340 = " + 0x05efab0.bc90340)
	catch(var2 = info) == info
		print("\n\n0x05efab0.bc90340 throws an exception : " + var2)
	endtry
	
	try
		print("\n\n0000465137.02130 = " + 0000465137.02130)
	catch(var2 = info) == info
		print("\n\n0000465137.02130 throws an exception : " + var2)
	endtry
	
	try
		print("\n\n0x5ef.ab0.bc90340 = " + 0x5ef.ab0.bc90340)
	catch(var2 = info) == info
		print("\n\n0x5ef.ab0.bc90340 throws an exception : " + var2)
	endtry
	
	try
		print("\n\n0534712.432.011 = " + 0534712.432.011)
	catch(var2 = info) == info
		print("\n\n0534712.432.011 throws an exception : " + var2)
	endtry
	
	try
		print("\n\n0b001101.00.011 = " + 0b001101.00.011)
	catch(var2 = info) == info
		print("\n\n0b001101.00.011 throws an exception : " + var2)
	endtry
	
	try
		print("\n\n0b00110100.011 = " + 0b00110100.011)
	catch(var2 = info) == info
		print("\n\n0b00110100.011 throws an exception : " + var2)
	endtry
	
	try
		print("\n\n0xi = " + 0xi)
	catch(var2 = info) == info
		print("\n\n0xi throws an exception : " + var2)
	endtry
	
	try
		print("\n\n0bi = " + 0bi)
	catch(var2 = info) == info
		print("\n\n0bi throws an exception : " + var2)
	endtry
	
	try
		print("\n\n00i = " + 00i)
	catch(var2 = info) == info
		print("\n\n00i throws an exception : " + var2)
	endtry
	
	try
		print("\n\n0341.755i + 0x486A.BBCi + 0b101100.001010i= " + (0341.755i + 0x486A.BBCi + 0b101100.001010i))
	catch(var2 = info) == info
		print("\n\n0341.755i + 0x486A.BBCi + 0b101100.001010i throws an exception : " + var2)
	endtry
	
	try
		print("\n\n0X5efab0.bc90340i + 00.371 = " + (0X5efab0.bc90340i + 00.371))
	catch(var2 = info) == info
		print("\n\n0X5efab0.bc90340i + 00.371 throws an exception : " + var2)
	endtry

	try
		print("\n\n00.381 = " + 00.381)
	catch(var2 = info) == info
		print("\n\n00.381 throws an exception : " + var2)
	endtry

	try
		print("\n\n09 = " + 09)
	catch(var2 = info) == info
		print("\n\n09 throws an exception : " + var2)
	endtry

	try
		print("\n\n0b1.2 = " + 0b1.2)
	catch(var2 = info) == info
		print("\n\n0b1.2 throws an exception : " + var2)
	endtry

	try
		print("\n\n0x9. = " + 0x9.)
	catch(var2 = info) == info
		print("\n\n0x9. throws an exception : " + var2)
	endtry

	try
		print("\n\n0xa.ffg = " + 0xa.ffg)
	catch(var2 = info) == info
		print("\n\n0xa.ffg throws an exception : " + var2)
	endtry

	try
		print("\n\n0xa.ffE2 = " + 0xa.ffE2)
	catch(var2 = info) == info
		print("\n\n0xa.ffE2 throws an exception : " + var2)
	endtry

	try
		print("\n\n0379 = " + 0379)
	catch(var2 = info) == info
		print("\n\n0379 throws an exception : " + var2)
	endtry

	try
		print("\n\n0370 = " + 0370)
	catch(var2 = info) == info
		print("\n\n0370 throws an exception : " + var2)
	endtry

	try
		print("\n\n00371 = " + 00371)
	catch(var2 = info) == info
		print("\n\n00371 throws an exception : " + var2)
	endtry

	try
		print("\n\n003719 = " + 003719)
	catch(var2 = info) == info
		print("\n\n003719 throws an exception : " + var2)
	endtry

	try
		print("\n\n00371.547106 = " + 00371.547106)
	catch(var2 = info) == info
		print("\n\n00371.547106 throws an exception : " + var2)
	endtry

	try
		print("\n\n0B1001.0000 = " + 0B1001.0000)
	catch(var2 = info) == info
		print("\n\n0B1001.0000 throws an exception : " + var2)
	endtry

	try
		print("\n\n0b1001 = " + 0b1001)
	catch(var2 = info) == info
		print("\n\n0b1001 throws an exception : " + var2)
	endtry

	try
		print("\n\n0B1001.111-00216.339017 = " + (0B1001.111-00216.339017))
	catch(var2 = info) == info
		print("\n\n0B1001.111-00216.339017 throws an exception : " + var2)
	endtry

	try
		print("\n\n0B1001.111i-00216.335017i+0x42346FEd = " + (0B1001.111i-00216.335017i+0x42346FEd))
	catch(var2 = info) == info
		print("\n\n0B1001.111i-00216.335017i+0x42346FEd throws an exception : " + var2)
	endtry

	try
		print("\n\n(0b1001.111) = " + (0b1001.111))
	catch(var2 = info) == info
		print("\n\n(0b1001.111) throws an exception : " + var2)
	endtry

	try
		print("\n\n0B1001.111) = " + 0B1001.111))
	catch(var2 = info) == info
		print("\n\n0B1001.111) throws an exception : " + var2)
	endtry

	try
		print("\n\n0XF2E65.ECC0B1101, = ")
		0XF2E65.ECC0B1101,
		print(0XF2E65.ECC0B1101)
	catch(var2 = info) == info
		print("\n\n0XF2E65.ECC0B1101, throws an exception : " + var2)
	endtry

	try
		print("\n\n0B1001.111i-00216.,335017i+0x42346FEd = ")
		0B1001.111i-00216.,335017i+0x42346FEd
	catch(var2 = info) == info
		print("\n\n0B1001.111i-00216.,335017i+0x42346FEd throws an exception : " + var2)
	endtry

	print("\n\n381.46*0x00b3+0b001111.00101-003.763 = " + (381.46*0x00b3+0b001111.00101-003.763))
	
	variable xx, yy
	solve xx
	xx + 381.46*0x00b3+0b001111.00101-003.763 == sind(0b011100101.0011110)
	slvreto yy
	print("\n\ntry to solve xx + 381.46*0x00b3+0b001111.00101-003.763 == sind(0b011100101.0011110)")
	print("\nxx = " + xx)
	print("\nyy = " + yy)

	print("\n\nconv_bin_to_dec(\"00111001.000110\") = " + conv_bin_to_dec("00111001.000110"))
	print("\n\nconv_bin_to_hex(\".1000110001\") = " + conv_bin_to_hex(".1000110001"))
	print("\n\nconv_bin_to_oct(\"1000110001\") = " + conv_bin_to_oct("1000110001"))
	print("\n\nconv_dec_to_bin(\".487960\") = " + conv_dec_to_bin(".487960"))
	print("\n\nconv_dec_to_bin(.487960) = " + conv_dec_to_bin(.487960))
	print("\n\nconv_dec_to_bin(0.48700) = " + conv_dec_to_bin(0.48700))
	print("\n\nconv_dec_to_hex(\"153439.000\") = " + conv_dec_to_hex("153439.000"))
	print("\n\nconv_dec_to_hex(153439.000) = " + conv_dec_to_hex(153439.000))
	print("\n\nconv_dec_to_hex(153) = " + conv_dec_to_hex(153))
	print("\n\nconv_dec_to_oct(\"1356.2341\") = " + conv_dec_to_oct("1356.2341"))
	print("\n\nconv_dec_to_oct(1356.2341) = " + conv_dec_to_oct(1356.2341))
	print("\n\nconv_dec_to_oct(1356) = " + conv_dec_to_oct(1356))
	print("\n\nconv_hex_to_bin(\"0AB0039BA.FFE01BBC64\") = " + conv_hex_to_bin("0AB0039BA.FFE01BBC64"))
	print("\n\nconv_hex_to_dec(\"0AB0039BA.FFE01BBC64\") = " + conv_hex_to_dec("0AB0039BA.FFE01BBC64"))
	print("\n\nconv_hex_to_oct(\"0AB0039BA\") = " + conv_hex_to_oct("0AB0039BA"))
	print("\n\nconv_oct_to_bin(\"027400330.017764\") = " + conv_oct_to_bin("027400330.017764"))
	print("\n\nconv_oct_to_dec(\"027400330.017764\") = " + conv_oct_to_dec("027400330.017764"))
	print("\n\nconv_oct_to_hex(\"027400330\") = " + conv_oct_to_hex("027400330"))

	testAndOr()
	testContinueBreak()
	
	print("\n\nround_matrix([[1.823423434654,2.423445090543-4.6645646479i],[e, pi-e*i],[\"hello world\", 5.23412523645645/3.432535423564, 2.7323415346i]], 3) = " + _
		round_matrix([[1.823423434654,2.423445090543-4.6645646479i],[e, pi-e*i],["hello world", 5.23412523645645/3.432535423564, 2.7323415346i]], 3))
	
	print("\n\neig(INF) = " + eig(INF))
	print("\n\neig(NAN) = " + eig(NAN) )
	print("\n\neig([[0,0],[0,0]]) = " + eig([[0,0],[0,0]]) )
	print("\n\neig([[1,1],[1,1]]) = " + eig([[1,1],[1,1]]) )
	print("\n\neig([[1,0],[0,1]]) = " + eig([[1,0],[0,1]]) )
	print("\n\neig(2.81+3.33i) = " + eig(2.81+3.33i) )
	print("\n\neig([2.81+3.33i]) = " + eig([2.81+3.33i]) )
	print("\n\neig([[2.81+3.33i]]) = " + eig([[2.81+3.33i]]) )
	print("\n\neig([2.81+3.33i], [pi]) = " + eig([2.81+3.33i], [pi]) )
	print("\n\neig([0], [pi]) = " + eig([0], [pi]) )
	print("\n\neig([[2.81+3.33i]], [[pi]]) = " + eig([[2.81+3.33i]], [[pi]]) )
	print("\n\neig([[-2,1,1],[0,2,0],[-4,1,3]]) = " + eig([[-2,1,1],[0,2,0],[-4,1,3]]) )
	print("\n\neig([[1 + 3.7i, -0.41-2.93i, 5.33+0.52i], [0.33 + 2.71i, -3.81i, 0.41+3.37i], [2.88, 0, -9.4i]]) = " + eig([[1 + 3.7i, -0.41-2.93i, 5.33+0.52i], [0.33 + 2.71i, -3.81i, 0.41+3.37i], [2.88, 0, -9.4i]]) )
	print("\n\neig([[1 + 3.7i, -0.41-2.93i, 5.33+0.52i], [0.33 + 2.71i, -3.81i, 0.41+3.37i], [2.88, 0, -9.4i]], [[6.21 - 3.84i, -5.8 + 2.71i, -0.699i], [-2.71 - 3.81i, 6.24 + 2.51i, 0.96 + 0.31i], [-2.674 + 3.36i, -0.09 + 10.21i, 5.62i]]) = " + eig([[1 + 3.7i, -0.41-2.93i, 5.33+0.52i], [0.33 + 2.71i, -3.81i, 0.41+3.37i], [2.88, 0, -9.4i]], [[6.21 - 3.84i, -5.8 + 2.71i, -0.699i], [-2.71 - 3.81i, 6.24 + 2.51i, 0.96 + 0.31i], [-2.674 + 3.36i, -0.09 + 10.21i, 5.62i]]) )
	print("\n\neig([[7 + 6i, -4 - 3.1i, 0.66 - 2.64i, -5+9i], [-3.87 + 5.85i, 4.33i, -0.95 + 2.13i, 9.46], [2.81 + 1.37i, -0.43 + 2.91i, -1.36 + 0.46i, -2.22-3.21i], [-9.88i, 2.45-2.45i, 5.21 + 0.37i, -2.17 - 1.85i]]) = " + eig([[7 + 6i, -4 - 3.1i, 0.66 - 2.64i, -5+9i], [-3.87 + 5.85i, 4.33i, -0.95 + 2.13i, 9.46], [2.81 + 1.37i, -0.43 + 2.91i, -1.36 + 0.46i, -2.22-3.21i], [-9.88i, 2.45-2.45i, 5.21 + 0.37i, -2.17 - 1.85i]]) )
	print("\n\neig([[7 + 6i, -4 - 3.1i, 0.66 - 2.64i, -5+9i], [-3.87 + 5.85i, 4.33i, -0.95 + 2.13i, 9.46], [2.81 + 1.37i, -0.43 + 2.91i, -1.36 + 0.46i, -2.22-3.21i], [-9.88i, 2.45-2.45i, 5.21 + 0.37i, -2.17 - 1.85i]], [[9.08 - 4.21i, 0.5 + 2.7i, 0.94, 7.21-4.41i], [2.31+2.22i, 5.45-4.56i, 0.23 + 4.43i, 9.49i], [0.47+5.66i, -2.21 - 0.49i, -5.31 + 2.17i, 0.98 + 0.44i], [0.38 - 9.44i, 0.45 - 0.48i, 1.05 - 0.89i, 0i]]) = " + eig([[7 + 6i, -4 - 3.1i, 0.66 - 2.64i, -5+9i], [-3.87 + 5.85i, 4.33i, -0.95 + 2.13i, 9.46], [2.81 + 1.37i, -0.43 + 2.91i, -1.36 + 0.46i, -2.22-3.21i], [-9.88i, 2.45-2.45i, 5.21 + 0.37i, -2.17 - 1.85i]], [[9.08 - 4.21i, 0.5 + 2.7i, 0.94, 7.21-4.41i], [2.31+2.22i, 5.45-4.56i, 0.23 + 4.43i, 9.49i], [0.47+5.66i, -2.21 - 0.49i, -5.31 + 2.17i, 0.98 + 0.44i], [0.38 - 9.44i, 0.45 - 0.48i, 1.05 - 0.89i, 0i]]) )

	print("\n\nget_eigen_values(INF) = " + get_eigen_values(INF) )
	print("\n\nget_eigen_values(NAN) = " + get_eigen_values(NAN) )
	print("\n\nget_eigen_values([[0,0],[0,0]]) = " + get_eigen_values([[0,0],[0,0]]) )
	print("\n\nget_eigen_values([[1,1],[1,1]]) = " + get_eigen_values([[1,1],[1,1]]) )
	print("\n\nget_eigen_values([[1,0],[0,1]]) = " + get_eigen_values([[1,0],[0,1]]) )
	print("\n\nget_eigen_values(2.81+3.33i) = " + get_eigen_values(2.81+3.33i) )
	print("\n\nget_eigen_values([2.81+3.33i]) = " + get_eigen_values([2.81+3.33i]) )
	print("\n\nget_eigen_values([[2.81+3.33i]]) = " + get_eigen_values([[2.81+3.33i]]) )
	print("\n\nget_eigen_values([2.81+3.33i], [pi]) = " + get_eigen_values([2.81+3.33i], [pi]) )
	print("\n\nget_eigen_values([0], [pi]) = " + get_eigen_values([0], [pi]) )
	print("\n\nget_eigen_values([[2.81+3.33i]], [[pi]]) = " + get_eigen_values([[2.81+3.33i]], [[pi]]) )
	print("\n\nget_eigen_values([[1 + 3.7i, -0.41-2.93i, 5.33+0.52i], [0.33 + 2.71i, -3.81i, 0.41+3.37i], [2.88, 0, -9.4i]]) = " + get_eigen_values([[1 + 3.7i, -0.41-2.93i, 5.33+0.52i], [0.33 + 2.71i, -3.81i, 0.41+3.37i], [2.88, 0, -9.4i]]) )
	print("\n\nget_eigen_values([[1 + 3.7i, -0.41-2.93i, 5.33+0.52i], [0.33 + 2.71i, -3.81i, 0.41+3.37i], [2.88, 0, -9.4i]], [[6.21 - 3.84i, -5.8 + 2.71i, -0.699i], [-2.71 - 3.81i, 6.24 + 2.51i, 0.96 + 0.31i], [-2.674 + 3.36i, -0.09 + 10.21i, 5.62i]]) = " + get_eigen_values([[1 + 3.7i, -0.41-2.93i, 5.33+0.52i], [0.33 + 2.71i, -3.81i, 0.41+3.37i], [2.88, 0, -9.4i]], [[6.21 - 3.84i, -5.8 + 2.71i, -0.699i], [-2.71 - 3.81i, 6.24 + 2.51i, 0.96 + 0.31i], [-2.674 + 3.36i, -0.09 + 10.21i, 5.62i]]) )
	print("\n\nget_eigen_values([[7 + 6i, -4 - 3.1i, 0.66 - 2.64i, -5+9i], [-3.87 + 5.85i, 4.33i, -0.95 + 2.13i, 9.46], [2.81 + 1.37i, -0.43 + 2.91i, -1.36 + 0.46i, -2.22-3.21i], [-9.88i, 2.45-2.45i, 5.21 + 0.37i, -2.17 - 1.85i]]) = " + get_eigen_values([[7 + 6i, -4 - 3.1i, 0.66 - 2.64i, -5+9i], [-3.87 + 5.85i, 4.33i, -0.95 + 2.13i, 9.46], [2.81 + 1.37i, -0.43 + 2.91i, -1.36 + 0.46i, -2.22-3.21i], [-9.88i, 2.45-2.45i, 5.21 + 0.37i, -2.17 - 1.85i]]) )
	print("\n\nget_eigen_values([[7 + 6i, -4 - 3.1i, 0.66 - 2.64i, -5+9i], [-3.87 + 5.85i, 4.33i, -0.95 + 2.13i, 9.46], [2.81 + 1.37i, -0.43 + 2.91i, -1.36 + 0.46i, -2.22-3.21i], [-9.88i, 2.45-2.45i, 5.21 + 0.37i, -2.17 - 1.85i]], [[9.08 - 4.21i, 0.5 + 2.7i, 0.94, 7.21-4.41i], [2.31+2.22i, 5.45-4.56i, 0.23 + 4.43i, 9.49i], [0.47+5.66i, -2.21 - 0.49i, -5.31 + 2.17i, 0.98 + 0.44i], [0.38 - 9.44i, 0.45 - 0.48i, 1.05 - 0.89i, 0i]]) = " + get_eigen_values([[7 + 6i, -4 - 3.1i, 0.66 - 2.64i, -5+9i], [-3.87 + 5.85i, 4.33i, -0.95 + 2.13i, 9.46], [2.81 + 1.37i, -0.43 + 2.91i, -1.36 + 0.46i, -2.22-3.21i], [-9.88i, 2.45-2.45i, 5.21 + 0.37i, -2.17 - 1.85i]], [[9.08 - 4.21i, 0.5 + 2.7i, 0.94, 7.21-4.41i], [2.31+2.22i, 5.45-4.56i, 0.23 + 4.43i, 9.49i], [0.47+5.66i, -2.21 - 0.49i, -5.31 + 2.17i, 0.98 + 0.44i], [0.38 - 9.44i, 0.45 - 0.48i, 1.05 - 0.89i, 0i]]) )

	if (regmode == 1)
		variable Ar = [[1.842135677, 4.123314945, 3.680593024, -4.195463468, -2.643567759, 0.141354338, 0.190537566, -4.498807758],[4.930557411, 1.408414219, -1.994110514, 0.730694045, -1.834403633, -1.051893138, 1.867082778, 0.887284621],[-2.057056531, -3.907149179, 3.007200622, 4.911260325, 0.207540813, 4.390652701, 3.159631394, -0.100188782],[-2.232960462, -0.755032945, -3.611196299, -3.176058179, 0.125192249, -4.55919288, -4.055956468, -3.22136085],[-3.646888954, -1.104969664, 2.992580188, 0.453096816, 0.926525928, 4.18291975, -2.537650537, 2.467387773],[-2.672466903, -0.57546511, 0.16225166, 4.884918103, -1.734199113, 0.099670044, -0.39908069, -4.784639398],[2.301445235, -4.795731484, -1.228902938, 0.734854036, -4.271401045, 0.689669699, 0.770115267, -1.771138365],[0.908738897, -3.993754733, 2.564915657, 0.820435186, 0.440716506, 2.953745089, -1.312083819, 1.151585709]]
		variable Ai = [[1.672960358, 3.410591906, -1.059643313, -3.578369446, 3.459101052, -3.386125821, 2.198268257, 5.310760661],[2.9744097, -5.612831869, 1.00814638, 4.058608209, -0.115405935, -1.292224995, 5.048918599, -2.70463905],[5.319046633, -4.147069305, 5.074378102, 5.9662464, 3.447246366, 5.63739657, -5.593492748, 0.481178043],[-3.208676767, 5.770816286, -2.457250435, 3.704361184, 0.443385909, -4.246108606, 0.849562902, 5.00109282],[-3.86157289, 4.865983873, 3.060725289, 4.990639661, 0.450278929, -1.338085266, 3.879270479, 0.814496834],[-2.712866252, -4.530789778, -5.841466761, -2.973947528, 4.89628363, -5.03972218, -3.808493932, 3.59005603],[1.206400247, -2.27891157, -4.302643486, -1.573477737, 1.101252619, 4.650720189, 0.105602054, -1.712386958],[-4.066350098, -3.814944989, 0.630410567, -1.622336304, -1.213696585, 0.261657998, -5.218106352, 1.490739823]]
		variable A = Ar + Ai * i
		print("\n\nA = " + A)
		print("\n\neig(A) = " + eig(A))	// too slow for mobile
	else
		variable Ar = [[1.842135677, 4.123314945, 3.680593024, -4.195463468, -2.643567759],[-1.994110514, -1.834403633, -1.051893138, 1.867082778, 0.887284621],[-2.057056531, 0.207540813, 4.390652701, 3.159631394, -0.100188782],[-2.232960462, -0.755032945, -3.611196299, -3.176058179, -3.22136085],[0.453096816, 0.926525928, 4.18291975, -2.537650537, 2.467387773]]
		variable Ai = [[1.672960358, 3.410591906, -1.059643313, -3.578369446, 5.310760661],[2.9744097, -5.612831869, -1.292224995, 5.048918599, -2.70463905],[5.319046633, 3.447246366, 5.63739657, -5.593492748, 0.481178043],[3.704361184, 0.443385909, -4.246108606, 0.849562902, 5.00109282],[-3.86157289, 4.865983873, 3.060725289, 3.879270479, 0.814496834]]
		variable A = Ar + Ai * i
		print("\n\nA = " + A)
		print("\n\neig(A) = " + eig(A))	// too slow for mobile
	endif

	print("\n\nsize(3.71i-4) = " + size(3.71i - 4))

	print("\n\nsize(\"hello world!\") = " + size("hello world!"))

	print("\n\nsize(5.88) = " + size(5.88))

	print("\n\nsize([[],[]]) = " + size([[],[]]))

	print("\n\nsize([[]]) = " + size([[]]))

	print("\n\nsize([]) = " + size([]))

	print("\n\nsize([[[3.71i-4]]]) = " + size([[[3.71i-4]]]))

	print("\n\nsize([8, [[9, 2, [3]], 4], [\"hello world!\"]]) = " + size([8, [[9, 2, [3]], 4], ["hello world!"]]))

	print("\n\nsize([5.88,[9i]]) = " + size([5.88,[9i]]))

	print("\n\nones(1) = " + ones(1))

	variable vartrycatch1
	try
	print("\n\nzeros(1) = " + zeros(1))
	catch (vartrycatch1 = info) == info
	print("\n\nzeros(1) throws an exception: " + vartrycatch1)
	endtry

	print("\n\nones([]) = " + ones([]))

	if true
		variable test_var_a, test_var_b
		test_var_a = [1,2]
		test_var_b = test_var_a
		print("\n\nAfter test_var_b = test_var_a, test_var_b is " + test_var_b)
		try
			test_var_b[1] = test_var_a
		catch (vartrycatch1 = info) == info
			print("\n\ntest_var_b[1] = test_var_a throws an exception: " + vartrycatch1)
		endtry	
		print("\n\ntest_var_b = " + test_var_b)
		print("\n\nAfter test_var_b[1] = test_var_a, test_var_b is " + test_var_b)
		set_array_elem(test_var_b, [2], test_var_a)
		print("\n\nAfter set_array_elem(test_var_b, [2], test_var_a), test_var_b is " + test_var_b)
		test_var_b = set_array_elem(test_var_b, [3,4], test_var_a)
		print("\n\nAfter test_var_b = set_array_elem(test_var_b, [3,4], test_var_a), test_var_b is " + test_var_b)
	endif

	variable varnewTS = now()
	print("\n\nintegrate(\"integrate(\\\"x*y/7.43*8.91i/[3,7.11-0.94i][1]+1/6i/x*8.44-(0.457+8.44i)*3*y-4.837-6.74i\\\", \\\"x\\\", 8+9.31i, 45.532i,200)\",\"y\",\"y=8-30.923i\",8.4325+4.323i,50) = " _
		+ integrate("integrate(\"x*y/7.43*8.91i/[3,7.11-0.94i][1]+1/6i/x*8.44-(0.457+8.44i)*3*y-4.837-6.74i\", \"x\", 8+9.31i, 45.532i,200)","y","y=8-30.923i",8.4325+4.323i,50))
	print("\n\nsum_over(\"sum_over(\\\"x*y+x-y+3.7i\\\",\\\"x=9\\\",\\\"319\\\")\",\"y=4\",\"98\") = " + sum_over("sum_over(\"x*y+x-y+3.7i\",\"x=9\",\"319\")","y=4","98"))
	print("\n\nproduct_over(\"product_over(\\\"x*y+x-y+3\\\",\\\"x=9\\\",\\\"6\\\")\",\"y=4\",\"8\") = " + product_over("product_over(\"x*y+x-y+3\",\"x=9\",\"6\")","y=4","8"))
	print("\nThe above commands take " + (now()-varnewTS)/1000.0 + " seconds.")
		
	validate_solve()
	validate_expr2str()
	
	big_data_test(regmode)
	test_nan_inf()
	look_up_abnormal_values()
	test_lim()
	
	indef_integ_reg_test()
	derivative_reg_test()
	test_cs_reference::test_cs_reference()
	test_hash_space::test_hash_code()
	
	exdata_test()
	
	returns_return_Nothing()
	returns_return_Nothing2()
	returns_return_Nothing3()
	
	print("\n\nround(sqrt(4.2)) = ")
	print(round(sqrt(4.2)))

	print("\n\nceil(sqrt(4.2)) = ")
	print(ceil(sqrt(4.2)))

	print("\n\nfloor(4.2**2) = ")
	print(floor(4.2**2))

	print("\n\nfloor(4.2**0.2) = ")
	print(floor(4.2**0.2))

	print("\n\nround(4.2**2) = ")
	print(round(4.2**2))

	print("\n\nround([4.2**2]) = ")
	print(round([4.2**2]))

	try
		print("\n\nround([4.2**2,1]) = ")
		print(round([4.2**2,1]))
	catch (var1 = info)==info
		print("throws an exception : " + var1)
	endtry

	print("\n\nevaluate(\"evaluate(\\\"x+y\\\",\\\"x\\\",3)\",\"y\",4) = ")
	print(evaluate("evaluate(\"x+y\",\"x\",3)","y",4))

	print("\n\nevaluate(\"evaluate(\\\"x+2\\\",\\\"x\\\",3)\",\"x\",4) = ")
	print(evaluate("evaluate(\"x+2\",\"x\",3)","x",4))

	print("\n\nevaluate(\"evaluate(\\\"x+2\\\",\\\"x\\\",3)\",\"y\",4) = ")
	print(evaluate("evaluate(\"x+2\",\"x\",3)","y",4))

	print("\n\nevaluate(\"5+x+y\",\"x\",3,\"y\",4) = ")
	print(evaluate("5+x+y","x",3,"y",4))

	print("\n\nevaluate(\"5+x+y\",\"x\",3,\"y\",4,\"z\",5) = ")
	print(evaluate("5+x+y","x",3,"y",4,"z",5))

	print("\n\nevaluate(\"5+x+y\",\"x\",3,\"y\",4,\"z\",\"ab5\") = ")
	print(evaluate("5+x+y","x",3,"y",4,"z","ab5"))

	print("\n\nevaluate(\"3+sqrt(7)\") = ")
	print(evaluate("3+sqrt(7)"))

	try
		print("\n\nevaluate(\"5+x+y\") = ")
		print(evaluate("5+x+y"))
	catch (var1 = info)==info
		print("throws an exception : " + var1)
	endtry

	try
		print("\n\nevaluate(\"5+x+y\", \"x\") = ")
		print(evaluate("5+x+y", "x"))
	catch (var1 = info)==info
		print("throws an exception : " + var1)
	endtry

	try
		print("\n\nevaluate(\"5+x+y\", \"x\", 3, \"y\", 4, \"z\") = ")
		print(evaluate("5+x+y", "x", 3, "y", 4, "z"))
	catch (var1 = info)==info
		print("throws an exception : " + var1)
	endtry

	try
		print("\n\nevaluate(\"evaluate(\\\"5+x+y\\\",\\\"x\\\",3,\\\"y\\\",4,\\\"z\\\",\\\"ab5\\\")\",\"x\",300,\"y\",400,\"z\",\"ab5c\") = ")
		print(evaluate("evaluate(\"5+x+y\",\"x\",3,\"y\",4,\"z\",\"ab5\")","x",300,"y",400,"z","ab5c"))
	catch (var1 = info)==info
		print("throws an exception : " + var1)
	endtry
	
	print("\n\nevaluate(\"evaluate(\\\"5+x+y+z+w\\\",\\\"x\\\",3,\\\"y\\\",4)\", \"z\", 100, \"w\", 101) = ")
	print(evaluate("evaluate(\"5+x+y+z+w\",\"x\",3,\"y\",4)", "z", 100, "w", 101))
	
	print("\n\nupper_triangular_matrix([[1,2,3],[4,5,8]]) = " + upper_triangular_matrix([[1,2,3],[4,5,8]]))

	print("\n\nrank([[1,2,3],[4,5,8]]) = " + rank([[1,2,3],[4,5,8]]))

	try
		print("\n\nupper_triangular_matrix([[1,2,3,7-8i],[4,5,8],[0,-6,i,-3i]]) = " + upper_triangular_matrix([[1,2,3,7-8i],[4,5,8],[0,-6,i,-3i]]))
	catch info==(var1 = info)
		print("\n\nupper_triangular_matrix([[1,2,3,7-8i],[4,5,8],[0,-6,i,-3i]]) throws an exception!")
	endtry

	print("\n\nupper_triangular_matrix([[1,2,3,7-8i],[4,5,0.33-9.12i,8],[0,-6,i,-3i]]) = " + upper_triangular_matrix([[1,2,3,7-8i],[4,5,0.33-9.12i,8],[0,-6,i,-3i]]))

	print("\n\nupper_triangular_matrix([[4.33i,2,3,7-8i,-11.7i],[4,5,0.33-9.12i,8,-7.98-3.21i],[0.8-5.4i,-6,i,-3i,0.56i]]) = " + upper_triangular_matrix([[4.33i,2,3,7-8i,-11.7i],[4,5,0.33-9.12i,8,-7.98-3.21i],[0.8-5.4i,-6,i,-3i,0.56i]]))

	print("\n\nupper_triangular_matrix([[4.33i,2,3,7-8i,-11.7i],[4,5,0.33-9.12i,8,-7.98-3.21i],[0.8-5.4i,-6,i,-3i,0.56i]]') = " + upper_triangular_matrix([[4.33i,2,3,7-8i,-11.7i],[4,5,0.33-9.12i,8,-7.98-3.21i],[0.8-5.4i,-6,i,-3i,0.56i]]'))

	print("\n\nupper_triangular_matrix(9) = " + upper_triangular_matrix(9))

	try
		print("\n\nupper_triangular_matrix([9]) = " + upper_triangular_matrix([9]))
	catch info==(var1 = info)
		print("\n\nupper_triangular_matrix([9]) throws an exception!")
	endtry

	print("\n\nupper_triangular_matrix([[9]]) = " + upper_triangular_matrix([[9]]))

	try
		print("\n\nupper_triangular_matrix([[]]) = " + upper_triangular_matrix([[]]))
	catch info==(var1 = info)
		print("\n\nupper_triangular_matrix([[]]) throws an exception!")
	endtry

	print("\n\nupper_triangular_matrix([[1,2,5],[2,7,8],[2,4,10]]) = " + upper_triangular_matrix([[1,2,5],[2,7,8],[2,4,10]]))

	print("\n\nupper_triangular_matrix([[1,2,5],[2,7,8],[2,4,11]]) = " + upper_triangular_matrix([[1,2,5],[2,7,8],[2,4,11]]))

	print("\n\nrank([[1,2,5],[2,7,8],[2,4,10]]) = " + rank([[1,2,5],[2,7,8],[2,4,10]]))

	print("\n\nrank([[1,2,5],[2,7,8],[2,4,11]]) = " + rank([[1,2,5],[2,7,8],[2,4,11]]))

	print("\n\nupper_triangular_matrix([[1,2,5],[2,7,8],[2,4,10],[-6,0,9]]) = " + upper_triangular_matrix([[1,2,5],[2,7,8],[2,4,10],[-6,0,9]]))

	print("\n\nupper_triangular_matrix([[1,2,5,6],[2,7,8,0],[2,4,10,9]]) = " + upper_triangular_matrix([[1,2,5,6],[2,7,8,0],[2,4,10,9]]))

	print("\n\nrank([[1,2,5,6],[2,7,8,0],[2,4,10,9]]) = " + rank([[1,2,5,6],[2,7,8,0],[2,4,10,9]]))

	cs_test::citing_space_test()
	
	test_time_date()
	
	variable test_clone_src = [2, [], ["hello world", [1 + 2 * i, [], []], [[1, 2], [3, 4, 5]]]], test_clone_dest
	test_clone_dest = clone(test_clone_src)
	print("\n\nBefore changing src:")
	print("\n\ntest_clone_src = " + test_clone_src)
	print("\n\ntest_clone_dest = " + test_clone_dest)
	test_clone_src[0] = 9
	print("\n\nAfterchanging src:")
	print("\n\ntest_clone_src = " + test_clone_src)
	print("\n\ntest_clone_dest = " + test_clone_dest)
	test_clone_src = 5 + 6i
	test_clone_dest = clone(test_clone_src)
	print("\n\nBefore changing src:")
	print("\n\ntest_clone_src = " + test_clone_src)
	print("\n\ntest_clone_dest = " + test_clone_dest)
	test_clone_src = 7
	print("\n\nAfterchanging src:")
	print("\n\ntest_clone_src = " + test_clone_src)
	print("\n\ntest_clone_dest = " + test_clone_dest)
	print("\n\nclone(\"hello world!\") = " + clone("hello world!"))
	
	print("\n\nconv_ints_to_str(335436) = ")
	print(conv_ints_to_str(335436))
	print("\n\nconv_ints_to_str(33) = ")
	print(conv_ints_to_str(33))
	print("\n\nconv_ints_to_str([]) = ")
	print(conv_ints_to_str([]))
	print("\n\nconv_ints_to_str([52,65,33, 945, 2206, 7, 9, 1881]) = ")
	print(conv_ints_to_str([52,65,33, 945, 2206, 7, 9, 1881]))
	print("\n\nconv_str_to_ints(\"4\") = ")
	print(conv_str_to_ints("4"))
	print("\n\nconv_str_to_ints(\"4A!a慧\") = ")
	print(conv_str_to_ints("4A!a慧"))
	print("\n\nconv_str_to_ints(\"中华人民共和国\") = ")
	print(conv_str_to_ints("中华人民共和国"))
	print("\n\nconv_ints_to_str([35774, 32622, 26234, 24935, 35745, 31639, 22120, 32472, 22270, 26102, 21464, 37327, 21464, 21270, 33539, 22260]) = ")
	print(conv_ints_to_str([35774, 32622, 26234, 24935, 35745, 31639, 22120, 32472, 22270, 26102, 21464, 37327, 21464, 21270, 33539, 22260]))
	//print("\n\nconv_ints_to_str([35774, 32622, 26234, 24935, 35745, 31639, 22120, 32472, 22270, 26102, 21464, 37327, 21464, 2127088, 33539, 22260]) = ")
	//print(conv_ints_to_str([35774, 32622, 26234, 24935, 35745, 31639, 22120, 32472, 22270, 26102, 21464, 37327, 21464, 2127088, 33539, 22260]))
	print("\n\nconv_ints_to_str([35774, 32622, 26234, 24935, 35745, 31639, 22120, 32472, 22270, 26102, 21464, 37327, 21464, 512708, 33539, 22260]) = ")
	print(conv_ints_to_str([35774, 32622, 26234, 24935, 35745, 31639, 22120, 32472, 22270, 26102, 21464, 37327, 21464, 512708, 33539, 22260]))
	print("\n\nconv_ints_to_str([35774, 32622, 26234, 24935, 35745, 31639, 22120, 32472, 22270, 26102, 21464, 37327, 21464, 1012708, 33539, 22260]) = ")
	print(conv_ints_to_str([35774, 32622, 26234, 24935, 35745, 31639, 22120, 32472, 22270, 26102, 21464, 37327, 21464, 1012708, 33539, 22260]))
	print("\n\nconv_ints_to_str([35774, 32622, 26234, 24935, 35745, 31639, 22120, 32472, 22270, 26102, 21464, 37327, 21464, 1112708, 33539, 22260]) = ")
	print(conv_ints_to_str([35774, 32622, 26234, 24935, 35745, 31639, 22120, 32472, 22270, 26102, 21464, 37327, 21464, 1112708, 33539, 22260]))
	//print("\n\nconv_ints_to_str([35774, 32622, 26234, 24935, 35745, 31639, 22120, 32472, 22270, 26102, 21464, 37327, 21464, 1212708, 33539, 22260]) = ")
	//print(conv_ints_to_str([35774, 32622, 26234, 24935, 35745, 31639, 22120, 32472, 22270, 26102, 21464, 37327, 21464, 1212708, 33539, 22260]))
	print("\n\nconv_str_to_ints(\"\") = ")
	print(conv_str_to_ints(""))
	// char 0 cannot be correctly copied to a text edit.
	print("\n\nconv_str_to_ints(conv_ints_to_str(-3)) = ")
	print(conv_str_to_ints(conv_ints_to_str(-3)))
	print("\n\nconv_str_to_ints(conv_ints_to_str(-33235235342342135)) = ")
	print(conv_str_to_ints(conv_ints_to_str(-33235235342342135)))
	print("\n\nconv_str_to_ints(conv_ints_to_str(-0)) = ")
	print(conv_str_to_ints(conv_ints_to_str(-0)))
	print("\n\nconv_str_to_ints(conv_ints_to_str(-1)) = ")
	print(conv_str_to_ints(conv_ints_to_str(-1)))
	try
		print("\n\nsystem(\"javac\") = ")
		print(system("javac"))
	catch (var1 = info)==info
		print("throws an exception")
	endtry
	try
		print("\n\nsystem(\"bcc32\") = ")
		print(system("bcc32"))
	catch (var1 = info)==info
		print("throws an exception")
	endtry
	try
		print("\n\nsystem(\"java\") = ")
		print(system("java"))
	catch (var1 = info)==info
		print("throws an exception")
	endtry
	try
		print("\n\nsystem(\"cmd /c dir\") = ")
		print(system("cmd /c dir"))
	catch (var1 = info)==info
		print("throws an exception")
	endtry
	try
		print("\n\nsystem([\"cmd\", \"/c\", \"dir\"]) = ")
		print(system(["cmd", "/c", "dir"]))
	catch (var1 = info)==info
		print("throws an exception")
	endtry
	try
		print("\n\nsystem([\"cmd\", \"/c\", \"dir\", \"C:\\\\cygwin64\"]) = ")
		print(system(["cmd", "/c", "dir", "C:\\cygwin64"]))
	catch (var1 = info)==info
		print("throws an exception")
	endtry
	try
		print("\n\nsystem(\"bkg\") = ")
		print(system("bkg"))
	catch (var1 = info)==info
		print("throws an exception")
	endtry
	
	//testgetSrcFilePathinPredef()
	print_line("\nIn user-defined lib, get_src_file_path() returns " + get_src_file_path())
	print_line("Now test print line:")
	print_line([1, "54", [3+7i, -9]])
	print_line()
	print("----")
	print(break_line())
	print_line("Now test get_upper_level_path:")
	print("get_upper_level_path(c:\\) = " + get_upper_level_path("c:\\") + break_line())
	print("get_upper_level_path(c:\\..) = " + get_upper_level_path("c:\\..") + break_line())
	print("get_upper_level_path(c:\\\\..\\\\) = " + get_upper_level_path("c:\\\\..\\\\  ") + break_line())
	print("get_upper_level_path(c:\\dev\\abc.dfg) = " + get_upper_level_path("c:\\dev\\abc.dfg") + break_line())
	print("get_upper_level_path(dw\\abc.dfg) = " + get_upper_level_path(" dw\\abc.dfg  ") + break_line())
	print("get_upper_level_path(\\abc.dfg) = " + get_upper_level_path("  \\abc.dfg  ") + break_line())

	reg_test_get_func_fullname()
	reg_test_data_struct()
	reg_test_data_struct2()
	
	print("\n\nNow it is time to run test mannually to validate the precision of SCP:\n")
	print("Test 1: get_constant(\"avogadro_constant\"), result should be 6.02214179E23, not 6.022141790000000000000000000000000001E23 .\n")
	print("Test 2: get_constant(\"planck_constant\"), result should be 6.62606896E-34, not 0 .\n")
	variable varEndTS = now()
	print("\n\nThis run takes " + ((varEndTS - varStartTS)/1000) + " seconds.")
	
	print("\n\nNow it is time to test io. Note that result may be different from computer. Please wait for 5 seconds.")
	sleep(5000)
	test_io()

	print("\n\nNow it is time to test game APIs. Please wait for 5 seconds.")
	sleep(5000)
	reg_test_game_apis()
Endf

function matrixtest()
	variable matrixA, matrixX, matrixB
	matrixA=[[0.3i -7,2+i],[4.4i+pi,-0.99],[-2.7+7i,8-6.4*i]]
	matrixX=[[[4.33-6i,-5.71+8i,4.21,6+8.79i],[-5.76-8.44i,7.81-i,21.59+0.21i,-6-0.79i],[8.29-0.46i,-15.04-4.44i,-i*0.977,8.703-8.21*i]],[[5.88-1.476i,-2.41-2.51i,6.83-0.78i,i+4.57],[7.44i+0.78,-2.18+4.07i,0.181+2.417i,32.442-2.476i],[9.082+4.1i,5.21+2.33i,7.9+i,-8.74i]]]
	matrixB = matrixA * matrixX
	print("\nmatrixA = ")
	print(matrixA)
	print("\nmatrixX = ")
	print(matrixX)
	print("\nmatrixB = matrixA * matrixX = ")
	print(matrixB)
	print("\nmatrixA\\matrixB = ")
	print(matrixA\matrixB)
	print("\nmatrixB/matrixX = ")
	print(matrixB/matrixX)
endf

Help
This function is to run partial regression test to verify the correctness of the scripting language. 
Endh

Function prt()
// internal functions
	print("\nis_prime(611) = ")
	print(is_prime(611))

	print("\nhavg(3, 7, 5, -9 + i) = ")
	print(havg(3, 7, 5, -9 + i))

	print("\ngavg(3, 7, 5, -9 + i) = ")
	print(gavg(3, 7, 5, -9 + i))

	print("\nfact(21) = ")
	print(fact(21))

	print("\ndprod([1,3,5, 7], [2,4,6,8]) = ")
	print(dprod([1,3,5,7], [2,4,6,8]))

	print("\ncosh(3) = ")
	print(cosh(3))

	print("\navg(3, 7,9-4i,-5.2, 4, 8, -6,sqrt(9), 8, 7,-3,-9 * 2.1i, 0, -4.22, -18/2) = ")
	print(avg(3, 7,9-4i,-5.2, 4, 8, -6,sqrt(9), 8, 7,-3,-9 * 2.1i, 0, -4.22, -18/2))

	print("\natanh(-0.3) = ")
	print(atanh(-0.3))

	print("\nasinh(3) = ")
	print(asinh(3))

	print("\nacosh(3) = ")
	print(acosh(3))

	print("\ntip(130, 21) = ")
	print(tip(130, 21))
	
	print("\n")
Endf

Function GFoc(w01,z1,rhoLs,DLs,n2,lambda,M2)
	
	variable numerator1
	variable denominator1
	variable result
	
     
    numerator1 = -rhoLs*((-pow(lambda,2)*pow(DLs,2)+2*pow(lambda,2)*pow(n2,5)*pow(rhoLs,2)-3*pow(lambda,2)*pow(DLs,2)*pow(n2,2) _
    +pow(lambda,2)*pow(DLs,2)*pow(n2,3)+3*pow(lambda,2)*pow(DLs,2)*n2-2*pow(lambda,2)*pow(rhoLs,2)*pow(n2,4)+3*pow(lambda,2)*pow(n2,4)*rhoLs*DLs _
    -6*pow(lambda,2)*pow(n2,3)*rhoLs*DLs+3*pow(lambda,2)*rhoLs*pow(n2,2)*DLs)*pow(z1,2)+(2*pow(lambda,2)*pow(DLs,2)*pow(n2,2)*rhoLs+4*pow(lambda,2)*pow(n2,3)*pow(rhoLs,2)*DLs _
    +2*pow(lambda,2)*pow(DLs,2)*rhoLs-4*pow(lambda,2)*pow(DLs,2)*n2*rhoLs+pow(lambda,2)*pow(rhoLs,3)*pow(n2,4)-4*pow(lambda,2)*pow(rhoLs,2)*pow(n2,2)*DLs)*z1 _
    -pow(lambda,2)*pow(DLs,2)*pow(rhoLs,2)-pow(Pi,2)*pow(w01,4)*pow(DLs,2)+pow(lambda,2)*pow(DLs,2)*pow(rhoLs,2)*n2-2*pow(Pi,2)*pow(w01,4)*pow(rhoLs,2)*pow(n2,4) _
    +2*pow(Pi,2)*pow(w01,4)*pow(rhoLs,2)*pow(n2,5)-3*pow(Pi,2)*pow(w01,4)*pow(DLs,2)*pow(n2,2)+3*pow(Pi,2)*pow(w01,4)*pow(DLs,2)*n2 _
    +pow(Pi,2)*pow(w01,4)*pow(DLs,2)*pow(n2,3)+3*pow(Pi,2)*pow(w01,4)*DLs*pow(n2,2)*rhoLs+3*pow(Pi,2)*pow(w01,4)*rhoLs*pow(n2,4)*DLs _
    -6*pow(Pi,2)*pow(w01,4)*DLs*pow(n2,3)*rhoLs+pow(lambda,2)*pow(rhoLs,3)*pow(n2,2)*DLs) 
    
    
    
    denominator1=((pow(lambda,2)*pow(DLs,2)+4*pow(lambda,2)*pow(n2,6)*pow(rhoLs,2) _
    -8*pow(lambda,2)*pow(n2,5)*pow(rhoLs,2)+6*pow(lambda,2)*pow(DLs,2)*pow(n2,2)-4*pow(lambda,2)*pow(DLs,2)*pow(n2,3)-4*pow(lambda,2)*pow(DLs,2)*n2+pow(lambda,2)*pow(DLs,2)*pow(n2,4) _
    +4*pow(lambda,2)*pow(rhoLs,2)*pow(n2,4)-12*pow(lambda,2)*pow(n2,4)*rhoLs*DLs+4*pow(lambda,2)*pow(n2,5)*rhoLs*DLs+12*pow(lambda,2)*pow(n2,3)*rhoLs*DLs _
    -4*pow(lambda,2)*rhoLs*pow(n2,2)*DLs)*pow(z1,2)+(-2*pow(lambda,2)*pow(DLs,2)*rhoLs-4*pow(lambda,2)*pow(rhoLs,3)*pow(n2,4)+6*pow(lambda,2)*pow(rhoLs,2)*pow(n2,2)*DLs _
    +6*pow(lambda,2)*pow(n2,4)*pow(rhoLs,2)*DLs+2*pow(lambda,2)*pow(DLs,2)*rhoLs*pow(n2,3)-12*pow(lambda,2)*pow(n2,3)*pow(rhoLs,2)*DLs+4*pow(lambda,2)*pow(rhoLs,3)*pow(n2,5) _
    +6*pow(lambda,2)*pow(DLs,2)*n2*rhoLs-6*pow(lambda,2)*pow(DLs,2)*pow(n2,2)*rhoLs)*z1+pow(lambda,2)*pow(rhoLs,4)*pow(n2,4)+pow(lambda,2)*pow(DLs,2)*pow(rhoLs,2) _
    +pow(Pi,2)*pow(w01,4)*pow(DLs,2)+2*pow(lambda,2)*pow(rhoLs,3)*pow(n2,3)*DLs-2*pow(lambda,2)*pow(DLs,2)*pow(rhoLs,2)*n2+pow(lambda,2)*pow(DLs,2)*pow(rhoLs,2)*pow(n2,2) _
    +4*pow(Pi,2)*pow(w01,4)*pow(rhoLs,2)*pow(n2,4)-8*pow(Pi,2)*pow(w01,4)*pow(rhoLs,2)*pow(n2,5)+6*pow(Pi,2)*pow(w01,4)*pow(DLs,2)*pow(n2,2) _
    -4*pow(Pi,2)*pow(w01,4)*pow(DLs,2)*n2+4*pow(Pi,2)*pow(w01,4)*pow(n2,6)*pow(rhoLs,2)+pow(Pi,2)*pow(w01,4)*pow(DLs,2)*pow(n2,4) _
    -4*pow(Pi,2)*pow(w01,4)*pow(DLs,2)*pow(n2,3)-4*pow(Pi,2)*pow(w01,4)*DLs*pow(n2,2)*rhoLs-12*pow(Pi,2)*pow(w01,4)*rhoLs*pow(n2,4)*DLs _
    +12*pow(Pi,2)*pow(w01,4)*DLs*pow(n2,3)*rhoLs+4*pow(Pi,2)*pow(w01,4)*pow(n2,5)*rhoLs*DLs-2*pow(lambda,2)*pow(rhoLs,3)*pow(n2,2)*DLs) 
	
    
    
   result  = numerator1/denominator1  // does not work at all gives invalid expression (due to wrong internal number format?)
   // result = numerator1   //works but gives invalid input expression to the output
    
    return result
Endf

Function big_data_test(regmode)
	variable var1
	
	
	print("\n\n4e-48 = " + 4e-48)

	print("\n\n4.13e-48 = " + 4.13e-48)

	print("\n\n14e-48 = " + 14e-48)

	print("\n\n14.71e-48 = " + 14.71e-48)

	print("\n\n14.713234e6 = " + 14.713234e6)

	print("\n\n14.713234e5 = " + 14.713234e5)

	print("\n\n14.713234e4 = " + 14.713234e4)

	print("\n\n14e28 = " + 14e28)

	print("\n\n1411111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111.773e-48 = " + 1411111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111.773e-48)

	print("\n\n1/([[0,0,1],[0.6e-47,1,0],[1,0,0]]) = " + (1/([[0,0,1],[0.6e-47,1,0],[1,0,0]])))

	print("\n\n1/([[0,0,1],[0.5e-47,1,0],[1,0,0]]) = " + (1/([[0,0,1],[0.5e-47,1,0],[1,0,0]])))

	print("\n\n1/([[0,0,1],[0.4e-47,1,0],[1,0,0]]) = " + (1/([[0,0,1],[0.4e-47,1,0],[1,0,0]])))

	try
		print("\n\n38.26/0.0e19 = " + 38.26/0.0e19)
	catch (var1 = info) == info
		print("\n\n38.26/0.0e19 throws an exception : " + var1)
	endtry

	try
		print("\n\n38/0 = " + 38/0)
	catch (var1 = info) == info
		print("\n\n38/0 throws an exception : " + var1)
	endtry

	try
		print("\n\n0/0 = " + 0/0)
	catch (var1 = info) == info
		print("\n\n0/0 throws an exception : " + var1)
	endtry

	print("\n\n671.19**0e-15 = " + 671.19**0e-15)
	
	print("\n\n671.19**2.71 = " + 671.19**2.71)
	
	print("\n\n1.19**2016.54 = " + 1.19**2016.54)
	
	print("\n\n1.19**-2016.54 = " + 1.19**-2016.54)
	
	print("\n\n1.19**2016 = " + 1.19**2016)
	
	print("\n\n(1/65536)**-2016 = " + (1/65536)**-2016)
	
	print("\n\n65536**2016 = " + 65536**2016)
	
	print("\n\n387.63457**989.3881 = " + 387.63457**989.3881)
	
	print("\n\n(-387.323)**989.3881 = " + (-387.323)**989.3881)
	
	print("\n\n(1/1.19)**-2016.54 = " + (1/1.19)**-2016.54)
	
	print("\n\n(1/61.19)**-1387.2346 = " + (1/61.19)**-1387.2346)
	
	print("\n\n(1/1.00000000000000000019)**-587.3374 = " + (1/1.00000000000000000019)**-587.3374)

	print("\n\n(1000)**1000 = " + (1000)**1000)

	print("\n\n(1/1000)**-1000 = " + (1/1000)**-1000)

	print("\n\n(-387.323)**989 = " + (-387.323)**989)
	
	print("\n\n65536**37.23249 = " + 65536**37.23249)

	print("\n\5346430.253453462404213223153609**3.99871 = " + 5346430.253453462404213223153609**3.99871)
	
	print("\n\5346430.253453462404213223153609**-3.99871 = " + 5346430.253453462404213223153609**-3.99871)
	
	print("\n\(1/5346430.253453462404213223153609)**-3.99871 = " + (1/5346430.253453462404213223153609)**-3.99871)
	
	print("\n\(1/5346430.253453462404213223153609)**3.99871 = " + (1/5346430.253453462404213223153609)**3.99871)
	
	print("\n\n808485773130306048 ** 227.23534637 = " + (808485773130306048 ** 227.23534637))

	print("\n\n(1/808485773130306048) ** -227.23534637 = " + ((1/808485773130306048) ** -227.23534637))
	
	print("\n\n207808485773130306048 ** 247.23534637 = " + (207808485773130306048 ** 247.23534637))

	print("\n\n(1/n207808485773130306048) ** -247.23534637 = " + ((1/207808485773130306048) ** -247.23534637))

	if (regmode == 1)	// too slow for mobile
		print("\n\nexp(645) = " + exp(645))
		
		print("\n\nexp(645.863) = " + exp(645.863))
		
		print("\n\nexp(-387.45) = " + exp(-387.45))
	else
		print("\n\nexp(65) = " + exp(65))
		
		print("\n\nexp(65.863) = " + exp(65.863))
		
		print("\n\nexp(-37.45) = " + exp(-37.45))
	endif
	
	print("\n\nexp(0.02381) = " + exp(0.02381))
	
	print("\n\nexp(-0.02381) = " + exp(-0.02381))
	
	print("\n\nexp(-17) = " + exp(-17))
	
	print("\n\nexp(-17.634) = " + exp(-17.634))
	
	print("\n\nexp(17) = " + exp(17))
	
	print("\n\nexp(17.634) = " + exp(17.634))
	
	print("\n\nlog(207808485773130306048.325325709) = " + log(207808485773130306048.325325709))
	
	print("\n\nlog(1/207808485773130306048.325325709) = " + log(1/207808485773130306048.325325709))
	
	print("\n\nlog(exp(-17.634)) = " + log(exp(-17.634)))
	
	print("\n\nlog(exp(-87.45)) = " + log(exp(-87.45)))
	
	print("\n\nlog(exp(17.634)) = " + log(exp(17.634)))
	
	print("\n\nlog(exp(387.45)) = " + log(exp(387.45)))
	
	print("\n\nlog(exp(-17)) = " + log(exp(-17)))
	
	print("\n\nlog(exp(17)) = " + log(exp(17)))
	
	print("\n\nsin(207808485773130306048247.23534637) = " + sin(207808485773130306048247.23534637))
	
	print("\n\nsin(-207808485773130306048247.23534637) = " + sin(-207808485773130306048247.23534637))
	
	print("\n\nsin(pi/6) = " + sin(pi/6))
	
	print("\n\nsin(-pi/2) = " + sin(-pi/2))
	
	print("\n\nsin(-pi) = " + sin(-pi))
	
	print("\n\nsin(1.65) = " + sin(1.65))
	
	print("\n\ncos(207808485773130306048247.23534637) = " + cos(207808485773130306048247.23534637))
	
	print("\n\ncos(-207808485773130306048247.23534637) = " + cos(-207808485773130306048247.23534637))
	
	print("\n\ncos(pi/3) = " + cos(pi/3))
	
	print("\n\ncos(-pi/2) = " + cos(-pi/2))
	
	print("\n\ncos(-pi) = " + cos(-pi))
	
	print("\n\ncos(1.65) = " + cos(1.65))
	
	print("\n\ntan(207808485773130306048247.23534637) = " + tan(207808485773130306048247.23534637))
	
	print("\n\ntan(-207808485773130306048247.23534637) = " + tan(-207808485773130306048247.23534637))
	
	print("\n\ntan(pi/4) = " + tan(pi/4))
	
	print("\n\ntan(pi/2) = " + tan(pi/2))
	
	print("\n\ntan(-pi/2) = " + tan(-pi/2))
	
	print("\n\ntan(-pi) = " + tan(-pi))
	
	print("\n\ntan(1.65) = " + tan(1.65))
	
	print("\n\nasin(sin(207808485773130306048247.23534637)) = " + asin(sin(207808485773130306048247.23534637)))
	
	print("\n\nasin(sin(-207808485773130306048247.23534637)) = " + asin(sin(-207808485773130306048247.23534637)))
	
	print("\n\nasin(sin(pi/6)) = " + asin(sin(pi/6)))
	
	print("\n\nasin(sin(-pi/2)) = " + asin(sin(-pi/2)))
	
	print("\n\nasin(sin(-pi)) = " + asin(sin(-pi)))
	
	print("\n\nasin(sin(1.65)) = " + asin(sin(1.65)))
	
	print("\n\nacos(cos(207808485773130306048247.23534637)) = " + acos(cos(207808485773130306048247.23534637)))
	
	print("\n\nacos(cos(-207808485773130306048247.23534637)) = " + acos(cos(-207808485773130306048247.23534637)))
	
	print("\n\nacos(cos(pi/3)) = " + acos(cos(pi/3)))
	
	print("\n\nacos(cos(-pi/2)) = " + acos(cos(-pi/2)))
	
	print("\n\nacos(cos(-pi)) = " + acos(cos(-pi)))
	
	print("\n\nacos(cos(1.65)) = " + acos(cos(1.65)))
	
	print("\n\natan(tan(207808485773130306048247.23534637)) = " + atan(tan(207808485773130306048247.23534637)))
	
	print("\n\natan(tan(-207808485773130306048247.23534637)) = " + atan(tan(-207808485773130306048247.23534637)))
	
	print("\n\natan(tan(pi/4)) = " + atan(tan(pi/4)))
	
	print("\n\natan(tan(pi/2)) = " + atan(tan(pi/2)))
	
	print("\n\natan(tan(-pi/2)) = " + atan(tan(-pi/2)))
	
	print("\n\natan(tan(-pi)) = " + atan(tan(-pi)))
	
	print("\n\natan(tan(1.65)) = " + atan(tan(1.65)))
	
	print("\n\npow(3+4i, 3) = " + pow(3+4i, 3))
	
	print("\n\npow(3-4i, 3) = " + pow(3-4i, 3))
	
	print("\n\npow(-3+4i, 3) = " + pow(-3+4i, 3))
	
	print("\n\npow(-3-4i, 3) = " + pow(-3-4i, 3))
	
	print("\n\npow(3+0.00000000000000004i, 3) = " + pow(3+0.00000000000000004i, 3))
	
	print("\n\npow(3-0.00000000000000004i, 3) = " + pow(3-0.00000000000000004i, 3))
	
	print("\n\npow(-3+0.00000000000000004i, 3) = " + pow(-3+0.00000000000000004i, 3))
	
	print("\n\npow(-3-0.00000000000000004i, 3) = " + pow(-3-0.00000000000000004i, 3))

	print("\n\nlog(117+44i)/log(3) = " + (log(117+44i)/log(3)))
	
	print("\n\nlog(117-44i)/log(3) = " + (log(117-44i)/log(3)))
		
	print("\n\nlog(-117+44i)/log(3) = " + (log(-117+44i)/log(3)))
	
	print("\n\nlog(-117-44i)/log(3) = " + (log(-117-44i)/log(3)))
	
	print("\n\nlog(3+0.00000000000000004i) = " + log(3+0.00000000000000004i))
	
	print("\n\nlog(3-0.00000000000000004i) = " + log(3-0.00000000000000004i))
	
	print("\n\nlog(-3+0.00000000000000004i) = " + log(-3+0.00000000000000004i))
	
	print("\n\nlog(-3-0.00000000000000004i) = " + log(-3-0.00000000000000004i))
	
	print("\n\nnan = " + nan)
	
	print("\n\n-nan = " + (-nan))
	
	print("\n\ninf = " + inf)
	
	print("\n\n-inf = " + (-inf))
	
	var1 = 0
	print("\n\nsin(" + var1 + ") = " + sin(var1))
	print("\n\ncos(" + var1 + ") = " + cos(var1))
	print("\n\ntan(" + var1 + ") = " + tan(var1))
	var1 = -var1
	print("\n\nsin(" + var1 + ") = " + sin(var1))
	print("\n\ncos(" + var1 + ") = " + cos(var1))
	print("\n\ntan(" + var1 + ") = " + tan(var1))
	
	var1 = pi / 6
	print("\n\nsin(" + var1 + ") = " + sin(var1))
	print("\n\ncos(" + var1 + ") = " + cos(var1))
	print("\n\ntan(" + var1 + ") = " + tan(var1))
	var1 = -var1
	print("\n\nsin(" + var1 + ") = " + sin(var1))
	print("\n\ncos(" + var1 + ") = " + cos(var1))
	print("\n\ntan(" + var1 + ") = " + tan(var1))
	
	var1 = pi/4
	print("\n\nsin(" + var1 + ") = " + sin(var1))
	print("\n\ncos(" + var1 + ") = " + cos(var1))
	print("\n\ntan(" + var1 + ") = " + tan(var1))
	var1 = -var1
	print("\n\nsin(" + var1 + ") = " + sin(var1))
	print("\n\ncos(" + var1 + ") = " + cos(var1))
	print("\n\ntan(" + var1 + ") = " + tan(var1))
	
	var1 = pi/3
	print("\n\nsin(" + var1 + ") = " + sin(var1))
	print("\n\ncos(" + var1 + ") = " + cos(var1))
	print("\n\ntan(" + var1 + ") = " + tan(var1))
	var1 = -var1
	print("\n\nsin(" + var1 + ") = " + sin(var1))
	print("\n\ncos(" + var1 + ") = " + cos(var1))
	print("\n\ntan(" + var1 + ") = " + tan(var1))
	
	var1 = pi/2
	print("\n\nsin(" + var1 + ") = " + sin(var1))
	print("\n\ncos(" + var1 + ") = " + cos(var1))
	print("\n\ntan(" + var1 + ") = " + tan(var1))
	var1 = -var1
	print("\n\nsin(" + var1 + ") = " + sin(var1))
	print("\n\ncos(" + var1 + ") = " + cos(var1))
	print("\n\ntan(" + var1 + ") = " + tan(var1))
	
	var1 = pi/6 + pi/2
	print("\n\nsin(" + var1 + ") = " + sin(var1))
	print("\n\ncos(" + var1 + ") = " + cos(var1))
	print("\n\ntan(" + var1 + ") = " + tan(var1))
	var1 = -var1
	print("\n\nsin(" + var1 + ") = " + sin(var1))
	print("\n\ncos(" + var1 + ") = " + cos(var1))
	print("\n\ntan(" + var1 + ") = " + tan(var1))
	
	var1 = pi/4 + pi/2
	print("\n\nsin(" + var1 + ") = " + sin(var1))
	print("\n\ncos(" + var1 + ") = " + cos(var1))
	print("\n\ntan(" + var1 + ") = " + tan(var1))
	var1 = -var1
	print("\n\nsin(" + var1 + ") = " + sin(var1))
	print("\n\ncos(" + var1 + ") = " + cos(var1))
	print("\n\ntan(" + var1 + ") = " + tan(var1))
	
	var1 = pi/3 + pi/2
	print("\n\nsin(" + var1 + ") = " + sin(var1))
	print("\n\ncos(" + var1 + ") = " + cos(var1))
	print("\n\ntan(" + var1 + ") = " + tan(var1))
	var1 = -var1
	print("\n\nsin(" + var1 + ") = " + sin(var1))
	print("\n\ncos(" + var1 + ") = " + cos(var1))
	print("\n\ntan(" + var1 + ") = " + tan(var1))
	
	var1 = pi/2 + pi/2
	print("\n\nsin(" + var1 + ") = " + sin(var1))
	print("\n\ncos(" + var1 + ") = " + cos(var1))
	print("\n\ntan(" + var1 + ") = " + tan(var1))
	var1 = -var1
	print("\n\nsin(" + var1 + ") = " + sin(var1))
	print("\n\ncos(" + var1 + ") = " + cos(var1))
	print("\n\ntan(" + var1 + ") = " + tan(var1))
	
	var1 = pi/6 + pi
	print("\n\nsin(" + var1 + ") = " + sin(var1))
	print("\n\ncos(" + var1 + ") = " + cos(var1))
	print("\n\ntan(" + var1 + ") = " + tan(var1))
	var1 = -var1
	print("\n\nsin(" + var1 + ") = " + sin(var1))
	print("\n\ncos(" + var1 + ") = " + cos(var1))
	print("\n\ntan(" + var1 + ") = " + tan(var1))
	
	var1 = pi/4 + pi
	print("\n\nsin(" + var1 + ") = " + sin(var1))
	print("\n\ncos(" + var1 + ") = " + cos(var1))
	print("\n\ntan(" + var1 + ") = " + tan(var1))
	var1 = -var1
	print("\n\nsin(" + var1 + ") = " + sin(var1))
	print("\n\ncos(" + var1 + ") = " + cos(var1))
	print("\n\ntan(" + var1 + ") = " + tan(var1))
	
	var1 = pi/3 + pi
	print("\n\nsin(" + var1 + ") = " + sin(var1))
	print("\n\ncos(" + var1 + ") = " + cos(var1))
	print("\n\ntan(" + var1 + ") = " + tan(var1))
	var1 = -var1
	print("\n\nsin(" + var1 + ") = " + sin(var1))
	print("\n\ncos(" + var1 + ") = " + cos(var1))
	print("\n\ntan(" + var1 + ") = " + tan(var1))
	
	var1 = pi/2 + pi
	print("\n\nsin(" + var1 + ") = " + sin(var1))
	print("\n\ncos(" + var1 + ") = " + cos(var1))
	print("\n\ntan(" + var1 + ") = " + tan(var1))
	var1 = -var1
	print("\n\nsin(" + var1 + ") = " + sin(var1))
	print("\n\ncos(" + var1 + ") = " + cos(var1))
	print("\n\ntan(" + var1 + ") = " + tan(var1))
	
	var1 = pi/6 + 3*pi/2
	print("\n\nsin(" + var1 + ") = " + sin(var1))
	print("\n\ncos(" + var1 + ") = " + cos(var1))
	print("\n\ntan(" + var1 + ") = " + tan(var1))
	var1 = -var1
	print("\n\nsin(" + var1 + ") = " + sin(var1))
	print("\n\ncos(" + var1 + ") = " + cos(var1))
	print("\n\ntan(" + var1 + ") = " + tan(var1))
	
	var1 = pi/4 + 3*pi/2
	print("\n\nsin(" + var1 + ") = " + sin(var1))
	print("\n\ncos(" + var1 + ") = " + cos(var1))
	print("\n\ntan(" + var1 + ") = " + tan(var1))
	var1 = -var1
	print("\n\nsin(" + var1 + ") = " + sin(var1))
	print("\n\ncos(" + var1 + ") = " + cos(var1))
	print("\n\ntan(" + var1 + ") = " + tan(var1))
	
	var1 = pi/3 + 3*pi/2
	print("\n\nsin(" + var1 + ") = " + sin(var1))
	print("\n\ncos(" + var1 + ") = " + cos(var1))
	print("\n\ntan(" + var1 + ") = " + tan(var1))
	var1 = -var1
	print("\n\nsin(" + var1 + ") = " + sin(var1))
	print("\n\ncos(" + var1 + ") = " + cos(var1))
	print("\n\ntan(" + var1 + ") = " + tan(var1))
	
	var1 = pi/2 + 3*pi/2
	print("\n\nsin(" + var1 + ") = " + sin(var1))
	print("\n\ncos(" + var1 + ") = " + cos(var1))
	print("\n\ntan(" + var1 + ") = " + tan(var1))
	var1 = -var1
	print("\n\nsin(" + var1 + ") = " + sin(var1))
	print("\n\ncos(" + var1 + ") = " + cos(var1))
	print("\n\ntan(" + var1 + ") = " + tan(var1))
	
	
	var1 = pi/3 + pi * 102325236513495658678
	print("\n\nsin(" + var1 + ") = " + sin(var1))
	print("\n\ncos(" + var1 + ") = " + cos(var1))
	print("\n\ntan(" + var1 + ") = " + tan(var1))
	var1 = -var1
	print("\n\nsin(" + var1 + ") = " + sin(var1))
	print("\n\ncos(" + var1 + ") = " + cos(var1))
	print("\n\ntan(" + var1 + ") = " + tan(var1))
	
	
	var1 = pi/6 - pi * 342523625205206251562
	print("\n\nsin(" + var1 + ") = " + sin(var1))
	print("\n\ncos(" + var1 + ") = " + cos(var1))
	print("\n\ntan(" + var1 + ") = " + tan(var1))
	var1 = -var1
	print("\n\nsin(" + var1 + ") = " + sin(var1))
	print("\n\ncos(" + var1 + ") = " + cos(var1))
	print("\n\ntan(" + var1 + ") = " + tan(var1))
	
	print("\n\n1/3+1/6-1/2 = " + (1/3+1/6-1/2))

Endf

Function Test_Nan_Inf()
	Variable var1
	print("\n\n Nan + 1 = " + (Nan + 1))
	print("\n\n Nan + 0 = " + (Nan + 0))
	print("\n\n Nan + nan = " + (Nan + nan))
	print("\n\n Nan + inf = " + (Nan + inf))
	print("\n\n Nan + (-inf) = " + (Nan + (-inf)))
	
	print("\n\n 1 + Nan = " + (1 + Nan))
	print("\n\n 0 + Nan = " + (0 + Nan))
	print("\n\n nan + Nan = " + (nan + Nan))
	print("\n\n inf + Nan = " + (inf + Nan))
	print("\n\n (-inf) + Nan = " + ((-inf) + Nan))
	
	print("\n\n Nan - 1 = " + (Nan - 1))
	print("\n\n Nan - 0 = " + (Nan - 0))
	print("\n\n Nan - nan = " + (Nan - nan))
	print("\n\n Nan - inf = " + (Nan - inf))
	print("\n\n Nan - (-inf) = " + (Nan - (-inf)))
	
	print("\n\n 1 - Nan = " + (1 - Nan))
	print("\n\n 0 - Nan = " + (0 - Nan))
	print("\n\n nan - Nan = " + (nan - Nan))
	print("\n\n inf - Nan = " + (inf - Nan))
	print("\n\n (-inf) - Nan = " + ((-inf) - Nan))
	
	print("\n\n Nan * 1 = " + (Nan * 1))
	print("\n\n Nan * 0 = " + (Nan * 0))
	print("\n\n Nan * nan = " + (Nan * nan))
	print("\n\n Nan * inf = " + (Nan * inf))
	print("\n\n Nan * (-inf) = " + (Nan * (-inf)))
	
	print("\n\n 1 * Nan = " + (1 * Nan))
	print("\n\n 0 * Nan = " + (0 * Nan))
	print("\n\n nan * Nan = " + (nan * Nan))
	print("\n\n inf * Nan = " + (inf * Nan))
	print("\n\n (-inf) * Nan = " + ((-inf) * Nan))	
	
	print("\n\n Nan / 1 = " + (Nan / 1))
	try
		print("\n\n Nan / 0 = " + (Nan / 0))
	catch (var1 = info) == info
		print("\n\n Nan / 0 throws an exception : " + var1)
	endtry
	print("\n\n Nan / nan = " + (Nan / nan))
	print("\n\n Nan / inf = " + (Nan / inf))
	print("\n\n Nan / (-inf) = " + (Nan / (-inf)))
	
	print("\n\n 1 / Nan = " + (1 / Nan))
	print("\n\n 0 / Nan = " + (0 / Nan))
	print("\n\n nan / Nan = " + (nan / Nan))
	print("\n\n inf / Nan = " + (inf / Nan))
	print("\n\n (-inf) / Nan = " + ((-inf) / Nan))
	
	print("\n\n Nan ** 2 = " + (Nan ** 2))
	print("\n\n Nan ** 1 = " + (Nan ** 1))
	print("\n\n Nan ** 0.5 = " + (Nan ** 0.5))
	print("\n\n Nan ** 0 = " + (Nan ** 0))
	print("\n\n Nan ** -0.5 = " + (Nan ** -0.5))
	print("\n\n Nan ** -1 = " + (Nan ** -1))
	print("\n\n Nan ** -2 = " + (Nan ** -2))
	print("\n\n Nan ** nan = " + (Nan ** nan))
	print("\n\n Nan ** inf = " + (Nan ** inf))
	print("\n\n Nan ** (-inf) = " + (Nan ** (-inf)))
	
	print("\n\n 2 ** Nan = " + (2 ** Nan))
	print("\n\n 1 ** Nan = " + (1 ** Nan))
	print("\n\n 0.5 ** Nan = " + (0.5 ** Nan))
	print("\n\n 0 ** Nan = " + (0 ** Nan))
	print("\n\n (-0.5) ** Nan = " + ((-0.5) ** Nan))
	print("\n\n (-1) ** Nan = " + ((-1) ** Nan))
	print("\n\n (-2) ** Nan = " + ((-2) ** Nan))
	print("\n\n nan ** Nan = " + (nan ** Nan))
	print("\n\n inf ** Nan = " + (inf ** Nan))
	print("\n\n (-inf) ** Nan = " + ((-inf) ** Nan))	

	print("\n\n Inf + 1 = " + (Inf + 1))
	print("\n\n Inf + 0 = " + (Inf + 0))
	print("\n\n Inf + nan = " + (Inf + nan))
	print("\n\n Inf + inf = " + (Inf + inf))
	print("\n\n Inf + (-inf) = " + (Inf + (-inf)))
	
	print("\n\n 1 + Inf = " + (1 + Inf))
	print("\n\n 0 + Inf = " + (0 + Inf))
	print("\n\n nan + Inf = " + (nan + Inf))
	print("\n\n inf + Inf = " + (inf + Inf))
	print("\n\n (-inf) + Inf = " + ((-inf) + Inf))
	
	print("\n\n Inf - 1 = " + (Inf - 1))
	print("\n\n Inf - 0 = " + (Inf - 0))
	print("\n\n Inf - nan = " + (Inf - nan))
	print("\n\n Inf - inf = " + (Inf - inf))
	print("\n\n Inf - (-inf) = " + (Inf - (-inf)))
	
	print("\n\n 1 - Inf = " + (1 - Inf))
	print("\n\n 0 - Inf = " + (0 - Inf))
	print("\n\n nan - Inf = " + (nan - Inf))
	print("\n\n inf - Inf = " + (inf - Inf))
	print("\n\n (-inf) - Inf = " + ((-inf) - Inf))
	
	print("\n\n Inf * 1 = " + (Inf * 1))
	print("\n\n Inf * 0 = " + (Inf * 0))
	print("\n\n Inf * nan = " + (Inf * nan))
	print("\n\n Inf * inf = " + (Inf * inf))
	print("\n\n Inf * (-inf) = " + (Inf * (-inf)))
	
	print("\n\n 1 * Inf = " + (1 * Inf))
	print("\n\n 0 * Inf = " + (0 * Inf))
	print("\n\n nan * Inf = " + (nan * Inf))
	print("\n\n inf * Inf = " + (inf * Inf))
	print("\n\n (-inf) * Inf = " + ((-inf) * Inf))	
	
	print("\n\n Inf / 1 = " + (Inf / 1))
	try
		print("\n\n Inf / 0 = " + (Inf / 0))
	catch (var1 = info) == info
		print("\n\n Inf / 0 throws an exception : " + var1)
	endtry
	print("\n\n Inf / nan = " + (Inf / nan))
	print("\n\n Inf / inf = " + (Inf / inf))
	print("\n\n Inf / (-inf) = " + (Inf / (-inf)))
	
	print("\n\n 1 / Inf = " + (1 / Inf))
	print("\n\n 0 / Inf = " + (0 / Inf))
	print("\n\n nan / Inf = " + (nan / Inf))
	print("\n\n inf / Inf = " + (inf / Inf))
	print("\n\n (-inf) / Inf = " + ((-inf) / Inf))
	
	print("\n\n Inf ** 2 = " + (Inf ** 2))
	print("\n\n Inf ** 1 = " + (Inf ** 1))
	print("\n\n Inf ** 0.5 = " + (Inf ** 0.5))
	print("\n\n Inf ** 0 = " + (Inf ** 0))
	print("\n\n Inf ** -0.5 = " + (Inf ** -0.5))
	print("\n\n Inf ** -1 = " + (Inf ** -1))
	print("\n\n Inf ** -2 = " + (Inf ** -2))
	print("\n\n Inf ** nan = " + (Inf ** nan))
	print("\n\n Inf ** inf = " + (Inf ** inf))
	print("\n\n Inf ** (-inf) = " + (Inf ** (-inf)))
	
	print("\n\n 2 ** Inf = " + (2 ** Inf))
	print("\n\n 1 ** Inf = " + (1 ** Inf))
	print("\n\n 0.5 ** Inf = " + (0.5 ** Inf))
	print("\n\n 0 ** Inf = " + (0 ** Inf))
	print("\n\n (-0.5) ** Inf = " + ((-0.5) ** Inf))
	print("\n\n (-1) ** Inf = " + ((-1) ** Inf))
	print("\n\n (-2) ** Inf = " + ((-2) ** Inf))
	print("\n\n nan ** Inf = " + (nan ** Inf))
	print("\n\n inf ** Inf = " + (inf ** Inf))
	print("\n\n (-inf) ** Inf = " + ((-inf) ** Inf))	

	print("\n\n (-Inf) + 1 = " + ((-Inf) + 1))
	print("\n\n (-Inf) + 0 = " + ((-Inf) + 0))
	print("\n\n (-Inf) + nan = " + ((-Inf) + nan))
	print("\n\n (-Inf) + inf = " + ((-Inf) + inf))
	print("\n\n (-Inf) + (-inf) = " + ((-Inf) + (-inf)))
	
	print("\n\n 1 + (-Inf) = " + (1 + (-Inf)))
	print("\n\n 0 + (-Inf) = " + (0 + (-Inf)))
	print("\n\n nan + (-Inf) = " + (nan + (-Inf)))
	print("\n\n inf + (-Inf) = " + (inf + (-Inf)))
	print("\n\n (-inf) + (-Inf) = " + ((-inf) + (-Inf)))
	
	print("\n\n (-Inf) - 1 = " + ((-Inf) - 1))
	print("\n\n (-Inf) - 0 = " + ((-Inf) - 0))
	print("\n\n (-Inf) - nan = " + ((-Inf) - nan))
	print("\n\n (-Inf) - inf = " + ((-Inf) - inf))
	print("\n\n (-Inf) - (-inf) = " + ((-Inf) - (-inf)))
	
	print("\n\n 1 - (-Inf) = " + (1 - (-Inf)))
	print("\n\n 0 - (-Inf) = " + (0 - (-Inf)))
	print("\n\n nan - (-Inf) = " + (nan - (-Inf)))
	print("\n\n inf - (-Inf) = " + (inf - (-Inf)))
	print("\n\n (-inf) - (-Inf) = " + ((-inf) - (-Inf)))
	
	print("\n\n (-Inf) * 1 = " + ((-Inf) * 1))
	print("\n\n (-Inf) * 0 = " + ((-Inf) * 0))
	print("\n\n (-Inf) * nan = " + ((-Inf) * nan))
	print("\n\n (-Inf) * inf = " + ((-Inf) * inf))
	print("\n\n (-Inf) * (-inf) = " + ((-Inf) * (-inf)))
	
	print("\n\n 1 * (-Inf) = " + (1 * (-Inf)))
	print("\n\n 0 * (-Inf) = " + (0 * (-Inf)))
	print("\n\n nan * (-Inf) = " + (nan * (-Inf)))
	print("\n\n inf * (-Inf) = " + (inf * (-Inf)))
	print("\n\n (-inf) * (-Inf) = " + ((-inf) * (-Inf)))	
	
	print("\n\n (-Inf) / 1 = " + ((-Inf) / 1))
	try
		print("\n\n (-Inf) / 0 = " + ((-Inf) / 0))
	catch (var1 = info) == info
		print("\n\n (-Inf) / 0 throws an exception : " + var1)
	endtry
	print("\n\n (-Inf) / nan = " + ((-Inf) / nan))
	print("\n\n (-Inf) / inf = " + ((-Inf) / inf))
	print("\n\n (-Inf) / (-inf) = " + ((-Inf) / (-inf)))
	
	print("\n\n 1 / (-Inf) = " + (1 / (-Inf)))
	print("\n\n 0 / (-Inf) = " + (0 / (-Inf)))
	print("\n\n nan / (-Inf) = " + (nan / (-Inf)))
	print("\n\n inf / (-Inf) = " + (inf / (-Inf)))
	print("\n\n (-inf) / (-Inf) = " + ((-inf) / (-Inf)))
	
	print("\n\n (-Inf) ** 2 = " + ((-Inf) ** 2))
	print("\n\n (-Inf) ** 1 = " + ((-Inf) ** 1))
	print("\n\n (-Inf) ** 0.5 = " + ((-Inf) ** 0.5))
	print("\n\n (-Inf) ** 0 = " + ((-Inf) ** 0))
	print("\n\n (-Inf) ** -0.5 = " + ((-Inf) ** -0.5))
	print("\n\n (-Inf) ** -1 = " + ((-Inf) ** -1))
	print("\n\n (-Inf) ** -2 = " + ((-Inf) ** -2))
	print("\n\n (-Inf) ** nan = " + ((-Inf) ** nan))
	print("\n\n (-Inf) ** inf = " + ((-Inf) ** inf))
	print("\n\n (-Inf) ** (-inf) = " + ((-Inf) ** (-inf)))
	
	print("\n\n 2 ** (-Inf) = " + (2 ** (-Inf)))
	print("\n\n 1 ** (-Inf) = " + (1 ** (-Inf)))
	print("\n\n 0.5 ** (-Inf) = " + (0.5 ** (-Inf)))
	print("\n\n 0 ** (-Inf) = " + (0 ** (-Inf)))
	print("\n\n (-0.5) ** (-Inf) = " + ((-0.5) ** (-Inf)))
	print("\n\n (-1) ** (-Inf) = " + ((-1) ** (-Inf)))
	print("\n\n (-2) ** (-Inf) = " + ((-2) ** (-Inf)))
	print("\n\n nan ** (-Inf) = " + (nan ** (-Inf)))
	print("\n\n inf ** (-Inf) = " + (inf ** (-Inf)))
	print("\n\n (-inf) ** (-Inf) = " + ((-inf) ** (-Inf)))	

	print("\n\n abs(nan) = " + abs(nan))
	print("\n\n abs(inf) = " + abs(inf))
	print("\n\n abs(-inf) = " + abs(-inf))
	
	print("\n\n-nan = " + (-nan))
	print("\n\n-inf = " + (-inf))
	print("\n\n(--inf) = " + (--inf))
	
	print("\n\n ceil(nan) = " + ceil(nan))
	print("\n\n ceil(inf) = " + ceil(inf))
	print("\n\n ceil(-inf) = " + ceil(-inf))
	
	print("\n\n floor(nan) = " + floor(nan))
	print("\n\n floor(inf) = " + floor(inf))
	print("\n\n floor(-inf) = " + floor(-inf))
	
	print("\n\n exp(nan) = " + exp(nan))
	print("\n\n exp(inf) = " + exp(inf))
	print("\n\n exp(-inf) = " + exp(-inf))
	
	print("\n\n log(nan) = " + log(nan))
	print("\n\n log(inf) = " + log(inf))
	print("\n\n log(-inf) = " + log(-inf))
	
	print("\n\n sin(nan) = " + sin(nan))
	print("\n\n sin(inf) = " + sin(inf))
	print("\n\n sin(-inf) = " + sin(-inf))
	
	print("\n\n cos(nan) = " + cos(nan))
	print("\n\n cos(inf) = " + cos(inf))
	print("\n\n cos(-inf) = " + cos(-inf))
	
	print("\n\n tan(nan) = " + tan(nan))
	print("\n\n tan(inf) = " + tan(inf))
	print("\n\n tan(-inf) = " + tan(-inf))
	
	print("\n\n asin(nan) = " + asin(nan))
	print("\n\n asin(inf) = " + asin(inf))
	print("\n\n asin(-inf) = " + asin(-inf))
	
	print("\n\n acos(nan) = " + acos(nan))
	print("\n\n acos(inf) = " + acos(inf))
	print("\n\n acos(-inf) = " + acos(-inf))
	
	print("\n\n atan(nan) = " + atan(nan))
	print("\n\n atan(inf) = " + atan(inf))
	print("\n\n atan(-inf) = " + atan(-inf))
	
	print("\n\n atan(i) = " + atan(i))
	print("\n\n atan(-i) = " + atan(-i))
	print("\n\n log(0) = " + log(0))
	
	print("\n\n sum_over(\"1/(x - 10)\", \"x = 1\", \"10\") = " + sum_over("1/(x - 10)", "x = 1", "10"))
	print("\n\n product_over(\"1/(x-10)\", \"x = 9\", \"10\") = " + product_over("1/(x-10)", "x = 9", "10"))
	print("\n\n integrate(\"1/x\",\"x\",-1,1,2) = " + integrate("1/x","x",-1,1,2))
	print("\n\n evaluate(\"1/x\",\"x\",0) = " + evaluate("1/x","x",0))
Endf

Function test_lim()

	print("\n\n lim(\"1/x\",\"x\",0,-1) = " + lim("1/x","x",0,-1))
	print("\n\n lim(\"1/x**0.5\",\"x\",0,-1) = " + lim("1/x**0.5","x",0,-1))
	print("\n\n lim(\"1/x**0.5\",\"x\",3,-1) = " + lim("1/x**0.5","x",3,-1))
	print("\n\n lim(\"1/x**0.2\",\"x\",3,-1) = " + lim("1/x**0.2","x",3,-1))
	print("\n\n lim(\"1/x**0.2\",\"x\",0,1) = " + lim("1/x**0.2","x",0,1))
	print("\n\n lim(\"x/x**0.2\",\"x\",0,1) = " + lim("x/x**0.2","x",0,1))
	print("\n\n lim(\"x/x**0.2\",\"x\",inf,1) = " + lim("x/x**0.2","x",inf,1))
	print("\n\n lim(\"x/x**0.2\",\"x\",nan,1) = " + lim("x/x**0.2","x",nan,1))
	print("\n\n lim(\"1/x**0.2\",\"x\",-inf,-1) = " + lim("1/x**0.2","x",-inf,-1))
	print("\n\n lim(\"log(x)\",\"x\",0,1) = " + lim("log(x)","x",0,1))
	print("\n\n lim(\"log(x)\",\"x\",0,-1) = " + lim("log(x)","x",0,-1))
	print("\n\n lim(\"1/x**0.5\",\"x\",0,1) = " + lim("1/x**0.5","x",0,1))
	print("\n\n lim(\"1/x**0.2\",\"x\",0,1) = " + lim("1/x**0.2","x",0,1))
	print("\n\n lim(\"1/x + 3i\",\"x\",0,1) = " + lim("1/x + 3i","x",0,1))
	print("\n\n lim(\"1/x\",\"x\",0,1) = " + lim("1/x","x",0,1))
	print("\n\n lim(\"1/x\",\"x\",0.3) = " + lim("1/x","x",0.3))
	print("\n\n lim(\"1/x\",\"x\",0.3+0.4i) = " + lim("1/x","x",0.3 + 0.4i))
	print("\n\n lim(\"1/x\",\"x\",0.3+0.4i,3i) = " + lim("1/x","x",0.3+0.4i,3i))
	print("\n\n lim(\"1/x + 3i\",\"x\",-inf) = " + lim("1/x + 3i","x",-inf))

endf

Function look_up_abnormal_values()

	print("\n\n includes_null([[1, 3],[2], [5, [6, null], 8, 9,[7]]]) = " + includes_null([[1, 3],[2], [5, [6, null], 8, 9,[7]]]))
	print("\n\n includes_inf([[1, 3],[2], [5, [6, 3 - inf * i], 8, 9,[7]]]) = " + includes_inf([[1, 3],[2], [5, [6, 3 - inf * i], 8, 9,[7]]]))
	print("\n\n includes_nan_or_inf([[1, 3],[2], [5, [6, nan + 3i], 8, 9,[7]]]) = " + includes_nan_or_inf([[1, 3],[2], [5, [6, nan + 3i], 8, 9,[7]]]))
	print("\n\n includes_inf([[1, 3],[2], [5, [6, nan + 3i], 8, 9,[7]]]) = " + includes_inf([[1, 3],[2], [5, [6, nan + 3i], 8, 9,[7]]]))
	print("\n\n includes_nan_or_inf_or_null(4 + 7 * i) = " + includes_nan_or_inf_or_null(4 + 7 * i))
	print("\n\n includes_nan_or_inf_or_null(4 + 7 * i + nan) = " + includes_nan_or_inf_or_null(4 + 7 * i + nan))
	print("\n\n includes_nan_or_inf_or_null(4 + inf * i) = " + includes_nan_or_inf_or_null(4 + inf * i))
	print("\n\n includes_nan_or_inf_or_null(null) = " + includes_nan_or_inf_or_null(null))
	print("\n\n includes_nan_or_inf_or_null(-inf) = " + includes_nan_or_inf_or_null(-inf))
	print("\n\n includes_nan_or_inf_or_null(\"hello\") = " + includes_nan_or_inf_or_null("hello"))
	print("\n\n includes_nan_or_inf_or_null([[1,2],[3,4],[\"5\", 6]]) = " + includes_nan_or_inf_or_null([[1,2],[3,4],["5", 6]]))
	print("\n\n includes_inf([[1, 3],[2], [5, [6, null], 8, 9,[7]]]) = " + includes_inf([[1, 3],[2], [5, [6, null], 8, 9,[7]]]))
	print("\n\n includes_nan([[1, 3],[2], [5, [6, null], 8, 9,[7]]]) = " + includes_nan([[1, 3],[2], [5, [6, null], 8, 9,[7]]]))
	print("\n\n includes_nan_or_inf([[1, 3],[2], [5, [6, null], 8, 9,[7]]]) = " + includes_nan_or_inf([[1, 3],[2], [5, [6, null], 8, 9,[7]]]))
	print("\n\n includes_null([[1, 3],[2], [5, [6, 3 - inf * i], 8, 9,[7]]]) = " + includes_null([[1, 3],[2], [5, [6, 3 - inf * i], 8, 9,[7]]]))

	print("\n\n is_nan_or_inf_or_null([[1, 3],[2], [5, [6, 3 - inf * i], 8, 9,[7]]]) = " + is_nan_or_inf_or_null([[1, 3],[2], [5, [6, 3 - inf * i], 8, 9,[7]]]))
	print("\n\n is_nan_or_inf_or_null(-inf + inf * i) = " + is_nan_or_inf_or_null(-inf + inf * i))
	print("\n\n is_nan_or_inf_or_null(-inf) = " + is_nan_or_inf_or_null(-inf))
	print("\n\n is_nan_or_inf_or_null(inf * i) = " + is_nan_or_inf_or_null(inf * i))
	print("\n\n is_nan_or_inf_or_null(3 + 5i) = " + is_nan_or_inf_or_null(3 + 5i))
	print("\n\n is_nan_or_inf_or_null(-nan) = " + is_nan_or_inf_or_null(-nan))
	print("\n\n is_nan_or_inf_or_null(null) = " + is_nan_or_inf_or_null(null))
	print("\n\n is_nan_or_inf_or_null(\"hello\") = " + is_nan_or_inf_or_null("hello"))

	print("\n\n is_nan_or_inf([[1, 3],[2], [5, [6, 3 - inf * i], 8, 9,[7]]]) = " + is_nan_or_inf([[1, 3],[2], [5, [6, 3 - inf * i], 8, 9,[7]]]))
	print("\n\n is_nan_or_inf(-inf + inf * i) = " + is_nan_or_inf(-inf + inf * i))
	print("\n\n is_nan_or_inf(-inf) = " + is_nan_or_inf(-inf))
	print("\n\n is_nan_or_inf(inf * i) = " + is_nan_or_inf(inf * i))
	print("\n\n is_nan_or_inf(3 + 5i) = " + is_nan_or_inf(3 + 5i))
	print("\n\n is_nan_or_inf(-nan) = " + is_nan_or_inf(-nan))
	print("\n\n is_nan_or_inf(null) = " + is_nan_or_inf(null))
	print("\n\n is_nan_or_inf(\"hello\") = " + is_nan_or_inf("hello"))

	print("\n\n is_inf([[1, 3],[2], [5, [6, 3 - inf * i], 8, 9,[7]]]) = " + is_inf([[1, 3],[2], [5, [6, 3 - inf * i], 8, 9,[7]]]))
	print("\n\n is_inf(-inf + inf * i) = " + is_inf(-inf + inf * i))
	print("\n\n is_inf(-inf) = " + is_inf(-inf))
	print("\n\n is_inf(inf * i) = " + is_inf(inf * i))
	print("\n\n is_inf(3 + 5i) = " + is_inf(3 + 5i))
	print("\n\n is_inf(-nan) = " + is_inf(-nan))
	print("\n\n is_inf(null) = " + is_inf(null))
	print("\n\n is_inf(\"hello\") = " + is_inf("hello"))

endf

function validate_solve()
	variable x,y,z,k,var1

	print("\n\nx == 0/0\ny == [1,2]/[1,2]\nz == inf/inf\nk == nan/nan\n======>")
	try
	solve x,y,z,k
	x == 0/0
	y == [1,2]/[1,2]
	z == inf/inf
	k == nan/nan
	slvreto
	print("\nx == " + x + "; y == " + y + "; z == " + z + "; k == " + k)
	catch (var1 = info) == info
	print(var1)
	endtry

	print("\n\nx == 0/0\ny == [[1,2],[3,inf]]/[[1,2],[3,inf]]\nz == inf/inf\nk == nan/nan\n======>")
	try
	solve x,y,z,k
	x == 0/0
	y == [[1,2],[3,inf]]/[[1,2],[3,inf]]
	z == inf/inf
	k == nan/nan
	slvreto
	print("\nx == " + x + "; y == " + y + "; z == " + z + "; k == " + k)
	catch (var1 = info) == info
	print(var1)
	endtry

	print("\n\nx == 0/0\ny == [[1,2],[3,4]]/[[1,2],[3,4]]\nz == inf/inf\nk == (1.3+7i)/(1.3+7i)\n======>")
	try
	solve x,y,z,k
	x == 0/0
	y == [[1,2],[3,4]]/[[1,2],[3,4]]
	z == inf/inf
	k == (1.3+7i)/(1.3+7i)
	slvreto
	print("\nx == " + x + "; y == " + y + "; z == " + z + "; k == " + k)
	catch (var1 = info) == info
	print(var1)
	endtry

	solve x,y,z
	3*log(y) == 4
	4**tan(z) == 7.33
	slvreto
	print("\n\n3*log(y) == 4\n4**tan(z) == 7.33\n======>")
	print("\nx == " + x + "; y == " + y + "; z == " + z)

	solve y,z
	2*log(4**y)+3 ==7
	-tand(z*3) - 6 == -5.5
	slvreto
	print("\n\n2*log(4**y)+3 ==7\n-tand(z*3) - 6 == -5.5\n======>")
	print("\ny == " + y + "\nz == " + z)

	solve x,y,z
	3 + 7 == 8% + 4**acos(y% *(0.3i+0.877))
	4*y + 2*z == 3.2*x
	5*x-3*z == 8*y-6*z
	slvreto
	print("\n\n3 + 7 == 8% + 4**acos(y% *(0.3i+0.877))\n4*y + 2*z == 3.2*x\n5*x-3*z == 8*y-6*z\n======>")
	print("\nx == " + x + "\ny == " + y + "\nz == " + z)

	solve y,z
	y**2+3*y-2==7
	slvreto
	print("\n\ny**2+3*y-2==7\n======>")
	print("\ny == " + y)

	solve x,y,z
	3*x+4*y+2*z==8
	5*x-6*y-2*z==2
	x+7*y-z==2.5
	slvreto
	print("\n\n3*x+4*y+2*z==8\n5*x-6*y-2*z==2\nx+7*y-z==2.5\n======>")
	print("\nx == " + x + "\ny == " + y + "\nz == " + z)

	solve x,y,z
	3*x+4*y+2*z==8
	-8*x-16*y-2*z+y*10-x*y+x*13+x*y==2
	x+7*y-z==2.5
	slvreto
	print("\n\n3*x+4*y+2*z==8\n-8*x-16*y-2*z+y*10-x*y+x*13+x*y==2\nx+7*y-z==2.5\n======>")
	print("\nx == " + x + "\ny == " + y + "\nz == " + z)

	solve x,y,z,k
	-(k**3.92i +7.44i)\3.83i-2.831==8.98
	3*x+4*y+2*z==8
	5*x-6*y-2*z==2

	// test comment
	x+7*y-z==2.5
	slvreto
	print("\n\n-(k**3.92i +7.44i)\\3.83i-2.831==8.98\n3*x+4*y+2*z==8\n5*x-6*y-2*z==2\n\n// test comment\nx+7*y-z==2.5\n======>")
	print("\nx == " + x + "\ny == " + y + "\nz == " + z + "\nk == " + k)

	variable w
	try
	solve x,y,z,k
	-(k**3.92i +7.44i)\3.83i-2.831==8.98 + y'*8.381
	3*x+4*y+2*z==8
	5*x-6*y-2*z==2
	x+7*y-z==2.5 - k%
	slvreto w
	print("\n\n-(k**3.92i +7.44i)\\3.83i-2.831==8.98 + y'*8.381\n3*x+4*y+2*z==8\n5*x-6*y-2*z==2\nx+7*y-z==2.5 - k%\n======>")
	print("\nx == " + x + "\ny == " + y + "\nz == " + z + "\nk == " + k + "\nw == " + w)
	catch (var1 = info) == info
	print("\n\n-(k**3.92i +7.44i)\\3.83i-2.831==8.98 + y'*8.381\n3*x+4*y+2*z==8\n5*x-6*y-2*z==2\nx+7*y-z==2.5 - k%\n======>")
	print("\nThrow exceptions: " + var1)
	endtry

	try
	solve x,y,z
	4.71\y'**3.72%+3== z+8
	slvreto w
	print("\n\n4.71\\y'**3.72%+3== z+8\n======>")
	print("\nx == " + x + "\ny == " + y + "\nz == " + z + "\nw == " + w)
	catch (var1 = info) == info
	print("\n\n4.71\\y'**3.72%+3== z+8\n======>")
	print("\nThrow exceptions: " + var1)
	endtry

	solve x
	x*4*x**2/2.7+x/5.22i+x**4/0.83/x**2-x**4/4.863==5*x**2-3*x**2*(4-x)/2.03+x*3-9.3 + 4*x/3.88
	slvreto
	print("\n\nx*4*x**2/2.7+x/5.22i+x**4/0.83/x**2-x**4/4.863==5*x**2-3*x**2*(4-x)/2.03+x*3-9.3 + 4*x/3.88\n======>")
	print("\nx == " + x)

	solve x
	-2*x-2*x**3-5 == 0
	slvreto
	print("\n\n-2*x-2*x**3-5 == 0\n======>")
	print("\nx == " + x)

	variable y1,y2,y3
	solve y1,y2,y3
	y1*3+4*y2-3*y3==7
	y2/2-3*y3+y1==9
	y3/3-6*y1+y2==2.4
	slvreto
	print("\n\ny1*3+4*y2-3*y3==7\ny2/2-3*y3+y1==9\ny3/3-6*y1+y2==2.4\n======>")
	print("\ny1 == " + y1 + "\ny2 == " + y2 + "\ny3 == " + y3)

	solve x
	5/x**2*x**3-4*x**3*3*x**2/3.8i+1.748i+5==x**4/0.087i+4*x**3/x**2+2.65*(x-5)*(4*x**2+3*x-2.3)+6.86
	slvreto
	print("\n\n5/x**2*x**3-4*x**3*3*x**2/3.8i+1.748i+5==x**4/0.087i+4*x**3/x**2+2.65*(x-5)*(4*x**2+3*x-2.3)+6.86\n======>")
	print("\nx == " + x)

	solve x,y,z
	log(x)**2-5*log(x)+6==0
	slvreto
	print("\n\nlog(x)**2-5*log(x)+6==0\n======>")
	print("\nx == " + x + "\ny == " + y + "\nz == " + z)

	solve z
	4*z**3+5i*z**2==z**3/z
	slvreto z
	print("\n\n4*z**3+5i*z**2==z**3/z\n======>")
	print("\nz == " + z)

	solve z
	4*z**3+5i*z**2==z**3/4
	slvreto z
	print("\n\n4*z**3+5i*z**2==z**3/4\n======>")
	print("\nz == " + z)

	solve z
	4*z**3+5i*z**2==z**3/3.7
	slvreto z
	print("\n\n4*z**3+5i*z**2==z**3/3.7\n======>")
	print("\nz == " + z)

	try
	solve x,y,z
	1/x/(7+y)/(5+3i)*z*9*e == 0
	slvreto z
	print("\n\n1/x/(7+y)/(5+3i)*z*9*e == 0\n======>")
	print("\nx == " + x + "\ny == " + y + "\nz == " + z)
	catch (var1 = info) == info
	print("\n\n1/x/(7+y)/(5+3i)*z*9*e == 0\n======>")
	print("\nThrow exceptions: " + var1)
	endtry

	solve x
	1/x*x**3==1
	slvreto
	print("\n\n1/x*x**3==1\n======>")
	print("\nx == " + x)

	solve x,y
	1/x*x**2+ y*4/y**3 - 4.83 == -3.83 + y**2*4**2/y**4/4
	slvreto
	print("\n\n1/x*x**2+ y*4/y**3 - 4.83 == -3.83 + y**2*4**2/y**4/4\n======>")
	print("\nx == " + x + "\ny == " + y)

	solve x,y
	1/x%*x**2+ y%/y**3 - 4.83 == -3.83 + y**2*4/y**4/400
	slvreto
	print("\n\n1/x%*x**2+ y%/y**3 - 4.83 == -3.83 + y**2*4/y**4/400\n======>")
	print("\nx == " + x + "\ny == " + y)

	try
	solve x
	x/0==6
	slvreto
	print("\n\nx/0==6\n======>")
	print("\nx == " + x)
	catch (var1 = info) == info
	print("\n\nx/0==6\n======>")
	print("\nThrow exceptions: " + var1)
	endtry

	solve x,y
	x**2+y*x*7==3 + y*x + y**2
	log(y) == 1.5
	slvreto z
	print("\n\nx**2+y*x*7==3 + y*x + y**2\nlog(y) == 1.5\n======>")
	print("\nx == " + x + "\ny == " + y + "\nz == " + z)

	solve x,y
	x**2+y*x*7==3 + y*x + y**2
	7 + 4*y**2 == 5*y - 3.5*y**2
	slvreto z
	print("\n\nx**2+y*x*7==3 + y*x + y**2\n7 + 4*y**2 == 5*y - 3.5*y**2\n======>")
	print("\nx == " + x + "\ny == " + y + "\nz == " + z)

	print("\nNumber of results sets is " + get_num_of_results_sets(z))
	print("\nResults set No. 3 is " + get_solved_results_set(z, 2))
	print("\nAll results of y are " + get_variable_results(z, 1))

	z = 3

	solve x,y
	x**2+y*x*7==3 + y*x + y**2
	z + 3
	6 + 2*log(y) == 4
	y = z+3
	slvreto k
	print("\n\nx**2+y*x*7==3 + y*x + y**2\nz + 3\n6 + 2*log(y) == 4\ny = z+3\n======>")
	print("x == " + x + "\ny == " + y + "\nz == " + z + "\nk == " + k)

	solve x,y
	x**2+y*x*7==3 + y*x + y**2
	z + 3 ==7
	6 + 2*log(y) == 4
	y = z+3
	slvreto k
	print("\n\nx**2+y*x*7==3 + y*x + y**2\nz + 3 == 7\n6 + 2*log(y) == 4\ny = z+3\n======>")
	print("x == " + x + "\ny == " + y + "\nz == " + z + "\nk == " + k)

	Variable a, b, c
	a = 3
	b = 4
	c = 5
	x = 6
	y = 7
	z = 8
	solve x, y, z
	a * x**2 + 7 * log(b) *x + 6.5 == 8
	y * b - z + 6 == 3.7 + x/(a + 7)
	y * x + z/(c - 3) == 6 + a + y
	slvreto a
	print("\n\na * x**2 + 7 * log(b) *x + 6.5 == 8\ny * b - z + 6 == 3.7 + x/(a + 7)\ny * x + z/(c - 3) == 6 + a + y\n======>")
	print("\na == " + a + "\nb == " + b + "\nc == " + c)
	print("\nx == " + x + "\ny == " + y + "\nz == " + z)

	a = 3
	b = 4
	c = 5
	solve x, y
	a * x + y / c == 9
	x = 7
	y * b - x * c  == 6
	slvreto
	print("\n\na * x + y / c == 9\nx = 7\ny * b - x * c  == 6\n======>")
	print("\nx == " + x + "\ny == " + y)

	solve x,y,z
	x == log(x)
	x = 7
	y + z == x
	y - z == x /0.5
	slvreto k
	print("\n\nx == log(x)\nx = 7\ny + z == x\ny - z == x /0.5\n======>")
	print("\nx == " + x + "\ny == " + y + "\nz == " + z + "\nk == " + k)

	solve x,y,z
	x == log(x)
	x = 7
	y**2 + 2*y + 8 == x
	slvreto k
	print("\n\nx == log(x)\nx = 7\ny**2 + 2*y + 8 == x\n======>")
	print("\nx == " + x + "\ny == " + y + "\nk == " + k)

	solve x,y,z
	x == log(x)
	x = 7
	y**2 + 2*y + 8 == x
	log(z) == y + x
	slvreto k
	print("\n\nx == log(x)\nx = 7\ny**2 + 2*y + 8 == x\nlog(z) == y + x\n======>")
	print("\nx == " + x + "\ny == " + y + "\nz == " + z + "\nk == " + k)

	solve x,y,z,a,b
	a + b == x - z
	a - b == y - z
	x == log(x)
	x = 7
	y**2 + 2*y + 8 == x
	log(z) == y + x
	slvreto k
	print("\n\na + b == x - z\na - b == y - z\nx == log(x)\nx = 7\ny**2 + 2*y + 8 == x\nlog(z) == y + x\n======>")
	print("\nx == " + x + "\ny == " + y + "\nz == " + z + "\na == " + a + "\nb == " + b + "\nk == " + k)

	solve x, y, z
	log(x) == 3
	z**2-5*z == 6
	y**3 + 3 * y**2 + 3 * y+ 1 == 0
	slvreto k
	print("\n\nlog(x) == 3\nz**2-5*z == 6\ny**3 + 3 * y**2 + 3 * y+ 1 == 0\n======>")
	print("\nx == " + x + "\ny == " + y + "\nz == " + z + "\nk == " + k)

	solve x
	x**2 + 2 * 3**x / 6**x  == 5 + 2 * 0.5 **x
	slvreto
	print("\n\nx**2 + 2 * 3**x / 6**x  == 5 + 2 * 0.5 **x\n======>")
	print("\nx == " + x)

	solve x, y
	x= 9 + 8 + conv_dec_to_hex(17) + i + 6
	y - 6 == x + "ABC" +x
	slvreto
	print("\n\nx= 9 + 8 + conv_dec_to_hex(17) + i + 6\ny - 6 == x + \"ABC\" +x\n======>")
	print("\nx == " + x + "\ny == " + y)

	solve z
	-z**2==2*(3*z/4)**3-3+ 0.1*(1/3*z)**3 - (z*3.425/4.81)**4 + (z**3/(-z))/0.4 - (z/(-z))*0.8 + (-z)/z/0.3 + (z/(+z)) - +z**2/3
	slvreto x
	print("\n\n-z**2==2*(3*z/4)**3-3+ 0.1*(1/3*z)**3 - (z*3.425/4.81)**4 + (z**3/(-z))/0.4 - (z/(-z))*0.8 + (-z)/z/0.3 + (z/(+z)) - +z**2/3\n======>")
	print("\nz == " + z + "\nx == " + x)

	x = NULL
	solve x,y
	x==(y+[5,[6, 8]] < y+[5,[6, 8]])
	slvreto
	print("\n\nx==(y+[5,[6, 8]] < y+[5,[6, 8]])\n======>")
	print("\nx == " + x + "\ny == " + y)

	x = NULL
	solve x,y
	x==(y+[5,[6, 8]] >= y+[5,[6, 8]])
	slvreto
	print("\n\nx==(y+[5,[6, 8]] >= y+[5,[6, 8]])\n======>")
	print("\nx == " + x + "\ny == " + y)

	x = NULL
	solve x,y
	x==(y+[5,[6, 8]] != y+[5,[6, 8]])
	slvreto
	print("\n\nx==(y+[5,[6, 8]] != y+[5,[6, 8]])\n======>")
	print("\nx == " + x + "\ny == " + y)

	x = NULL
	solve x,y
	x==(y+[5,[6, 8]] < y+[5,[6, 7]])
	slvreto
	print("\n\nx==(y+[5,[6, 8]] < y+[5,[6, 7]])\n======>")
	print("\nx == " + x + "\ny == " + y)

	x = NULL
	solve x,y
	x==(y+[5,[6, 8]] >= y+[5,[6, 7]])
	slvreto
	print("\n\nx==(y+[5,[6, 8]] >= y+[5,[6, 7]])\n======>")
	print("\nx == " + x + "\ny == " + y)

	x = NULL
	solve x,y
	x==(y+[5,[6, 8]] != y+[5,[6, 7]])
	slvreto
	print("\n\nx==(y+[5,[6, 8]] != y+[5,[6, 7]])\n======>")
	print("\nx == " + x + "\ny == " + y)

	x = NULL
	solve x,y
	x==(y+[5,[6, 8]] < y+[5,[6, 7, 8]])
	slvreto
	print("\n\nx==(y+[5,[6, 8]] < y+[5,[6, 7, 8]])\n======>")
	print("\nx == " + x + "\ny == " + y)

	x = NULL
	solve x,y
	x==(y+[5,[6, 8]] >= y+[5,[6, 7, 8]])
	slvreto
	print("\n\nx==(y+[5,[6, 8]] >= y+[5,[6, 7, 8]])\n======>")
	print("\nx == " + x + "\ny == " + y)

	x = NULL
	solve x,y
	x==(y+[5,[6, 8]] != y+[5,[6, 7, 8]])
	slvreto
	print("\n\nx==(y+[5,[6, 8]] != y+[5,[6, 7, 8]])\n======>")
	print("\nx == " + x + "\ny == " + y)

	x = NULL
	solve x
	pi == e
	x == (pi == e)
	slvreto
	print("\n\npi == e\nx == (pi == e)\n======>")
	print("\nx == " + x)

	solve x
	x**2/7.71==3
	slvreto y
	print("\n\nx**2/7.71==3\n======>")
	print("\nx == " + x + "\ny == " + y)

	solve x
	8.21\(x**2+2*x+1)**2 == 3+3i
	slvreto y
	print("\n\n8.21\\(x**2+2*x+1)**2 == 3+3i\n======>")
	print("\nx == " + x + "\ny == " + y)

	solve x
	(3*sin(x) + 6)**3 == 7
	slvreto y
	print("\n\n(3*sin(x) + 6)**3 == 7\n======>")
	print("\nx == " + x + "\ny == " + y)

	solve x
	-i*(3*exp(x) - 9.8-7.33i)**(3.44-7.68i) == 8+9i
	slvreto y
	print("\n\n-i*(3*exp(x) - 9.8-7.33i)**(3.44-7.68i) == 8+9i\n======>")
	print("\nx == " + x + "\ny == " + y)

	solve x
	-i*(3*exp(x) - 9.8-7.33i)**-4 == 8+9i
	slvreto y
	print("\n\n-i*(3*exp(x) - 9.8-7.33i)**-4 == 8+9i\n======>")
	print("\nx == " + x + "\ny == " + y)

	solve x
	0*x**3 == 6
	slvreto y
	print("\n\n0*x**3 == 6\n======>")
	print("\nx == " + x + "\ny == " + y)

	solve x
	x**(-17)/(4.11-3.8i) - 6.48 == (6 + 8i)
	slvreto y
	print("\n\nx**(-17)/(4.11-3.8i) - 6.48 == (6 + 8i)\n======>")
	print("\nx == " + x + "\ny == " + y)

	solve x
	x**(15) * [[5,4],[3,8]] == [[1,6],[2,7]]
	slvreto y
	print("\n\nx**(15) * [[5,4],[3,8]] == [[1,6],[2,7]]\n======>")
	print("\nx == " + x + "\ny == " + y)

	solve x
	x**(-17.0008)/(4.11-3.8i) - 6.48 == (6 + 8i)
	slvreto y
	print("\n\nx**(-17.0008)/(4.11-3.8i) - 6.48 == (6 + 8i)\n======>")
	print("\nx == " + x + "\ny == " + y)

	solve x
	x**(-17 + i*.0008)/(4.11-3.8i) - 6.48 == (6 + 8i)
	slvreto y
	print("\n\nx**(-17 + i*.0008)/(4.11-3.8i) - 6.48 == (6 + 8i)\n======>")
	print("\nx == " + x + "\ny == " + y)

	solve x
	pow(x**2,2)+4*x==7
	slvreto y
	print("\n\npow(x**2,2)+4*x==7\n======>")
	print("\nx == " + x + "\ny == " + y)

	solve x
	sqrt(x**4)+4*x==7
	slvreto y
	print("\n\nsqrt(x**4)+4*x==7\n======>")
	print("\nx == " + x + "\ny == " + y)

	solve x
	pow(exp(2*x), -0.5)==7
	slvreto y
	print("\n\npow(exp(2*x), -0.5)==7\n======>")
	print("\nx == " + x + "\ny == " + y)

endf

function validate_expr2str()
	print("\n-3i*4\n----> " + expr_to_string("-3i*4"))
	print("\n3i*-4\n----> " + expr_to_string("3i*-4"))
	print("\n2+3i*4\n----> " + expr_to_string("2+3i*4"))
	print("\n(+3i)*4\n----> " + expr_to_string("(+3i)*4"))
	print("\n3i**4\n----> " + expr_to_string("3i**4"))
	print("\n3*i**4\n----> " + expr_to_string("3*i**4"))
	print("\n(3*i)**4\n----> " + expr_to_string("(3*i)**4"))
	print("\n+3i**4\n----> " + expr_to_string("+3i**4"))
	print("\n(+++3i)*4\n----> " + expr_to_string("(+++3i)*4"))
	print("\n3 + 7 == 8% + 4**acos(y% *(0.3i+0.877))\n----> " + expr_to_string("3 + 7 == 8% + 4**acos(y% *(0.3i+0.877))"))
	print("\n5*x-3*z == 8*y-6*z\n----> " + expr_to_string("5*x-3*z == 8*y-6*z"))
	print("\n-8*x-16*y-2*z+y*10-x*y+x*13+x*y==2\n----> " + expr_to_string("-8*x-16*y-2*z+y*10-x*y+x*13+x*y==2"))
	print("\n-(k**3.92i +7.44i)\\3.83i-2.831==8.98 + y'*8.381\n----> " + expr_to_string("-(k**3.92i +7.44i)\\3.83i-2.831==8.98 + y'*8.381"))
	print("\n5/x**2*x**3-4*x**3*3*x**2/3.8i+1.748i+5==x**4/0.087i+4*x**3/x**2+2.65*(x-5)*(4*x**2+3*x-2.3)+6.86\n----> " + expr_to_string("5/x**2*x**3-4*x**3*3*x**2/3.8i+1.748i+5==x**4/0.087i+4*x**3/x**2+2.65*(x-5)*(4*x**2+3*x-2.3)+6.86"))
	print("\n1/x/(7+y)/(5+3i)*z*9*e == 0\n----> " + expr_to_string("1/x/(7+y)/(5+3i)*z*9*e == 0"))
	print("\n[i,-3i][2]\n----> " + expr_to_string("[i,-3i][2]"))
	print("\n(x+y)[2]\n----> " + expr_to_string("(x+y)[2]"))
	print("\nx+y[2]\n----> " + expr_to_string("x+y[2]"))
	print("\n[i,-3i, [a,b,c]][2,1][3]\n----> " + expr_to_string("[i,-3i, [a,b,c]][2,1][3]"))
	print("\n[3, 4-3i, func(4+5i, [4,5,6],x+y*3,y**(4+3))]\n----> " + expr_to_string("[3, 4-3i, func(4+5i, [4,5,6],x+y*3,y**(4+3))]"))
	print("\nx&(3+4)^5|6\n----> " + expr_to_string("x&(3+4)^5|6"))
	print("\nx&(3+4)^(5|6)\n----> " + expr_to_string("x&(3+4)^(5|6)"))
	print("\nx&3+4^(5|6)\n----> " + expr_to_string("x&3+4^(5|6)"))
	print("\nx&3*4^(5|6)\n----> " + expr_to_string("x&3*4^(5|6)"))
	print("\nx&(3*4)^(5|6)\n----> " + expr_to_string("x&(3*4)^(5|6)"))
	print("\nx&(3**4)\n----> " + expr_to_string("x&(3**4)"))
	print("\nx&3**4\n----> " + expr_to_string("x&3**4"))
	print("\nx==y>z*a\n----> " + expr_to_string("x==y>z*a"))
	print("\nx==(y>z)*a\n----> " + expr_to_string("x==(y>z)*a"))
	print("\nx==y>(z*a)\n----> " + expr_to_string("x==y>(z*a)"))
	print("\nx==(y>z*a)\n----> " + expr_to_string("x==(y>z*a)"))
	print("\nx==y>(z*a)\n----> " + expr_to_string("x==y>(z*a)"))
	print("\nx=y=z=a\n----> " + expr_to_string("x=y=z=a"))
	print("\nx=(y=(z)=a)\n----> " + expr_to_string("x=(y=(z)=a)"))
endf

Help
	Function selectest is used to determine select-case block works properly
Endh
Function selectest(Number_value)
	If or(Number_value <= 0, _	// number value must be positive
	round(Number_value) != Number_value)	// number value must be an integer
		Return 0
	Endif
	
	Variable Return_value
	Select Number_value
		Case 1
			Return_value = 1
			Break
		Case 2
			Return 4
		Case 3
			Return_value= 9
		Case 4
			Return_value= 7
			Break
		Default
			Return_value = 10
			Break
	Ends
	Return Return_value
Endf

Help
	Function test1 is to test mfp script
Endh
Function test1(Param1, Param2, Param3)
	Variable Return_value
	Return_value = Param1 * Param2
	Variable index1, index2, index3, index4, index5, index6
	For index1 = 1 to   Param3 Step 1
		index2 = 1
		While true
			index3 = 1
			Do
				For index4 = 1 to  index3 Step 1
					index5 = 1
					While true
						index6 = 1
						Do
							Return_value = Return_value + 1
							index6 = index6 + 1
						Until index6 > index5
						index5 = index5 + 1
						If index5 > index4
							Break
						Endif
					Loop
				Next
				index3 = index3 + 1
			Until index3 > index2
			index2 = index2 + 1
			If index2 > index1
				Break
			Endif
		Loop
	Next
	Return Return_value
Endf

Help
	Function test2 test assigning value to array.
Endh
Function test2()
	Variable Vector
	Vector = alloc_array(3,4,5)
	Vector[1,2,3] = 4 + 3i	// assign array
	Vector[sqrt(4), exp(1), 3+i - 2 -i] = 6i	// another assign
	Vector[1,2] = 9 * 9 /3 // third
//	Vector[1,2,4] = 7
//	print(size(Vector))
	Return Vector
Endf

Help
	Function testplot test plot_multi_xy function.
Endh
Function testplot()
	Variable VectorX1, VectorY1, VectorX2, VectorY2
	VectorX1 = alloc_array(100)
	VectorY1 = alloc_array(100)
	VectorX2 = alloc_array(50)
	VectorY2 = alloc_array(50)

	For Variable idx = -50 to 50 step 1
		If idx < 0
			VectorX1[idx +50] = idx
			VectorY1[idx +50] = cosh(idx)
		Elseif idx == 0
			continue
		Else	//idx > 0
			VectorX1[idx + 49] = idx
			VectorY1[idx + 49] = 1/idx
		Endif

	Next

	For Variable idx = 25 to 74 step 1
		VectorX2[idx - 25] = idx
		VectorY2[idx - 25] = tanh(idx)
	Next 
	plot_multi_xy("sub1/testchart1", _
	"chart_type:multiXY;chart_title:This is a test\\\: multiple xy plot.;x_title:x;x_min:-50;x_max:50;x_labels:10;y_title:y;y_min:-1;y_max:1;y_labels:10", _
	"curve_label:curve1;color:red",VectorX1, VectorY1,"curve_label:curve2;color:blue",VectorX2, VectorY2)
	plot_multi_xy("sub1/testchart2", "chart_type:multiXY;chart_title:This is a test\\\: multiple xy plot.;x_title:x;x_min:-50;x_max:50;x_labels:10;y_title:y;y_min:-1;y_max:1;y_labels:10","curve_label:curve1;color:red",VectorX1, VectorY1,"curve_label:curve2;color:blue",VectorX2, VectorY2)
	plot_multi_xy("sub1/subsub1/testchart1", "chart_type:multiXY;chart_title:This is a test\\\: _	// part of comments
	multiple xy plot.;x_title:x;x_min:-50;x_max:50;x_labels:10;y_title:y;y_min:-1;y_max:1;y_labels:10","curve_label:curve1;color:red",VectorX1, VectorY1,"curve_label:curve2;color:blue",VectorX2, VectorY2)
Endf

Help
	Function teststr test string functions.
Endh
Function teststr()
	print("strlen(\"abK2cE\") : ")
	print(strlen("abK2cE"))
	
	print("\nstrlen : ")
	print(strlen(""))
	
	Variable str1, str2
	str1 = "23721"
	str2 = "ADC___  647"
	print ("\nstrcpy(str1, str2, 2, 5, 5, 9) : \n")
	print(strcpy(str1, str2, 2, 5, 5, 9))
	
	print ("\nstrcpy(str1, str2, 2, 5, 5) : \n")
	print(strcpy(str1, str2, 2, 5, 5))
	
	print ("\nstrcpy(str1, str2, 2, 5) : \n")
	print(strcpy(str1, str2, 2, 5))
	
	print ("\nstrcpy(str1, str2, 2) : \n")
	print(strcpy(str1, str2, 2))
	
	print ("\nstrcpy(str1, str2) : \n")
	print(strcpy(str1, str2))
	
	print ("\nstrcmp(str1, str2, 2, 5, 5, 9) : ")
	print(strcmp(str1, str2, 2, 5, 5, 9))
	
	print ("\nstrcmp(str1, str2, 2) : ")
	print(strcmp(str1, str2, 2))
	
	print ("\nstrcmp(str1, str2) : ")
	print(strcmp(str1, str2))
	
	print("\nstrsub(str2, 5, 8) : ")
	print(strsub(str2, 5, 8))
	
	print("\nstrsub(str2, 5) : ")
	print(strsub(str2, 5))
	
	print("\nstrcat : ")
	print(strcat(str2, str1))
	
	print("\n insert 1 strcpy(str1, str2, 2, 5, 5, 5): \n" )
	print(strcpy(str1, str2, 2, 4, 5, 5))
	
	print("\n insert 2 strcpy(str1, str2, 2, 2, 5, 7): \n" )
	print(strcpy(str1, str2, 2, 2, 5, 7))
	
	print("\n wrong index strcpy(str1, str2, 2, 2, 8, 7): \n" )
	print(strcpy(str1, str2, 2, 2, 8, 7))
	
	print("\n")
Endf

Help
	Function testselect is to test select with uncaught case
Endh
Function testselect(Number_value)
	Variable Return_value
	Select Number_value
		Case 1
			Return_value = 1
			Break
		Case 2
			Return 4
		Case 3
			Return_value= 9
		Case 4
			Return_value= 7
			Break
	Ends
	Return Return_value
Endf


Help
	Function trycatch is to test try catch endtry block
Endh
Function trycatch()
	Variable a, b, c
	Try
		trycatch2()
	Catch and ((b=level)== level, (c=info)==info)
		print("In trycatch2 exception, level = ")
		print (b)
		print (" info = ")
		print (c)
		print("\n")
	Endtry
	a = 3
	Try
		Select a
		Case 3
			print("a == 3\n")
			Try
				print ("NULL == FALSE is ")
				print (NULL==FALSE)
				print ("\n")
				dbc
			Catch
				print ("dbc is not known\n")
			EndTry
		EndS
		Throw "my exception"
	Catch (1+2)==4
		print ("IN (1+2) == 4\n")
	catch false
		print ("In false\n")
	Catch and((b=level)=="LANGUAGE", (c=info) == "my exception")
		print ("In catch and, b = ")
		print (b)
		print ("\n")
		Help
		 Try 
		 	c = adb
		 Catch
		 	print (" c= adb")
		 EndTry
			Help
		Endh
		Try
			c = 3/"0"
		Catch And((c= info)==c, level == "LANGUAGE")
			print ("In Language, c= info = ")
			print (c) 
			print ("\n")
		Catch And((c= info)==c, level=="EXPRESSION")
			print ("In Expression, c= info = ")
			print (c)
			print ("\n")
		EndTry
		print ("Finish under layer try\n")
		print ("b = ")
		print (b)
		print (" , c = ")
		print (c)
		print ("\n")
	Catch or((b=level)=="LANGUAGE", (c=info) == "my exception")
		print ("In catch or, b = ")
		print (b)
		print (" , c = ")
		print (c)
		print ("\n")
	Endtry
	
	Try
		print ("In bottom try\n")
		b = [[11]]/[[1,2]]
	catch and(c=39, level=="LANGUAGE")
		print("In level==LANGUAGE, matrix division has problem!\n")
	Catch (c=level)=="EXPRESSION"
		print("In (c=level)==EXPRESSION, matrix division has problem!\n")
	catch
		print ("IN no filter matrix division has problem!\n")
		print ("c = ")
		print (c)
		print ("\n")
	EndTry
	Return
Endf

Function trycatch2()
	Variable a, b
	a = 3
	b = "hello"
	b = a/b
Endf

Help
	Function trycatchdivby0 is to test try catch endtry block with divided by 0 test
Endh
Function trycatchdivby0()
	Variable a, b, c
	Try
		trycatch2divby0()
	Catch and ((b=level)== level, (c=info)==info)
		print("In trycatch2divby0 exception, level = ")
		print (b)
		print (" info = ")
		print (c)
		print("\n")
	Endtry
	a = 3
	Try
		Select a
		Case 3
			print("a == 3\n")
			Try
				print ("NULL == FALSE is ")
				print (NULL==FALSE)
				print ("\n")
				dbc
			Catch
				print ("dbc is not known\n")
			EndTry
		EndS
		Throw "my exception"
	Catch (1+2)==4
		print ("IN (1+2) == 4\n")
	catch false
		print ("In false\n")
	Catch and((b=level)=="LANGUAGE", (c=info) == "my exception")
		print ("In catch and, b = ")
		print (b)
		print ("\n")
		Help
		 Try 
		 	c = adb
		 Catch
		 	print (" c= adb")
		 EndTry
			Help
		Endh
		Try
			c = 3/0
		Catch And((c= info)==c, level == "LANGUAGE")
			print ("In Language, c= info = ")
			print (c) 
			print ("\n")
		Catch And((c= info)==c, level=="EXPRESSION")
			print ("In Expression, c= info = ")
			print (c)
			print ("\n")
		EndTry
		print ("Finish under layer try\n")
		print ("b = ")
		print (b)
		print (" , c = ")
		print (c)
		print ("\n")
	Catch or((b=level)=="LANGUAGE", (c=info) == "my exception")
		print ("In catch or, b = ")
		print (b)
		print (" , c = ")
		print (c)
		print ("\n")
	Endtry
	
	Try
		print ("In bottom try\n")
		b = [[11]]/[[1,2]]
	catch and(c=39, level=="LANGUAGE")
		print("In level==LANGUAGE, matrix division has problem!\n")
	Catch (c=level)=="EXPRESSION"
		print("In (c=level)==EXPRESSION, matrix division has problem!\n")
	catch
		print ("IN no filter matrix division has problem!\n")
		print ("c = ")
		print (c)
		print ("\n")
	EndTry
	Return
Endf

Function trycatch2divby0()
	Variable a, b
	a = 3
	b = 0
	b = a/b
Endf

Function testInv()
	print("\nInvert([[4+3.7i, 5.1i - 6, 3.11i -0.8],[5.41i + 3.07,4.47+3.81i,0.73-5.54i],[3.33-4.31i,-5.42+3.02i,5.85-6.03i]]) = \n")
	print(Invert([[4+3.7i, 5.1i - 6, 3.11i -0.8],[5.41i + 3.07,4.47+3.81i,0.73-5.54i],[3.33-4.31i,-5.42+3.02i,5.85-6.03i]]))
	
	print("\nInvert([[0.044659 - 0.021092i, 0.027376 - 0.076583i, 0.026606 + 0.036280i], [-0.053074 - 0.054748i, 0.036653 - 0.003088i, -0.046330 + 0.008069i], [-0.053123 - 0.033173i, 0.014513 + 0.056939i, 0.028621 + 0.059845i]]) = \n")
	print(Invert([[0.044659 - 0.021092i, 0.027376 - 0.076583i, 0.026606 + 0.036280i], [-0.053074 - 0.054748i, 0.036653 - 0.003088i, -0.046330 + 0.008069i], [-0.053123 - 0.033173i, 0.014513 + 0.056939i, 0.028621 + 0.059845i]]))

Endf

Function testMDiv()
	print("\n[[[[-7, 1, 18, -16], [9, -14, -8, 26], [-4, 15, 0, -1]], [[-16, 6, 46, -41], [25, -38, -18, 69], [-9, 42, 0, -1]], [[28, 48, -4, 2], [26, -28, 36, 30], [18, 48, 0, 22]]], [[[-38, -28, 54, -47], [9, -22, -46, 55], [-23, 12, 0, -17]], [[-39, -39, 42, -36], [-3, -6, -48, 30], [-24, -9, 0, -21]], [[6, 14, 4, -4], [10, -12, 8, 16], [4, 18, 0, 6]]], [[[-20, -12, 32, -28], [8, -16, -24, 36], [-12, 12, 0, -8]], [[-21, -23, 20, -17], [-4, 0, -26, 11], [-13, -9, 0, -12]], [[12, 54, 42, -39], [51, -66, 18, 99], [9, 90, 0, 21]]], [[[44, 42, -50, 43], [1, 10, 54, -39], [27, 6, 0, 23]], [[-7, -25, -16, 15], [-22, 28, -10, -41], [-5, -39, 0, -10]], [[-6, -14, -4, 4], [-10, 12, -8, -16], [-4, -18, 0, -6]]]]\n/\n[[[1,2],[3,5],[6,-2]],[[-1,7],[-3,6],[2,0]],[[0,4],[-2,3],[9,3]],[[3,-7],[-4,-1],[-2,0]]] = \n")
	
	print([[[[-7, 1, 18, -16], [9, -14, -8, 26], [-4, 15, 0, -1]], [[-16, 6, 46, -41], [25, -38, -18, 69], [-9, 42, 0, -1]], [[28, 48, -4, 2], [26, -28, 36, 30], [18, 48, 0, 22]]], [[[-38, -28, 54, -47], [9, -22, -46, 55], [-23, 12, 0, -17]], [[-39, -39, 42, -36], [-3, -6, -48, 30], [-24, -9, 0, -21]], [[6, 14, 4, -4], [10, -12, 8, 16], [4, 18, 0, 6]]], [[[-20, -12, 32, -28], [8, -16, -24, 36], [-12, 12, 0, -8]], [[-21, -23, 20, -17], [-4, 0, -26, 11], [-13, -9, 0, -12]], [[12, 54, 42, -39], [51, -66, 18, 99], [9, 90, 0, 21]]], [[[44, 42, -50, 43], [1, 10, 54, -39], [27, 6, 0, 23]], [[-7, -25, -16, 15], [-22, 28, -10, -41], [-5, -39, 0, -10]], [[-6, -14, -4, 4], [-10, 12, -8, -16], [-4, -18, 0, -6]]]]/[[[1,2],[3,5],[6,-2]],[[-1,7],[-3,6],[2,0]],[[0,4],[-2,3],[9,3]],[[3,-7],[-4,-1],[-2,0]]])

Endf

Function testdeter()
	variable matrix
	matrix = set_array_elem(matrix, [3, 2, 4], 4 + 5i)
	print("matrix = ")
	print (matrix)
	print ("\n")
	
	variable matrix2
	matrix2 = set_array_elem(matrix2, [1, 1], 4 + 5i)
	matrix2 = set_array_elem(matrix2, [0, 0], 7 - 0.4i, NULL)
	print("matrix2 = ")
	print (matrix2)
	print ("\n")
	print("deter(matrix2) = ")
	print(deter(matrix2))
	print ("\n")

	variable matrix1
	matrix1 = set_array_elem(matrix1, [2, 2], 4 + 5i, 0)
	print("matrix1  = set_array_elem(matrix1, [2, 2], 4 + 5i, 0) = ")
	print (matrix1)
	print("\n")
	matrix1 = set_array_elem(matrix1, [0, 1], 7 - 0.4i)
	matrix1 = set_array_elem(matrix1, [1, 0], 8.5 + 9.1i)
	matrix1 = set_array_elem(matrix1, [1, 2], 5.3 - 4.4i)
	matrix1 = set_array_elem(matrix1, [0, 2], 3.8 - 8.4i)
	matrix1 = set_array_elem(matrix1, [2, 0], sqrt(7.6) +i)
	print("matrix1 = ")
	print (matrix1)
	print ("\n")
	print("deter(matrix1) = ")
	print(deter(matrix1))
	print ("\n")
	
	print("deter([[-4,2,3,-2.8i,7.66i-5.31],[5.32+i,0.99i-4.81,3.31i-3.32,0.88,4.96],[5.33,2,7,-8.43,-6.33-3.21i],[-3.71,-6.46,-0.99i,3.23],[5.67,4.44,8.78*i+5.31,3.953-0.477i,5.46i]]) = ")
	print(deter([[-4,2,3,-2.8i,7.66i-5.31],[5.32+i,0.99i-4.81,3.31i-3.32,0.88,4.96],[5.33,2,7,-8.43,-6.33-3.21i],[-3.71,-6.46,-0.99i,3.23],[5.67,4.44,8.78*i+5.31,3.953-0.477i,5.46i]]))
	print("\n")
Endf

Function testAndOr()
	variable a = [1,2], b= null, c
	if and(b != null, b[3] == 9)
		print_line("b[3] is 9")
	else
		print_line("b[3] is not 9")
	endif
	
	try
		if or(b != null, b[3] == 9)
			print_line("In or(b != null, b[3] == 9)")
		endif
	catch (c = info)==c
		print_line("get exception when or(b != null, b[3] == 9), exception info is " + c)
	endtry
	
	c = or(b != null, a != null, a[4] == "Hello")
	print_line("or(b != null, a != null, a[4] == \"Hello\") = " + c)
	
	if and(a != null, size(a)[0] > 3, a[3] == 8)
		print_line("a[3] is 8")
	else
		print_line("a[3] is not 8")
	endif
	
	try
		if and(a != null, size(a)[0] > 1, size(a[1])[0] == 2, a[0] == 1)
			print_line("and(a != null, size(a)[0] > 1, size(a[1])[0] == 2, a[0] == 1)")
		endif
	catch (c = info)==c
		print_line("get exception when and(a != null, size(a)[0] > 1, size(a[1])[0] == 2, a[0] == 1), exception info is " + c)
	endtry
	
	print_line("and(b != null, d == 7) = " + and(b != null, d == 7))
	
	try
		print_line("or(b != null, d == 7) = " + or(b != null, d == 7))
	catch (c = info)==c
		print_line("get exception when or(b != null, d == 7), exception info is " + c)
	endtry
	
	try
		print_line("and(size(a) == [2], a[1] > 7, evaluate(\"d+7\")) = " + and(size(a) == [2], a[1] > 7, evaluate("d+7")))
	catch (c = info)==c
		print_line("get exception when and(size(a) == [2], a[1] > 7, evaluate(\"d+7\")), exception info is " + c)
	endtry
	
	try
		print_line("and(size(a) == [2], evaluate(\"d+7\")) = " + and(size(a) == [2], evaluate("d+7")))
	catch (c = info)==c
		print_line("get exception when and(size(a) == [2], evaluate(\"d+7\")), exception info is " + c)
	endtry
	
	try
		print_line("or(size(a) == [2], strlen(\"abc) == 3) = " + or(size(a) == [2], strlen(\"abc) == 3))
	catch (c = info)==c
		print_line("get exception when or(size(a) == [2], strlen(\"abc) == 3), exception info is " + c)
	endtry
	
	try
		print_line("or(size(a) == [2], size(b) == []]) = " + or(size(a) == [2], size(b) == []]))
	catch (c = info)==c
		print_line("get exception when or(size(a) == [2], size(b) == []]), exception info is " + c)
	endtry
	
	variable f = [5,6,7], g = "Hello"
	print_line("and(size(f) != [3], aaaaaaa(g)) = " + and(size(f) != [3], aaaaaaa(g)))
	
	try
		print_line("or(size(f) != [3], aaaaaaa(g)) = " + or(size(f) != [3], aaaaaaa(g)))
	catch (c = info)==c
		print_line("get exception when or(size(f) != [3], aaaaaaa(g)), exception info is " + c)
	endtry
	
	print_line("and(size(f) != [3], print(g)) = " + and(size(f) != [3], print(g)))
	
	try
		print_line("or(size(f) != [3], print(g)) = " + or(size(f) != [3], print(g)))
	catch (c = info)==c
		print_line("get exception when or(size(f) != [3], print(g)), exception info is " + c)
	endtry
	
	try
		print_line("and(size(f) != [3], 37 = 9) = " + and(size(f) != [3], 37 = 9))
	catch (c = info)==c
		print_line("get exception when and(size(f) != [3], 37 = 9), exception info is " + c)
	endtry
	
	print_line("or(size(f) >=3, g/2) = " + or(size(f) >=3, g/2))
	
	try
		print_line("and(size(f) >=3, g/2) = " + and(size(f) >=3, g/2))
	catch (c = info)==c
		print_line("get exception when and(size(f) >=3, g/2), exception info is " + c)
	endtry
	
	print_line("or(size(f) >=3, [1,2,3]*[[4,5,6],[7,8,9]]) = " + or(size(f) >=3, [1,2,3]*[[4,5,6],[7,8,9]]))
	
	try
		print_line("and(size([[4,5,6],[7,8,9]]) == [2, 3], or(size(f) >= 3, g/2,)) = " + and(size([[4,5,6],[7,8,9]]) == [2, 3], or(size(f) >= 3, g/2,)))
	catch (c = info)==c
		print_line("get exception when and(size([[4,5,6],[7,8,9]]) == [2, 3], or(size(f) >= 3, g/2,)), exception info is " + c)
	endtry
	
	try
		print_line("and(size(f) >=3, [1,2,3]*[[4,5,6],[7,8,9]]) = " + and(size(f) >=3, [1,2,3]*[[4,5,6],[7,8,9]]))
	catch (c = info)==c
		print_line("get exception when and(size(f) >=3, [1,2,3]*[[4,5,6],[7,8,9]]), exception info is " + c)
	endtry
	
	print_line("and(size([[4,5,6],[7,8,9]]) == [2, 3], or(size(f) >= 3, g/2)) = " + and(size([[4,5,6],[7,8,9]]) == [2, 3], or(size(f) >= 3, g/2)))
	
	print_line("and(1) = " + and(1) + " or(1) = " + or(1) + " and(0) = " + and(0) + " or(0) = " + or(0))
	
	try
		print_line("and(g/2) = " + and(g/2))
	catch (c = info)==c
		print_line("get exception when and(g/2), exception info is " + c)
	endtry
	
	try
		print_line("or(g/2) = " + or(g/2))
	catch (c = info)==c
		print_line("get exception when or(g/2), exception info is " + c)
	endtry
endf

Function testContinueBreak()
	Variable a, b, c, d = 8, e
	Select d
	Case 6
		If 3 > 2
			Break
		Endif
		e = 71
	Case 8
		For variable index = 0 to 10
			a = index
			If and(a > 5, a < 9)
				Continue
			Elseif a >= 9
				b = a
				For variable index = a + 7 to 19
					If index == 16
						Break
					Endif
					b = index
				Next
				If b > a
					Break
				Else
					Continue
				Endif
			Endif
		Next
		print("\na value in testContinueBreak is " + a)
		print("\nb value in testContinueBreak is " + b + "\n")
		try
			print("\nfirst index value in testContinueBreak is " + index + "\n")
		catch (c = info)==c
			print("\nget exception when evaluate index for the first time, exception info is " + c)
		Endtry
		
		Variable index = 0
		Do
			index = index + 1
			If index > 40
				Break
			Endif
		Until index > 5
		
		While index < 10
			index = index - 1
			If index < 7
				Break
			Endif
		Loop
		
		print("\nsecond index value in testContinueBreak is " + index + "\n")
		
		If index < 10
			Break
		Endif
		
		e = 78
	Case 9
		e = 82
	Default
		e = 44
		Break
		e = 99
	Ends
	print("\ne value in testContinueBreak is " + e + "\n")
	try
		print("\nthird index value in testContinueBreak is " + index + "\n")
	catch (c = info)==c
		print("\nget exception when evaluate index for the third time, exception info is " + c)
	Endtry
Endf

// this function only supports rounding non-matrix numeric values.
Function round_float_complex(value_input, number_of_dig_after_decimal)
	variable div = 10 ** number_of_dig_after_decimal
	if image(value_input) == 0
		return round(real(value_input) * div)/div
	else
		return round(real(value_input) * div)/div + i * round(image(value_input) * div)/div
	endif
Endf

// this function supports rounding matrix and non-numeric values.
Function round_matrix(matrix_input, number_of_dig_after_decimal)
    Variable matrix_dim = size(matrix_input)
   
    if matrix_dim == []    // matrix_input is a single value
        try
            return round_float_complex(matrix_input, number_of_dig_after_decimal)
        catch
            return matrix_input    // not a numeric value
        endtry
    else
        variable blank_matrix = alloc_array(matrix_dim[0])
        for variable idx = 0 to matrix_dim[0] - 1 step 1
            blank_matrix[idx] = round_matrix(matrix_input[idx], number_of_dig_after_decimal)
        next
        return blank_matrix
    endif
Endf

Function inputtest()
	variable a = input("Hello kitty", "kk")
	print(a)
	variable b = a+ 1
	input(">>>", "s")
	b = input(">>")
	b = "hello b" + b
	variable c = input("%")
	print("Now input a new value : " + input("Please input: "))
	a = input("Default>>>", "Default")
	print_line("Now input a, a = " + a)
	a = input("Default>>>", "default", [3, 4])
	print_line("Now input a with default value is [3, 4], a = " + a)
	b = input("Default>>>", "default", a)
	print_line("Now input b with default value is a, b = " + b)
	b[0] = i
	print_line("After change b[0] = i, b = " + b + " a = " + a)
	b = input("Default>>>", "s", a)
Endf

function plottest()
	plot_3d_surfaces("chart1", "a chart", "x", "y", "z", "cv 1", false, "pink", "gray", null, "green", "yellow", null, "u", -5, 5, 1, "v", -4, 4, 1, "u", "v", "u**2 - v**2")
	plot_3d_surfaces("chart b","b Chart","x axis","y axis","z axis","cv 1",true,"cyan","red",null,"magenta","blue",null,"u",-5,5,0,"v",-4,4,1,"u*v","abs(u)+abs(v)","u**2+v*3","cv2",false,"green","white",null,"red","yellow",null,"u",-7,6,1.2,"v",-4,5,1,"v","u","u/v")
	plot_3d_surfaces("graph3d a","This is a graph","x axis","Y axis","Z axis","cv2",true,"blue","ltgray",-2,"white","red",2,"u",-7,8,1,"v",4,29,0,"v/u","v*u","2*u*v/(u**2+v**2)")
	plot_3d_surfaces("chart b","b Chart","x axis","y axis","z axis","cv2",false,"green","red",null,"red","green",null,"u",-7,6,1.2,"v",-4,5,1,"v","u","u/v")
	plot3D("chartI", "first chart", "x", "y", "z", "Curve1", true, "red", -0.5, "green", null, 0, pi, pi/8, -pi/2, pi/2, 0, "sin(u)*cos(v)", "sin(u)*sin(v)", "cos(u)")
	plot_multi_xyz("chartII", "chart_type:multiXYZ;chart_title:This is a graph;x_title:x;x_min:-5;x_max:5;x_labels:6;y_title:Y;y_min:-6;y_max:6;y_labels:3;z_title:Z;z_min:-3;z_max:1;z_labels:4", "curve_label:cv1;min_color:blue;max_color:red;min_color_1:green;max_color_1:yellow", [[-4, -2, 0, 2, 4],[-4, -2, 0, 2, 4],[-4, -2, 0, 2, 4]], [[-5, -5, -5, -5, -5], [0, 0, 0, 0, 0], [-5, -5, -5, -5, -5]], [[-2.71, -2.65, -2.08, -1.82, -1.77], [-2.29, -2.36, -1.88, -1.45, -1.01], [-1.74, -1.49, -0.83, -0.17, 0.44]])
	plot_multi_xy("chart2", "chart_type:multiXY;chart_title:1 chart;x_title:x;x_min:-6;x_max:6;x_labels:6;y_title:y;y_min:-4;y_max:4;y_labels:5;background_color:black;show_grid:true", "curve_label:cv2;point_color:blue;point_style:circle;point_size:3;line_color:blue;line_style:solid;line_size:1", [-5, -3, -1, 0, 1, 2, 3, 4, 5], [-3.778, -2.9793, -2.0323, -1.1132, 0.2323, 1.2348, 3.9865, 2.3450, 0.4356])
	plot2DEX("chart 3", "3rd chart", "x", "y", "black", true, "cv1", "blue", "x", 2, "blue", "solid", 1, -5, 5, 0.1, "t", "t**2/2.5 - 4*t + 6", "cv2", "red", "square", 4, "square", "solid", 1, -10, 10, 0.1, "5*sin(t)", "10*cos(t)")
endf

function pextest()
	plot2DEX("chart 3", "3rd chart", "x", "y", "black", true, "cv1", "blue", "x", 2, "blue", "solid", 1, -5, 5, 0.1, "t", "t**2/2.5 - 4*t + 6", "cv2", "red", "square", 4, "square", "solid", 1, -10, 10, 0.1, "5*sin(t)", "10*cos(t)")
	plot_2d_expressions("chart 4", "4th chart", "x", -10, 10, "YY", -5, 5, "black", "true", "cv1", "green", "circle", 5, "red", "solid", 3, 0, "sqrt(yz + abs(yz + 2.78 * e * i)/sqrt(yz*yz + 1))", "yz", 100)
	plot_2d_expressions("chart 4", "4th chart", "x", -10, 10, "YY", -5, 5, "yellow", "true", "cv1", "green", "circle", 5, "red", "solid", 3, 0, "tan(yz)", "yz", 100)
	plot_3d_expressions("chart 5", "5th chart", "a", -10, 10, "b", -15, 15, "c", -5, 5, "cv1", false, "yellow", "blue", "red", "green", 2, "ax", 100, "yu", 20, "sin(ax)*cos(yu)", 50)
	plot2DEX("chartg 3", "3rd gchart", "xbg", "yf", "black", true, "cvfg1", "blue", "x", 2, "blue", "solid", 1, -5, 5, 0.1, "t", "t**2/2.5 - 4*t + 6", "cfgv2", "red", "square", 4, "square", "solid", 1, -10, 10, 0.1, "5*sin(t)", "10*cos(t)")
	plot_2d_expressions("charfgt 4", "4th chafgrt", "xfg", -10, 10, "YfgY", -5, 5, "black", "true", "cvfg1", "green", "circle", 5, "red", "solid", 3, 0, "sqrt(yz + abs(yz + 2.78 * e * i)/sqrt(yz*yz + 1))", "yz", 100)
	plot_expressions("chart expr", "Expr chart", -10, 10, 0, "sin(x)", "cos(y)/lg(y)")
	plot_expressions("chart expr", "Expr chart", -10, 10, 0, "y=sin(x)*cos(z)", "x==cos(y)/log(y)", "z+x", "6*exp(y)*x==z")
	plot_expressions("chart expr", "Expr chart", -10, 10, 400, "cos(y)/log(y)")
	plot_expressions("chart expr", "Expr chart", -10, 10, 50, "cos(y)/log(z)")
endf

function plottest_nofile()
	plot_3d_surfaces(" ", "a chart", "x", "y", "z", "cv 1", false, "pink", "gray", null, "green", "yellow", null, "u", -5, 5, 1, "v", -4, 4, 1, "u", "v", "u**2 - v**2")
	plot_3d_surfaces("	 ","b Chart","x axis","y axis","z axis","cv 1",true,"cyan","red",null,"magenta","blue",null,"u",-5,5,0,"v",-4,4,1,"u*v","abs(u)+abs(v)","u**2+v*3","cv2",false,"green","white",null,"red","yellow",null,"u",-7,6,1.2,"v",-4,5,1,"v","u","u/v")
	plot_3d_surfaces("   ","This is a graph","x axis","Y axis","Z axis","cv2",true,"blue","ltgray",-2,"white","red",2,"u",-7,8,1,"v",4,29,0,"v/u","v*u","2*u*v/(u**2+v**2)")
	plot_3d_surfaces("","b Chart","x axis","y axis","z axis","cv2",false,"green","red",null,"red","green",null,"u",-7,6,1.2,"v",-4,5,1,"v","u","u/v")
	plot3D("", "first chart", "x", "y", "z", "Curve1", true, "red", -0.5, "green", null, 0, pi, pi/8, -pi/2, pi/2, 0, "sin(u)*cos(v)", "sin(u)*sin(v)", "cos(u)")
	plot_multi_xyz("		", "chart_type:multiXYZ;chart_title:This is a graph;x_title:x;x_min:-5;x_max:5;x_labels:6;y_title:Y;y_min:-6;y_max:6;y_labels:3;z_title:Z;z_min:-3;z_max:1;z_labels:4", "curve_label:cv1;min_color:blue;max_color:red;min_color_1:green;max_color_1:yellow", [[-4, -2, 0, 2, 4],[-4, -2, 0, 2, 4],[-4, -2, 0, 2, 4]], [[-5, -5, -5, -5, -5], [0, 0, 0, 0, 0], [-5, -5, -5, -5, -5]], [[-2.71, -2.65, -2.08, -1.82, -1.77], [-2.29, -2.36, -1.88, -1.45, -1.01], [-1.74, -1.49, -0.83, -0.17, 0.44]])
	plot_multi_xy("   	", "chart_type:multiXY;chart_title:1 chart;x_title:x;x_min:-6;x_max:6;x_labels:6;y_title:y;y_min:-4;y_max:4;y_labels:5;background_color:black;show_grid:true", "curve_label:cv2;point_color:blue;point_style:circle;point_size:3;line_color:blue;line_style:solid;line_size:1", [-5, -3, -1, 0, 1, 2, 3, 4, 5], [-3.778, -2.9793, -2.0323, -1.1132, 0.2323, 1.2348, 3.9865, 2.3450, 0.4356])
	plot2DEX(" ", "3rd chart", "x", "y", "black", true, "cv1", "blue", "x", 2, "blue", "solid", 1, -5, 5, 0.1, "t", "t**2/2.5 - 4*t + 6", "cv2", "red", "square", 4, "square", "solid", 1, -10, 10, 0.1, "5*sin(t)", "10*cos(t)")
	plot2DEX("", "3rd chart", "x", "y", "black", true, "cv1", "blue", "x", 2, "blue", "solid", 1, -5, 5, 0.1, "t", "t**2/2.5 - 4*t + 6", "cv2", "red", "square", 4, "square", "solid", 1, -10, 10, 0.1, "5*sin(t)", "10*cos(t)")
	plot_2d_expressions("   ", "4th chart", "x", -10, 10, "YY", -5, 5, "black", "true", "cv1", "green", "circle", 5, "red", "solid", 3, 0, "sqrt(yz + abs(yz + 2.78 * e * i)/sqrt(yz*yz + 1))", "yz", 100)
	plot_2d_expressions("", "4th chart", "x", -10, 10, "YY", -5, 5, "yellow", "true", "cv1", "green", "circle", 5, "red", "solid", 3, 0, "tan(yz)", "yz", 100)
	plot_3d_expressions(" ", "5th chart", "a", -10, 10, "b", -15, 15, "c", -5, 5, "cv1", false, "yellow", "blue", "red", "green", 2, "ax", 100, "yu", 20, "sin(ax)*cos(yu)", 50)
	plot2DEX("", "3rd gchart", "xbg", "yf", "black", true, "cvfg1", "blue", "x", 2, "blue", "solid", 1, -5, 5, 0.1, "t", "t**2/2.5 - 4*t + 6", "cfgv2", "red", "square", 4, "square", "solid", 1, -10, 10, 0.1, "5*sin(t)", "10*cos(t)")
	plot_2d_expressions("", "4th chafgrt", "xfg", -10, 10, "YfgY", -5, 5, "black", "true", "cvfg1", "green", "circle", 5, "red", "solid", 3, 0, "sqrt(yz + abs(yz + 2.78 * e * i)/sqrt(yz*yz + 1))", "yz", 100)
	plot_expressions(" ", "Expr chart", -10, 10, 0, "sin(x)", "cos(y)/lg(y)")
	plot_expressions("	", "Expr chart", -10, 10, 0, "y=sin(x)*cos(z)", "x==cos(y)/log(y)", "z+x", "6*exp(y)*x==z")
	plot_expressions("	 	 ", "Expr chart", -10, 10, 400, "cos(y)/log(y)")
	plot_expressions("", "Expr chart", -10, 10, 50, "cos(y)/log(z)")
endf

function plottest1()
	plot_multi_xyz("chartII", "chart_type:multiXYZ;chart_title:This is a graph;x_title:x;x_min:-5;x_max:5;x_labels:6;y_title:Y;y_min:-6;y_max:6;y_labels:3;z_title:Z;z_min:-3;z_max:1;z_labels:4", "curve_label:cv1;min_color:blue;max_color:red;min_color_1:green;max_color_1:yellow", [[-4, -2, 0, 2, 4],[-4, -2, 0, 2, 4],[-4, -2, 0, 2, 4]], [[-5, -5, -5, -5, -5], [0, 0, 0, 0, 0], [-5, -5, -5, -5, -5]], [[-2.71, -2.65, -2.08, -1.82, -1.77], [-2.29, -2.36, -1.88, -1.45, -1.01], [-1.74, -1.49, -0.83, -0.17, 0.44]])
endf

function plottest2()
	variable dia = [60, 20, 2, 0.5, 0.25, 0.075]
	variable perc = [100, 94, 22, 7, 3, 1]
	plot_2d_curves("spline_fit_chart","Spline fit chart","x","y","black","true","Points","magenta","diamond",1,"magenta","solid",0,"t",0,9,1,"dia[t]","perc[t]","fit curve","blue","circle",1,"blue","solid",1,"t",0,9,1,"dia[t]","perc[t]")
	plot_3d_surfaces("chart b","b Chart","x axis","y axis","z axis","cv 1",false,"cyan","cyan",null,"magenta","magenta",null,"u",-5,5,0,"v",-4,4,1,"u*v","abs(u)+abs(v)","u**2+v*3","cv2",false,"green","green",null,"red","red",null,"u",-7,6,1.2,"v",-4,5,1,"v","u","u/v")
	plot_3d_surfaces("chart b","b Chart","x axis","y axis","z axis","cv 1",false,"cyan","cyan",null,"magenta","magenta",null,"u",-5,5,0,"v",-4,4,1,"u*v","abs(u)+abs(v)","dia[u]+perc[v]","cv2",false,"green","green",null,"red","red",null,"u",-7,6,1.2,"v",-4,5,1,"dia[v]","perc[u]","u/v")
	plot_3d_surfaces("chart b","b Chart","x axis","y axis","z axis","cv 1",false,"cyan","cyan",null,"magenta","magenta",null,"u",0,5,1,"v",0,4,1,"2*u*v","u**2+v**2","dia[u]+perc[v]","cv2",false,"green","green",null,"red","red",null,"u",1,5,1,"v",0,5,1,"dia[v]","perc[u]","u*v")
endf

function plottest3()
	plot_3d_surfaces("chart 1","a chart","x","y","z","cv1",false,"magenta","magenta",null,"green","green",null,"u",-20,20,0,"v",-pi,pi,0, "u*cos(v)", "u*sin(v)", "20*cos(u/5)*exp(-abs(u/30))")
endf

function plotpolar()
	plot_polar_curves("Polar_test","Polar test","R","?","black","true","Cv1","red","point",1,"red","solid",1,"t",0,Pi,Pi/20,"t","t")
	plot_exprs("r=α", "α=cos(r)")
	plot_multi_rangle("chart2", "chart_type:multiRangle;chart_title:1 chart;x_title:x;x_min:-6;x_max:6;x_labels:6;y_title:y;y_min:-4;y_max:4;y_labels:5;background_color:black;show_grid:true", "curve_label:cv2;point_color:blue;point_style:circle;point_size:3;line_color:blue;line_style:solid;line_size:1", [-5, -3, -1, 0, 1, 2, 3, 4, 5], [-3.778, -2.9793, -2.0323, -1.1132, 0.2323, 1.2348, 3.9865, 2.3450, 0.4356]) 
	plot_2d_expressions("2d_expressions", "2D expressions", "x", -10, 15, "y", -9, 8, "black", "true", "cv1", "green", "point", 1, "green", "solid", 1, 0, "y + 4", "y", 100)
	plot_polar_expressions("polar_expressions", "Polar expressions", "R", -10, 15, "?", -9, 8, "black", "true", "cv1", "green", "point", 1, "magenta", "solid", 1, 0, "y + 4", "y", 100)
	plot_polar_data([2.47, 3.53, 4.88, 9.42], [8.49, 6.76, 5.31, 0.88], [-9, -7, -5, -3, -1], [28, 42, 33, 16, 7])
endf

function plotdataexprs()
	plot_2d_data([2.47, 3.53, 4.88, 9.42], [8.49, 6.76, 5.31, 0.88], [-9, -7, -5, -3, -1], [28, 42, 33, 16, 7], [9, 3, 8+7, 6.44, 5+11, 7-4], [2, 5, 0.7, 6, 7, 4], [-4, -3, -2, -1, 0, 1, 2, 3, 4], [8, 7, 6, 7, 8, 9, 10, 9, 8] )
	plot_2d_data([2.47, 3.53, 4.88, 9.42], [8.49, 6.76, 5.31, 0.88], [-9, -7, -5, -3, -1], [28, 42, 33, 16, 7], [9, 3, 8+7, 6.44, 5+11, 7-4], [2, 5, 0.7, 6, 7, 4])
	plot_2d_data([2.47, 3.53, 4.88, 9.42], [8.49, 6.76, 5.31, 0.88], [-9, -7, -5, -3, -1], [28, 42, 33, 16, 7])
	plot_2d_data([5.5, -7, 8.993, 2.788])
	plot_2d_data([2.47, 3.53, 4.88, 9.42], [8.49, 6.76, 5.31, 0.88])
	plot_3d_data([[1],[1]])
	plot_3d_data([[1,1]])
	plot_3d_data([[1,1],[1,1]])
	plot_3d_data([1,2,3],[4,5,6,8],[[3,7,2],[5,8,9],[2,6,3],[7,4,4]],[8,7,4,8],[2,1],[[9,3,2,6],[4,5,3,7]],[5,4,6,3],[2,1,6],[[8,9,3,2],[4,6,2,-1],[-3,-2,-5,8]],[8,7,9.44],[5,3+4],[[6,7,8],[3,9,4]])
	plot_3d_data([[2.47, 3.53, 4.88, 9.42], [8.49, 6.76, 5.31, 0.88], [-9, -7, -5, -3, -1]])
	plot_exprs("4*x+sin(y)", "z=x/y", "x*lg(x)/log2(z)==y","pi+x*y")
	plot_exprs("4/abs(x)+sin(y)")
endf

function test_plot_singular_points()
	plot_polar_curves("chart_div_by_0_2d","Div by zero","x","y","black","true","y = 1/x","blue","circle",1,"green","solid",1,"t",-10,10,0.1,"t","1/t")
	plot_2d_curves("chart_div_by_0_2d","Div by zero","x","y","black","true","y = 1/x","blue","circle",1,"blue","solid",1,"t",-10,10,0.1,"t","1/t")
	plot_2d_curves("chart_div_by_0_2d","Div by zero","x","y","black","true","y = tand(x)","magenta","circle",1,"magenta","solid",1,"t",-1800,1800,10,"t","tand(t)")
	plot_expressions("", "Expr chart", -10, 10, 50, "cos(y)/z")
	plot_expressions("", "Expr chart", -10, 10, 50, "1/x")
	plot_expressions("", "Expr chart", -10, 10, 50, "x + 0/x")
endf

Function test_plot_nan_inf()
	variable var1
	try
	plot_2d_curves("chart 1","test nan inf","x","y","black","true","curve 1","white","circle",1,"white","solid",1,"t",1,10,1,"t+inf","t")
	catch (var1 = info) == info
	print(var1 + "\n")
	endtry

	try
	plot_2d_curves("chart 1","test nan inf","x","y","black","true","curve 1","white","circle",1,"white","solid",1,"t",1,10,1,"t+inf","t")
	catch (var1 = info) == info
	print(var1)
	endtry

	try
	plot_2d_curves("chart 1","test nan inf","x","y","black","true","curve 1","white","circle",1,"white","solid",1,"t",1,10,1,"t+nan","t")
	catch (var1 = info) == info
	print(var1 + "\n")
	endtry

	try
	plot_2d_curves("chart 1","test nan inf","x","y","black","true","curve 1","white","circle",1,"white","solid",1,"t",1,10,1,"t","t+inf")
	catch (var1 = info) == info
	print(var1 + "\n")
	endtry

	try
	plot_2d_curves("chart 1","test nan inf","x","y","black","true","curve 1","white","circle",1,"white","solid",1,"t",1,10,1,"t","t+nan")
	catch (var1 = info) == info
	print(var1 + "\n")
	endtry

	try
	plot_2d_curves("chart 1","test nan inf","x","y","black","true","curve 1","white","circle",1,"white","solid",1,"t",1,10,1,"t","t")
	catch (var1 = info) == info
	print(var1 + "\n")
	endtry

	try
	plot_2d_curves("chart 1","test nan inf","x","y","black","true","curve 1","white","circle",1,"white","solid",1,"t",-inf,10,1,"t","t")
	catch (var1 = info) == info
	print(var1 + "\n")
	endtry

	try
	plot_2d_curves("chart 1","test nan inf","x","y","black","true","curve 1","white","circle",1,"white","solid",1,"t",inf,10,1,"t","t")
	catch (var1 = info) == info
	print(var1 + "\n")
	endtry

	try
	plot_2d_curves("chart 1","test nan inf","x","y","black","true","curve 1","white","circle",1,"white","solid",1,"t",inf,inf,1,"t","t")
	catch (var1 = info) == info
	print(var1 + "\n")
	endtry

	try
	plot_2d_curves("chart 1","test nan inf","x","y","black","true","curve 1","white","circle",1,"white","solid",1,"t",-inf,-inf,1,"t","t")
	catch (var1 = info) == info
	print(var1 + "\n")
	endtry

	try
	plot_2d_curves("chart 1","test nan inf","x","y","black","true","curve 1","white","circle",1,"white","solid",1,"t",nan,10,1,"t","t")
	catch (var1 = info) == info
	print(var1 + "\n")
	endtry

	try
	plot_3d_surfaces("chart 1","a chart","x","y","z","cv1",false,"red","red",null,"cyan","cyan",null,"u",1,10,1,"v",2,19,1,"sin(u)","cos(v)","u/v")
	catch (var1 = info) == info
	print(var1 + "\n")
	endtry

	try
	plot_3d_surfaces("chart 1","a chart","x","y","z","cv1",false,"red","red",null,"cyan","cyan",null,"u",1,10+inf,1,"v",2,19,1,"sin(u)","cos(v)","u/v")
	catch (var1 = info) == info
	print(var1 + "\n")
	endtry

	try
	plot_3d_surfaces("chart 1","a chart","x","y","z","cv1",false,"red","red",null,"cyan","cyan",null,"u",1,10,1,"v",2,19,1,"sin(u) + inf","cos(v)","u/v")
	catch (var1 = info) == info
	print(var1 + "\n")
	endtry

	try
	plot_3d_surfaces("chart 1","a chart","x","y","z","cv1",false,"red","red",null,"cyan","cyan",null,"u",1,10,1,"v",2,19,1,"sin(u) + nan","cos(v)","u/v")
	catch (var1 = info) == info
	print(var1 + "\n")
	endtry

	try
	plot_3d_surfaces("chart 1","a chart","x","y","z","cv1",false,"red","red",null,"cyan","cyan",null,"u",1,10,1,"v",2,19,1,"sin(u)","cos(v) + inf","u/v")
	catch (var1 = info) == info
	print(var1 + "\n")
	endtry

	try
	plot_3d_surfaces("chart 1","a chart","x","y","z","cv1",false,"red","red",null,"cyan","cyan",null,"u",1,10,1,"v",2,19,1,"sin(u)","cos(v) + nan","u/v")
	catch (var1 = info) == info
	print(var1 + "\n")
	endtry

	try
	plot_3d_surfaces("chart 1","a chart","x","y","z","cv1",false,"red","red",null,"cyan","cyan",null,"u",1,10,1,"v",2,19,1,"sin(u)","cos(v)","u/v + inf")
	catch (var1 = info) == info
	print(var1 + "\n")
	endtry

	try
	plot_3d_surfaces("chart 1","a chart","x","y","z","cv1",false,"red","red",null,"cyan","cyan",null,"u",1,10,1,"v",2,19,1,"sin(u)","cos(v)","u/v + nan")
	catch (var1 = info) == info
	print(var1 + "\n")
	endtry

	try
	plot_polar_curves("chart 1","test nan inf","x","y","black","true","curve 1","white","circle",1,"white","solid",1,"t",1,10,1,"t+inf","t")
	catch (var1 = info) == info
	print(var1 + "\n")
	endtry

	try
	plot_polar_curves("chart 1","test nan inf","x","y","black","true","curve 1","white","circle",1,"white","solid",1,"t",1,10,1,"t+inf","t")
	catch (var1 = info) == info
	print(var1 + "\n")
	endtry

	try
	plot_polar_curves("chart 1","test nan inf","x","y","black","true","curve 1","white","circle",1,"white","solid",1,"t",1,10,1,"t+nan","t")
	catch (var1 = info) == info
	print(var1 + "\n")
	endtry

	try
	plot_polar_curves("chart 1","test nan inf","x","y","black","true","curve 1","white","circle",1,"white","solid",1,"t",1,10,1,"t","t+inf")
	catch (var1 = info) == info
	print(var1 + "\n")
	endtry

	try
	plot_polar_curves("chart 1","test nan inf","x","y","black","true","curve 1","white","circle",1,"white","solid",1,"t",1,10,1,"t","t+nan")
	catch (var1 = info) == info
	print(var1 + "\n")
	endtry

	try
	plot_polar_curves("chart 1","test nan inf","x","y","black","true","curve 1","white","circle",1,"white","solid",1,"t",1,10,1,"t","t")
	catch (var1 = info) == info
	print(var1 + "\n")
	endtry

	try
	plot_polar_curves("chart 1","test nan inf","x","y","black","true","curve 1","white","circle",1,"white","solid",1,"t",-inf,10,1,"t","t")
	catch (var1 = info) == info
	print(var1 + "\n")
	endtry

	try
	plot_polar_curves("chart 1","test nan inf","x","y","black","true","curve 1","white","circle",1,"white","solid",1,"t",inf,10,1,"t","t")
	catch (var1 = info) == info
	print(var1 + "\n")
	endtry

	try
	plot_polar_curves("chart 1","test nan inf","x","y","black","true","curve 1","white","circle",1,"white","solid",1,"t",inf,inf,1,"t","t")
	catch (var1 = info) == info
	print(var1 + "\n")
	endtry

	try
	plot_polar_curves("chart 1","test nan inf","x","y","black","true","curve 1","white","circle",1,"white","solid",1,"t",-inf,-inf,1,"t","t")
	catch (var1 = info) == info
	print(var1 + "\n")
	endtry

	try
	plot_polar_curves("chart 1","test nan inf","x","y","black","true","curve 1","white","circle",1,"white","solid",1,"t",nan,10,1,"t","t")
	catch (var1 = info) == info
	print(var1 + "\n")
	endtry

	try
	plot_expressions("chart expr", "Expr chart", -10, 10, 0, "sin(x) + inf", "cos(y)/lg(y)")
	catch (var1 = info) == info
	print(var1 + "\n")
	endtry

	try
	plot_expressions("chart expr", "Expr chart", -10, 10, 0, "sin(x)", "cos(y)/lg(y) + nan")
	catch (var1 = info) == info
	print(var1 + "\n")
	endtry

	try
	plot_expressions("chart expr", "Expr chart", -10, 10, 0, "y=sin(x)*cos(z) + inf", "x==cos(y)/log(y)", "z+x", "6*exp(y)*x==z")
	catch (var1 = info) == info
	print(var1 + "\n")
	endtry

	try
	plot_expressions("chart expr", "Expr chart", -10, 10, 0, "y=sin(x)*cos(z)", "x==cos(y)/log(y)", "z+x + nan", "6*exp(y)*x==z")
	catch (var1 = info) == info
	print(var1 + "\n")
	endtry

	try
	plot_expressions("chart expr", "Expr chart", -10, 10, 400, "cos(y)/log(y) + inf")
	catch (var1 = info) == info
	print(var1 + "\n")
	endtry

	try
	plot_expressions("chart expr", "Expr chart", -10, 10, 400, "cos(y)/0 + log(y)")
	catch (var1 = info) == info
	print(var1 + "\n")
	endtry

	try
	plot_expressions("chart expr", "Expr chart", -10, inf, 50, "cos(y)/log(z)")
	catch (var1 = info) == info
	print(var1 + "\n")
	endtry

	try
	plot_expressions("chart expr", "Expr chart", nan, 10, 50, "cos(y)/log(z)")
	catch (var1 = info) == info
	print(var1 + "\n")
	endtry

	try
	plot_expressions("chart expr", "Expr chart", -10, 10, inf, "cos(y)/log(z)")
	catch (var1 = info) == info
	print(var1 + "\n")
	endtry

	try
	plot_expressions("chart expr", "Expr chart", -10, 10, nan, "cos(y)/log(z)")
	catch (var1 = info) == info
	print(var1 + "\n")
	endtry
Endf

function plot_const_x_y_z()
	plot_3d_surfaces("chart1","chartI","x","y","z","cv",false,"blue","red",null,"yellow","green",null,"u",-10,10,0,"v",1,20,0,"u*v","2.8667","u+v")
	plot_3d_surfaces("chart1","chartI","x","y","z","cv",false,"blue","red",null,"yellow","green",null,"u",-10,10,0,"v",1,20,0,"2.8667","u*v","u+v")
	plot_3d_surfaces("chart1","chartI","x","y","z","cv",false,"blue","red",null,"yellow","green",null,"u",-10,10,0,"v",1,20,0,"u*v","u**2+v**2","2.8667")
	plot_3d_surfaces("chart1","chartI","x","y","z","cv",false,"blue","red",null,"yellow","green",null,"u",-10,10,0,"v",1,20,0,"u*v","3.017","2.8667")
	plot_3d_surfaces("chart1","chartI","x","y","z","cv",false,"blue","red",null,"yellow","green",null,"u",-10,10,0,"v",1,20,0,"3.017","u*v","2.8667")
	plot_3d_surfaces("chart1","chartI","x","y","z","cv",false,"blue","red",null,"yellow","green",null,"u",-10,10,0,"v",1,20,0,"3.017","2.8667","u+v")
	plot_3d_surfaces("chart1","chartI","x","y","z","cv",false,"blue","red",null,"yellow","green",null,"u",-10,10,0,"v",1,20,0,"3.017","2.8667","0.98")
	plot_polar_curves("chart A","charA","r","θ","black","true","cv1","white","point",1,"white","solid",1,"t",0,10,1,"2.67","t")
	plot_polar_curves("chart A","charA","r","θ","black","true","cv1","red","point",1,"blue","solid",1,"t",0,10,0,"2.67","t")
	plot_polar_curves("chart A","charA","r","θ","black","true","cv1","red","point",1,"blue","solid",1,"t",0,10,0,"t","2.67")
	plot_polar_curves("chart A","charA","r","θ","black","true","cv1","red","point",1,"blue","solid",1,"t",0,10,0,"3.14","2.67")
	plot_2d_curves("chart A","charA","r","θ","black","true","cv1","white","point",1,"white","solid",1,"t",0,10,1,"2.67","t")
	plot_2d_curves("chart A","charA","r","θ","black","true","cv1","red","point",1,"blue","solid",1,"t",0,10,0,"2.67","t")
	plot_2d_curves("chart A","charA","r","θ","black","true","cv1","red","point",1,"blue","solid",1,"t",0,10,0,"t","2.67")
	plot_2d_curves("chart A","charA","r","θ","black","true","cv1","red","point",1,"blue","solid",1,"t",0,10,0,"3.14","2.67")
endf

function plot3d_multi_cvs()	
	plot3D("chartI", "first chart", "x", "y", "z", "Curve1", true, "red", -0.5, "green", null, 0, pi, pi/8, -pi/2, pi/2, 0, "sin(u)*cos(v)", "sin(u)*sin(v)", "cos(u)", "Curve2", true, "cyan", -0.5, "yellow", null, 0, pi, pi/8, -pi/2, pi/2, 0, "sin(u)*cos(v)+0.1", "sin(u)*sin(v)", "cos(u)", "Curve3", true, "dkgray", -0.5, "blue", null, 0, pi, pi/8, -pi/2, pi/2, 0, "sin(u)*cos(v)", "sin(u)*sin(v)-0.1", "cos(u)", "Curve4", true, "ltgray", -0.5, "magenta", null, 0, pi, pi/8, -pi/2, pi/2, 0, "sin(u)*cos(v)", "sin(u)*sin(v)", "cos(u)+0.1", "Curve5", true, "white", -0.5, "gray", null, 0, pi, pi/8, -pi/2, pi/2, 0, "sin(u)*cos(v)-0.1", "sin(u)*sin(v)", "cos(u)", "Curve6", true, "blue", -0.5, "green", null, 0, pi, pi/8, -pi/2, pi/2, 0, "sin(u)*cos(v)", "sin(u)*sin(v)+0.1", "cos(u)", "Curve7", true, "magenta", -0.5, "yellow", null, 0, pi, pi/8, -pi/2, pi/2, 0, "sin(u)*cos(v)", "sin(u)*sin(v)", "cos(u)-0.1", "Curve8", true, "yellow", -0.5, "cyan", null, 0, pi, pi/8, -pi/2, pi/2, 0, "sin(u)*cos(v)-0.2", "sin(u)*sin(v)", "cos(u)")
		
	plot3D("chartI", "first chart", "x", "y", "z", "Curve1", true, "red", -0.5, "green", null, 0, pi, pi/8, -pi/2, pi/2, 0, "sin(u)*cos(v)", "sin(u)*sin(v)", "cos(u)", "Curve2", true, "cyan", -0.5, "yellow", null, 0, pi, pi/8, -pi/2, pi/2, 0, "sin(u)*cos(v)+0.1", "sin(u)*sin(v)", "cos(u)", "Curve3", true, "dkgray", -0.5, "blue", null, 0, pi, pi/8, -pi/2, pi/2, 0, "sin(u)*cos(v)", "sin(u)*sin(v)-0.1", "cos(u)", "Curve4", true, "ltgray", -0.5, "magenta", null, 0, pi, pi/8, -pi/2, pi/2, 0, "sin(u)*cos(v)", "sin(u)*sin(v)", "cos(u)+0.1", "Curve5", true, "white", -0.5, "gray", null, 0, pi, pi/8, -pi/2, pi/2, 0, "sin(u)*cos(v)-0.1", "sin(u)*sin(v)", "cos(u)", "Curve6", true, "blue", -0.5, "green", null, 0, pi, pi/8, -pi/2, pi/2, 0, "sin(u)*cos(v)", "sin(u)*sin(v)+0.1", "cos(u)", "Curve7", true, "magenta", -0.5, "yellow", null, 0, pi, pi/8, -pi/2, pi/2, 0, "sin(u)*cos(v)", "sin(u)*sin(v)", "cos(u)-0.1")
		
	plot3D("chartI", "first chart", "x", "y", "z", "Curve1", true, "red", -0.5, "green", null, 0, pi, pi/8, -pi/2, pi/2, 0, "sin(u)*cos(v)", "sin(u)*sin(v)", "cos(u)", "Curve2", true, "cyan", -0.5, "yellow", null, 0, pi, pi/8, -pi/2, pi/2, 0, "sin(u)*cos(v)+0.1", "sin(u)*sin(v)", "cos(u)", "Curve3", true, "dkgray", -0.5, "blue", null, 0, pi, pi/8, -pi/2, pi/2, 0, "sin(u)*cos(v)", "sin(u)*sin(v)-0.1", "cos(u)", "Curve4", true, "ltgray", -0.5, "magenta", null, 0, pi, pi/8, -pi/2, pi/2, 0, "sin(u)*cos(v)", "sin(u)*sin(v)", "cos(u)+0.1", "Curve5", true, "white", -0.5, "gray", null, 0, pi, pi/8, -pi/2, pi/2, 0, "sin(u)*cos(v)-0.1", "sin(u)*sin(v)", "cos(u)", "Curve6", true, "blue", -0.5, "green", null, 0, pi, pi/8, -pi/2, pi/2, 0, "sin(u)*cos(v)", "sin(u)*sin(v)+0.1", "cos(u)")
		
	plot3D("chartI", "first chart", "x", "y", "z", "Curve1", true, "red", -0.5, "green", null, 0, pi, pi/8, -pi/2, pi/2, 0, "sin(u)*cos(v)", "sin(u)*sin(v)", "cos(u)", "Curve2", true, "cyan", -0.5, "yellow", null, 0, pi, pi/8, -pi/2, pi/2, 0, "sin(u)*cos(v)+0.1", "sin(u)*sin(v)", "cos(u)", "Curve3", true, "dkgray", -0.5, "blue", null, 0, pi, pi/8, -pi/2, pi/2, 0, "sin(u)*cos(v)", "sin(u)*sin(v)-0.1", "cos(u)", "Curve4", true, "ltgray", -0.5, "magenta", null, 0, pi, pi/8, -pi/2, pi/2, 0, "sin(u)*cos(v)", "sin(u)*sin(v)", "cos(u)+0.1", "Curve5", true, "white", -0.5, "gray", null, 0, pi, pi/8, -pi/2, pi/2, 0, "sin(u)*cos(v)-0.1", "sin(u)*sin(v)", "cos(u)")
		
	plot3D("chartI", "first chart", "x", "y", "z", "Curve1", true, "red", -0.5, "green", null, 0, pi, pi/8, -pi/2, pi/2, 0, "sin(u)*cos(v)", "sin(u)*sin(v)", "cos(u)", "Curve2", true, "cyan", -0.5, "yellow", null, 0, pi, pi/8, -pi/2, pi/2, 0, "sin(u)*cos(v)+0.1", "sin(u)*sin(v)", "cos(u)", "Curve3", true, "dkgray", -0.5, "blue", null, 0, pi, pi/8, -pi/2, pi/2, 0, "sin(u)*cos(v)", "sin(u)*sin(v)-0.1", "cos(u)", "Curve4", true, "ltgray", -0.5, "magenta", null, 0, pi, pi/8, -pi/2, pi/2, 0, "sin(u)*cos(v)", "sin(u)*sin(v)", "cos(u)+0.1")
		
	plot3D("chartI", "first chart", "x", "y", "z", "Curve1", true, "red", -0.5, "green", null, 0, pi, pi/8, -pi/2, pi/2, 0, "sin(u)*cos(v)", "sin(u)*sin(v)", "cos(u)", "Curve2", true, "cyan", -0.5, "yellow", null, 0, pi, pi/8, -pi/2, pi/2, 0, "sin(u)*cos(v)+0.1", "sin(u)*sin(v)", "cos(u)", "Curve3", true, "dkgray", -0.5, "blue", null, 0, pi, pi/8, -pi/2, pi/2, 0, "sin(u)*cos(v)", "sin(u)*sin(v)-0.1", "cos(u)")
		
	plot3D("chartI", "first chart", "x", "y", "z", "Curve1", true, "red", -0.5, "green", null, 0, pi, pi/8, -pi/2, pi/2, 0, "sin(u)*cos(v)", "sin(u)*sin(v)", "cos(u)", "Curve2", true, "cyan", -0.5, "yellow", null, 0, pi, pi/8, -pi/2, pi/2, 0, "sin(u)*cos(v)+0.1", "sin(u)*sin(v)", "cos(u)")
		
	plot3D("chartI", "first chart", "x", "y", "z", "Curve1", true, "red", -0.5, "green", null, 0, pi, pi/8, -pi/2, pi/2, 0, "sin(u)*cos(v)", "sin(u)*sin(v)", "cos(u)")
endf

function plot_2d_data_multi_cvs()
	plot_2d_data([5.5, -7, 8.993, 2.788])

	plot_2d_data([2.47, 3.53, 4.88, 9.42], [8.49, 6.76, 5.31, 0.88])

	plot_2d_data([2.47, 3.53, 4.88, 9.42], [8.49, 6.76, 5.31, 0.88], [-9, -7, -5, -3, -1], [28, 42, 33, 16, 7])
		
	plot_2d_data([2.47, 3.53, 4.88, 9.42], [8.49, 6.76, 5.31, 0.88], [-9, -7, -5, -3, -1], [28, 42, 33, 16, 7], [2.47, 3.53, 4.88, 9.42]*0.5, [8.49, 6.76, 5.31, 0.88])

	plot_2d_data([2.47, 3.53, 4.88, 9.42], [8.49, 6.76, 5.31, 0.88], [-9, -7, -5, -3, -1], [28, 42, 33, 16, 7], [2.47, 3.53, 4.88, 9.42]*0.5, [8.49, 6.76, 5.31, 0.88], [-9, -7, -5, -3, -1]*0.5, [28, 42, 33, 16, 7])

	plot_2d_data([2.47, 3.53, 4.88, 9.42], [8.49, 6.76, 5.31, 0.88], [-9, -7, -5, -3, -1], [28, 42, 33, 16, 7], [2.47, 3.53, 4.88, 9.42]*0.5, [8.49, 6.76, 5.31, 0.88], [-9, -7, -5, -3, -1]*0.5, [28, 42, 33, 16, 7], [28, 42, 33, 16, 7], [2.47, 3.53, 4.88, 9.42, 7.61]*0.8)

	plot_2d_data([2.47, 3.53, 4.88, 9.42], [8.49, 6.76, 5.31, 0.88], [-9, -7, -5, -3, -1], [28, 42, 33, 16, 7], [2.47, 3.53, 4.88, 9.42]*0.5, [8.49, 6.76, 5.31, 0.88], [-9, -7, -5, -3, -1]*0.5, [28, 42, 33, 16, 7], [28, 42, 33, 16, 7], [2.47, 3.53, 4.88, 9.42, 7.61]*0.8, [-9, -7, -5, -3, -1]*0.8, [28, 42, 33, 16, 7])

	plot_2d_data([2.47, 3.53, 4.88, 9.42], [8.49, 6.76, 5.31, 0.88], [-9, -7, -5, -3, -1], [28, 42, 33, 16, 7], [2.47, 3.53, 4.88, 9.42]*0.5, [8.49, 6.76, 5.31, 0.88], [-9, -7, -5, -3, -1]*0.5, [28, 42, 33, 16, 7], [28, 42, 33, 16, 7], [2.47, 3.53, 4.88, 9.42, 7.61]*0.8, [-9, -7, -5, -3, -1]*0.8, [28, 42, 33, 16, 7], [2.47, 3.53, 4.88, 9.42]*1.2, [8.49, 6.76, 5.31, 0.88])

	plot_2d_data([2.47, 3.53, 4.88, 9.42], [8.49, 6.76, 5.31, 0.88], [-9, -7, -5, -3, -1], [28, 42, 33, 16, 7], [2.47, 3.53, 4.88, 9.42]*0.5, [8.49, 6.76, 5.31, 0.88], [-9, -7, -5, -3, -1]*0.5, [28, 42, 33, 16, 7], [28, 42, 33, 16, 7], [2.47, 3.53, 4.88, 9.42, 7.61]*0.8, [-9, -7, -5, -3, -1]*0.8, [28, 42, 33, 16, 7], [2.47, 3.53, 4.88, 9.42]*1.2, [8.49, 6.76, 5.31, 0.88], [-9, -7, -5, -3, -1]*1.2, [28, 42, 33, 16, 7])
endf

function plot_3d_data_multi_cvs()
	plot_3d_data([[2.47, 3.53, 4.88, 9.42], [8.49, 6.76, 5.31, 0.88], [-9, -7, -5, -3, -1]])	

	plot_3d_data([1,2,3],[4,5,6,8],[[3,7,2],[5,8,9],[2,6,3],[7,4,4]])

	plot_3d_data([1,2,3],[4,5,6,8],[[3,7,2],[5,8,9],[2,6,3],[7,4,4]],[8,7,4,8],[2,1],[[9,3,2,6],[4,5,3,7]])

	plot_3d_data([1,2,3],[4,5,6,8],[[3,7,2],[5,8,9],[2,6,3],[7,4,4]],[8,7,4,8],[2,1],[[9,3,2,6],[4,5,3,7]],[1,2,3],[4,5,6,8],[[3,7,2],[5,8,9],[2,6,3],[7,4,4]]*0.3)

	plot_3d_data([1,2,3],[4,5,6,8],[[3,7,2],[5,8,9],[2,6,3],[7,4,4]],[8,7,4,8],[2,1],[[9,3,2,6],[4,5,3,7]],[1,2,3],[4,5,6,8],[[3,7,2],[5,8,9],[2,6,3],[7,4,4]]*0.3,[8,7,4,8],[2,1],[[9,3,2,6],[4,5,3,7]]*0.3)

	plot_3d_data([1,2,3],[4,5,6,8],[[3,7,2],[5,8,9],[2,6,3],[7,4,4]],[8,7,4,8],[2,1],[[9,3,2,6],[4,5,3,7]],[1,2,3],[4,5,6,8],[[3,7,2],[5,8,9],[2,6,3],[7,4,4]]*0.3,[8,7,4,8],[2,1],[[9,3,2,6],[4,5,3,7]]*0.3,[1,2,3],[4,5,6,8],[[3,7,2],[5,8,9],[2,6,3],[7,4,4]]*0.7)

	plot_3d_data([1,2,3],[4,5,6,8],[[3,7,2],[5,8,9],[2,6,3],[7,4,4]],[8,7,4,8],[2,1],[[9,3,2,6],[4,5,3,7]],[1,2,3],[4,5,6,8],[[3,7,2],[5,8,9],[2,6,3],[7,4,4]]*0.3,[8,7,4,8],[2,1],[[9,3,2,6],[4,5,3,7]]*0.3,[1,2,3],[4,5,6,8],[[3,7,2],[5,8,9],[2,6,3],[7,4,4]]*0.7,[8,7,4,8],[2,1],[[9,3,2,6],[4,5,3,7]]*0.7)

	plot_3d_data([1,2,3],[4,5,6,8],[[3,7,2],[5,8,9],[2,6,3],[7,4,4]],[8,7,4,8],[2,1],[[9,3,2,6],[4,5,3,7]],[1,2,3],[4,5,6,8],[[3,7,2],[5,8,9],[2,6,3],[7,4,4]]*0.3,[8,7,4,8],[2,1],[[9,3,2,6],[4,5,3,7]]*0.3,[1,2,3],[4,5,6,8],[[3,7,2],[5,8,9],[2,6,3],[7,4,4]]*0.7,[8,7,4,8],[2,1],[[9,3,2,6],[4,5,3,7]]*0.7,[1,2,3],[4,5,6,8],[[3,7,2],[5,8,9],[2,6,3],[7,4,4]]*1.3)

	plot_3d_data([1,2,3],[4,5,6,8],[[3,7,2],[5,8,9],[2,6,3],[7,4,4]],[8,7,4,8],[2,1],[[9,3,2,6],[4,5,3,7]],[1,2,3],[4,5,6,8],[[3,7,2],[5,8,9],[2,6,3],[7,4,4]]*0.3,[8,7,4,8],[2,1],[[9,3,2,6],[4,5,3,7]]*0.3,[1,2,3],[4,5,6,8],[[3,7,2],[5,8,9],[2,6,3],[7,4,4]]*0.7,[8,7,4,8],[2,1],[[9,3,2,6],[4,5,3,7]]*0.7,[1,2,3],[4,5,6,8],[[3,7,2],[5,8,9],[2,6,3],[7,4,4]]*1.3,[8,7,4,8],[2,1],[[9,3,2,6],[4,5,3,7]]*1.3)
endf

function plot_exprs_multi_cvs()
	plot_exprs("x**2*e**(-x**2)")
	
	plot_exprs("4*x+sin(y)")

	plot_exprs("4*x+sin(y)", "z=x/y")

	plot_exprs("4*x+sin(y)", "z=x/y", "x*lg(x)/log2(z)==y")

	plot_exprs("4*x+sin(y)", "z=x/y", "x*lg(x)/log2(z)==y", "z=(x**2+y**2)**0.5")

	plot_exprs("4*x+sin(y)", "z=x/y", "x*lg(x)/log2(z)==y", "z=(x**2+y**2)**0.5", "1.5*(4*x+sin(y))")

	plot_exprs("4*x+sin(y)", "z=x/y", "x*lg(x)/log2(z)==y", "z=(x**2+y**2)**0.5", "1.5*(4*x+sin(y))", "z=1.5*x/y")

	plot_exprs("4*x+sin(y)", "z=x/y", "x*lg(x)/log2(z)==y", "z=(x**2+y**2)**0.5", "1.5*(4*x+sin(y))", "z=1.5*x/y", "x*lg(x)/log2(z)*1.5==y")

	plot_exprs("4*x+sin(y)", "z=x/y", "x*lg(x)/log2(z)==y", "z=(x**2+y**2)**0.5", "1.5*(4*x+sin(y))", "z=1.5*x/y", "x*lg(x)/log2(z)*1.5==y", "z=(x**2+y**2)**0.3")

	plot_exprs("sin(y)")

	plot_exprs("sin(y)", "1/x")

	plot_exprs("sin(y)", "1/x", "x*lg(x)/log2(x)==y")

	plot_exprs("sin(y)", "1/x", "x*lg(x)/log2(x)==y", "x**2 + 2*x - 3")

	plot_exprs("sin(y)", "1/x", "x*lg(x)/log2(x)==y", "x**2 + 2*x - 3", "sin(y)*1.5")

	plot_exprs("sin(y)", "1/x", "x*lg(x)/log2(x)==y", "x**2 + 2*x - 3", "sin(y)*1.5", "1.5/x")

	plot_exprs("sin(y)", "1/x", "x*lg(x)/log2(x)==y", "x**2 + 2*x - 3", "sin(y)*1.5", "1.5/x", "x*lg(x)/log2(x)*1.5==y")

	plot_exprs("sin(y)", "1/x", "x*lg(x)/log2(x)==y", "x**2 + 2*x - 3", "sin(y)*1.5", "1.5/x", "x*lg(x)/log2(x)*1.5==y","x**2 + 2*x - 4.5")

	plot_exprs("sin(β)")

	plot_exprs("sin(y)", "1/β")

	plot_exprs("sin(y)", "1/β", "β*lg(β)/log2(β)==y")

	plot_exprs("sin(y)", "1/β", "β*lg(β)/log2(β)==y", "β**2 + 2*β - 3")

	plot_exprs("sin(y)", "1/β", "β*lg(β)/log2(β)==y", "β**2 + 2*β - 3", "sin(y)*1.5")

	plot_exprs("sin(y)", "1/β", "β*lg(β)/log2(β)==y", "β**2 + 2*β - 3", "sin(y)*1.5", "1.5/β")

	plot_exprs("sin(y)", "1/β", "β*lg(β)/log2(β)==y", "β**2 + 2*β - 3", "sin(y)*1.5", "1.5/β", "β*lg(β)/log2(β)*1.5==y")

	plot_exprs("sin(y)", "1/β", "β*lg(β)/log2(β)==y", "β**2 + 2*β - 3", "sin(y)*1.5", "1.5/β", "β*lg(β)/log2(β)*1.5==y", "β**2 + 2*β - 4.5")
endf

function plot_multi_xyz_multi_cvs()
	plot_multi_xyz("chartII", "chart_type:multiXYZ;chart_title:This is a graph;x_title:x;x_min:-5;x_max:5;x_labels:6;y_title:Y;y_min:-6;y_max:6;y_labels:3;z_title:Z;z_min:-9;z_max:3;z_labels:4", "curve_label:cv1;min_color:blue;min_color_1:green;max_color:yellow;max_color_1:red", [[-4, -2, 0, 2, 4],[-4, -2, 0, 2, 4],[-4, -2, 0, 2, 4]], [[-5, -5, -5, -5, -5], [0, 0, 0, 0, 0], [-5, -5, -5, -5, -5]], [[-2.71, -2.65, -2.08, -1.82, -1.77], [-2.29, -2.36, -1.88, -1.45, -1.01], [-1.74, -1.49, -0.83, -0.17, 0.44]])

	plot_multi_xyz("chartII", "chart_type:multiXYZ;chart_title:This is a graph;x_title:x;x_min:-5;x_max:5;x_labels:6;y_title:Y;y_min:-6;y_max:6;y_labels:3;z_title:Z;z_min:-9;z_max:3;z_labels:4", "curve_label:cv1;min_color:blue;min_color_1:green;max_color:yellow;max_color_1:red", [[-4, -2, 0, 2, 4],[-4, -2, 0, 2, 4],[-4, -2, 0, 2, 4]], [[-5, -5, -5, -5, -5], [0, 0, 0, 0, 0], [-5, -5, -5, -5, -5]], [[-2.71, -2.65, -2.08, -1.82, -1.77], [-2.29, -2.36, -1.88, -1.45, -1.01], [-1.74, -1.49, -0.83, -0.17, 0.44]], "curve_label:cv2;min_color:blue;min_color_1:yellow;max_color:yellow;max_color_1:blue", [[-4, -2, 0, 2, 4],[-4, -2, 0, 2, 4],[-4, -2, 0, 2, 4]], [[-5, -5, -5, -5, -5], [0, 0, 0, 0, 0], [-5, -5, -5, -5, -5]], [[-2.71, -2.65, -2.08, -1.82, -1.77], [-2.29, -2.36, -1.88, -1.45, -1.01], [-1.74, -1.49, -0.83, -0.17, 0.44]]*2)

	plot_multi_xyz("chartII", "chart_type:multiXYZ;chart_title:This is a graph;x_title:x;x_min:-5;x_max:5;x_labels:6;y_title:Y;y_min:-6;y_max:6;y_labels:3;z_title:Z;z_min:-9;z_max:3;z_labels:4", "curve_label:cv1;min_color:blue;min_color_1:green;max_color:yellow;max_color_1:red", [[-4, -2, 0, 2, 4],[-4, -2, 0, 2, 4],[-4, -2, 0, 2, 4]], [[-5, -5, -5, -5, -5], [0, 0, 0, 0, 0], [-5, -5, -5, -5, -5]], [[-2.71, -2.65, -2.08, -1.82, -1.77], [-2.29, -2.36, -1.88, -1.45, -1.01], [-1.74, -1.49, -0.83, -0.17, 0.44]], "curve_label:cv2;min_color:blue;min_color_1:yellow;max_color:yellow;max_color_1:blue", [[-4, -2, 0, 2, 4],[-4, -2, 0, 2, 4],[-4, -2, 0, 2, 4]], [[-5, -5, -5, -5, -5], [0, 0, 0, 0, 0], [-5, -5, -5, -5, -5]], [[-2.71, -2.65, -2.08, -1.82, -1.77], [-2.29, -2.36, -1.88, -1.45, -1.01], [-1.74, -1.49, -0.83, -0.17, 0.44]]*2, "curve_label:cv3;min_color:blue;min_color_1:cyan;max_color:yellow;max_color_1:magenta", [[-4, -2, 0, 2, 4],[-4, -2, 0, 2, 4],[-4, -2, 0, 2, 4]], [[-5, -5, -5, -5, -5], [0, 0, 0, 0, 0], [-5, -5, -5, -5, -5]], [[-2.71, -2.65, -2.08, -1.82, -1.77], [-2.29, -2.36, -1.88, -1.45, -1.01], [-1.74, -1.49, -0.83, -0.17, 0.44]]*3)

	plot_multi_xyz("chartII", "chart_type:multiXYZ;chart_title:This is a graph;x_title:x;x_min:-5;x_max:5;x_labels:6;y_title:Y;y_min:-6;y_max:6;y_labels:3;z_title:Z;z_min:-9;z_max:3;z_labels:4", "curve_label:cv1;min_color:blue;min_color_1:green;max_color:yellow;max_color_1:red", [[-4, -2, 0, 2, 4],[-4, -2, 0, 2, 4],[-4, -2, 0, 2, 4]], [[-5, -5, -5, -5, -5], [0, 0, 0, 0, 0], [-5, -5, -5, -5, -5]], [[-2.71, -2.65, -2.08, -1.82, -1.77], [-2.29, -2.36, -1.88, -1.45, -1.01], [-1.74, -1.49, -0.83, -0.17, 0.44]], "curve_label:cv2;min_color:blue;min_color_1:yellow;max_color:yellow;max_color_1:blue", [[-4, -2, 0, 2, 4],[-4, -2, 0, 2, 4],[-4, -2, 0, 2, 4]], [[-5, -5, -5, -5, -5], [0, 0, 0, 0, 0], [-5, -5, -5, -5, -5]], [[-2.71, -2.65, -2.08, -1.82, -1.77], [-2.29, -2.36, -1.88, -1.45, -1.01], [-1.74, -1.49, -0.83, -0.17, 0.44]]*1.5, "curve_label:cv3;min_color:blue;min_color_1:cyan;max_color:yellow;max_color_1:magenta", [[-4, -2, 0, 2, 4],[-4, -2, 0, 2, 4],[-4, -2, 0, 2, 4]], [[-5, -5, -5, -5, -5], [0, 0, 0, 0, 0], [-5, -5, -5, -5, -5]], [[-2.71, -2.65, -2.08, -1.82, -1.77], [-2.29, -2.36, -1.88, -1.45, -1.01], [-1.74, -1.49, -0.83, -0.17, 0.44]]*2.5, "curve_label:cv4;min_color:blue;min_color_1:white;max_color:dkgray;max_color_1:red", [[-4, -2, 0, 2, 4],[-4, -2, 0, 2, 4],[-4, -2, 0, 2, 4]], [[-5, -5, -5, -5, -5], [0, 0, 0, 0, 0], [-5, -5, -5, -5, -5]], [[-2.71, -2.65, -2.08, -1.82, -1.77], [-2.29, -2.36, -1.88, -1.45, -1.01], [-1.74, -1.49, -0.83, -0.17, 0.44]]*3)

	plot_multi_xyz("chartII", "chart_type:multiXYZ;chart_title:This is a graph;x_title:x;x_min:-5;x_max:5;x_labels:6;y_title:Y;y_min:-6;y_max:6;y_labels:3;z_title:Z;z_min:-9;z_max:3;z_labels:4", "curve_label:cv1;min_color:blue;min_color_1:green;max_color:yellow;max_color_1:red", [[-4, -2, 0, 2, 4],[-4, -2, 0, 2, 4],[-4, -2, 0, 2, 4]], [[-5, -5, -5, -5, -5], [0, 0, 0, 0, 0], [-5, -5, -5, -5, -5]], [[-2.71, -2.65, -2.08, -1.82, -1.77], [-2.29, -2.36, -1.88, -1.45, -1.01], [-1.74, -1.49, -0.83, -0.17, 0.44]], "curve_label:cv2;min_color:blue;min_color_1:yellow;max_color:yellow;max_color_1:blue", [[-4, -2, 0, 2, 4],[-4, -2, 0, 2, 4],[-4, -2, 0, 2, 4]], [[-5, -5, -5, -5, -5], [0, 0, 0, 0, 0], [-5, -5, -5, -5, -5]], [[-2.71, -2.65, -2.08, -1.82, -1.77], [-2.29, -2.36, -1.88, -1.45, -1.01], [-1.74, -1.49, -0.83, -0.17, 0.44]]*1.5, "curve_label:cv3;min_color:blue;min_color_1:cyan;max_color:yellow;max_color_1:magenta", [[-4, -2, 0, 2, 4],[-4, -2, 0, 2, 4],[-4, -2, 0, 2, 4]], [[-5, -5, -5, -5, -5], [0, 0, 0, 0, 0], [-5, -5, -5, -5, -5]], [[-2.71, -2.65, -2.08, -1.82, -1.77], [-2.29, -2.36, -1.88, -1.45, -1.01], [-1.74, -1.49, -0.83, -0.17, 0.44]]*2, "curve_label:cv4;min_color:blue;min_color_1:white;max_color:yellow;max_color_1:red", [[-4, -2, 0, 2, 4],[-4, -2, 0, 2, 4],[-4, -2, 0, 2, 4]], [[-5, -5, -5, -5, -5], [0, 0, 0, 0, 0], [-5, -5, -5, -5, -5]], [[-2.71, -2.65, -2.08, -1.82, -1.77], [-2.29, -2.36, -1.88, -1.45, -1.01], [-1.74, -1.49, -0.83, -0.17, 0.44]]*2.5, "curve_label:cv5;min_color:ltgray;min_color_1:green;max_color:white;max_color_1:gray", [[-4, -2, 0, 2, 4],[-4, -2, 0, 2, 4],[-4, -2, 0, 2, 4]], [[-5, -5, -5, -5, -5], [0, 0, 0, 0, 0], [-5, -5, -5, -5, -5]], [[-2.71, -2.65, -2.08, -1.82, -1.77], [-2.29, -2.36, -1.88, -1.45, -1.01], [-1.74, -1.49, -0.83, -0.17, 0.44]]*3)

	plot_multi_xyz("chartII", "chart_type:multiXYZ;chart_title:This is a graph;x_title:x;x_min:-5;x_max:5;x_labels:6;y_title:Y;y_min:-6;y_max:6;y_labels:3;z_title:Z;z_min:-9;z_max:3;z_labels:4", "curve_label:cv1;min_color:blue;min_color_1:green;max_color:yellow;max_color_1:red", [[-4, -2, 0, 2, 4],[-4, -2, 0, 2, 4],[-4, -2, 0, 2, 4]], [[-5, -5, -5, -5, -5], [0, 0, 0, 0, 0], [-5, -5, -5, -5, -5]], [[-2.71, -2.65, -2.08, -1.82, -1.77], [-2.29, -2.36, -1.88, -1.45, -1.01], [-1.74, -1.49, -0.83, -0.17, 0.44]], "curve_label:cv2;min_color:blue;min_color_1:yellow;max_color:yellow;max_color_1:blue", [[-4, -2, 0, 2, 4],[-4, -2, 0, 2, 4],[-4, -2, 0, 2, 4]], [[-5, -5, -5, -5, -5], [0, 0, 0, 0, 0], [-5, -5, -5, -5, -5]], [[-2.71, -2.65, -2.08, -1.82, -1.77], [-2.29, -2.36, -1.88, -1.45, -1.01], [-1.74, -1.49, -0.83, -0.17, 0.44]]*0.8, "curve_label:cv3;min_color:blue;min_color_1:cyan;max_color:yellow;max_color_1:magenta", [[-4, -2, 0, 2, 4],[-4, -2, 0, 2, 4],[-4, -2, 0, 2, 4]], [[-5, -5, -5, -5, -5], [0, 0, 0, 0, 0], [-5, -5, -5, -5, -5]], [[-2.71, -2.65, -2.08, -1.82, -1.77], [-2.29, -2.36, -1.88, -1.45, -1.01], [-1.74, -1.49, -0.83, -0.17, 0.44]]*1.5, "curve_label:cv4;min_color:blue;min_color_1:white;max_color:yellow;max_color_1:red", [[-4, -2, 0, 2, 4],[-4, -2, 0, 2, 4],[-4, -2, 0, 2, 4]], [[-5, -5, -5, -5, -5], [0, 0, 0, 0, 0], [-5, -5, -5, -5, -5]], [[-2.71, -2.65, -2.08, -1.82, -1.77], [-2.29, -2.36, -1.88, -1.45, -1.01], [-1.74, -1.49, -0.83, -0.17, 0.44]]*2, "curve_label:cv5;min_color:blue;min_color_1:green;max_color:yellow;max_color_1:gray", [[-4, -2, 0, 2, 4],[-4, -2, 0, 2, 4],[-4, -2, 0, 2, 4]], [[-5, -5, -5, -5, -5], [0, 0, 0, 0, 0], [-5, -5, -5, -5, -5]], [[-2.71, -2.65, -2.08, -1.82, -1.77], [-2.29, -2.36, -1.88, -1.45, -1.01], [-1.74, -1.49, -0.83, -0.17, 0.44]]*2.5, "curve_label:cv6;min_color:green;min_color_1:blue;max_color:magenta;max_color_1:ltgray", [[-4, -2, 0, 2, 4],[-4, -2, 0, 2, 4],[-4, -2, 0, 2, 4]], [[-5, -5, -5, -5, -5], [0, 0, 0, 0, 0], [-5, -5, -5, -5, -5]], [[-2.71, -2.65, -2.08, -1.82, -1.77], [-2.29, -2.36, -1.88, -1.45, -1.01], [-1.74, -1.49, -0.83, -0.17, 0.44]]*3)

	plot_multi_xyz("chartII", "chart_type:multiXYZ;chart_title:This is a graph;x_title:x;x_min:-5;x_max:5;x_labels:6;y_title:Y;y_min:-6;y_max:6;y_labels:3;z_title:Z;z_min:-9;z_max:3;z_labels:4", "curve_label:cv1;min_color:blue;min_color_1:green;max_color:yellow;max_color_1:red", [[-4, -2, 0, 2, 4],[-4, -2, 0, 2, 4],[-4, -2, 0, 2, 4]], [[-5, -5, -5, -5, -5], [0, 0, 0, 0, 0], [-5, -5, -5, -5, -5]], [[-2.71, -2.65, -2.08, -1.82, -1.77], [-2.29, -2.36, -1.88, -1.45, -1.01], [-1.74, -1.49, -0.83, -0.17, 0.44]], "curve_label:cv2;min_color:blue;min_color_1:yellow;max_color:yellow;max_color_1:blue", [[-4, -2, 0, 2, 4],[-4, -2, 0, 2, 4],[-4, -2, 0, 2, 4]], [[-5, -5, -5, -5, -5], [0, 0, 0, 0, 0], [-5, -5, -5, -5, -5]], [[-2.71, -2.65, -2.08, -1.82, -1.77], [-2.29, -2.36, -1.88, -1.45, -1.01], [-1.74, -1.49, -0.83, -0.17, 0.44]]*0.5, "curve_label:cv3;min_color:blue;min_color_1:cyan;max_color:yellow;max_color_1:magenta", [[-4, -2, 0, 2, 4],[-4, -2, 0, 2, 4],[-4, -2, 0, 2, 4]], [[-5, -5, -5, -5, -5], [0, 0, 0, 0, 0], [-5, -5, -5, -5, -5]], [[-2.71, -2.65, -2.08, -1.82, -1.77], [-2.29, -2.36, -1.88, -1.45, -1.01], [-1.74, -1.49, -0.83, -0.17, 0.44]]*0.8, "curve_label:cv4;min_color:blue;min_color_1:white;max_color:yellow;max_color_1:red", [[-4, -2, 0, 2, 4],[-4, -2, 0, 2, 4],[-4, -2, 0, 2, 4]], [[-5, -5, -5, -5, -5], [0, 0, 0, 0, 0], [-5, -5, -5, -5, -5]], [[-2.71, -2.65, -2.08, -1.82, -1.77], [-2.29, -2.36, -1.88, -1.45, -1.01], [-1.74, -1.49, -0.83, -0.17, 0.44]]*1.5, "curve_label:cv5;min_color:blue;min_color_1:green;max_color:yellow;max_color_1:gray", [[-4, -2, 0, 2, 4],[-4, -2, 0, 2, 4],[-4, -2, 0, 2, 4]], [[-5, -5, -5, -5, -5], [0, 0, 0, 0, 0], [-5, -5, -5, -5, -5]], [[-2.71, -2.65, -2.08, -1.82, -1.77], [-2.29, -2.36, -1.88, -1.45, -1.01], [-1.74, -1.49, -0.83, -0.17, 0.44]]*2, "curve_label:cv6;min_color:blue;min_color_1:blue;max_color:yellow;max_color_1:ltgray", [[-4, -2, 0, 2, 4],[-4, -2, 0, 2, 4],[-4, -2, 0, 2, 4]], [[-5, -5, -5, -5, -5], [0, 0, 0, 0, 0], [-5, -5, -5, -5, -5]], [[-2.71, -2.65, -2.08, -1.82, -1.77], [-2.29, -2.36, -1.88, -1.45, -1.01], [-1.74, -1.49, -0.83, -0.17, 0.44]]*2.5, "curve_label:cv7;min_color:white;min_color_1:dkgray;max_color:cyan;max_color_1:magenta", [[-4, -2, 0, 2, 4],[-4, -2, 0, 2, 4],[-4, -2, 0, 2, 4]], [[-5, -5, -5, -5, -5], [0, 0, 0, 0, 0], [-5, -5, -5, -5, -5]], [[-2.71, -2.65, -2.08, -1.82, -1.77], [-2.29, -2.36, -1.88, -1.45, -1.01], [-1.74, -1.49, -0.83, -0.17, 0.44]]*3)

	plot_multi_xyz("chartII", "chart_type:multiXYZ;chart_title:This is a graph;x_title:x;x_min:-5;x_max:5;x_labels:6;y_title:Y;y_min:-6;y_max:6;y_labels:3;z_title:Z;z_min:-9;z_max:3;z_labels:4", "curve_label:cv1;min_color:blue;min_color_1:green;max_color:yellow;max_color_1:red", [[-4, -2, 0, 2, 4],[-4, -2, 0, 2, 4],[-4, -2, 0, 2, 4]], [[-5, -5, -5, -5, -5], [0, 0, 0, 0, 0], [-5, -5, -5, -5, -5]], [[-2.71, -2.65, -2.08, -1.82, -1.77], [-2.29, -2.36, -1.88, -1.45, -1.01], [-1.74, -1.49, -0.83, -0.17, 0.44]], "curve_label:cv2;min_color:blue;min_color_1:yellow;max_color:yellow;max_color_1:blue", [[-4, -2, 0, 2, 4],[-4, -2, 0, 2, 4],[-4, -2, 0, 2, 4]], [[-5, -5, -5, -5, -5], [0, 0, 0, 0, 0], [-5, -5, -5, -5, -5]], [[-2.71, -2.65, -2.08, -1.82, -1.77], [-2.29, -2.36, -1.88, -1.45, -1.01], [-1.74, -1.49, -0.83, -0.17, 0.44]]*0.3, "curve_label:cv3;min_color:blue;min_color_1:cyan;max_color:yellow;max_color_1:magenta", [[-4, -2, 0, 2, 4],[-4, -2, 0, 2, 4],[-4, -2, 0, 2, 4]], [[-5, -5, -5, -5, -5], [0, 0, 0, 0, 0], [-5, -5, -5, -5, -5]], [[-2.71, -2.65, -2.08, -1.82, -1.77], [-2.29, -2.36, -1.88, -1.45, -1.01], [-1.74, -1.49, -0.83, -0.17, 0.44]]*0.5, "curve_label:cv4;min_color:blue;min_color_1:white;max_color:yellow;max_color_1:red", [[-4, -2, 0, 2, 4],[-4, -2, 0, 2, 4],[-4, -2, 0, 2, 4]], [[-5, -5, -5, -5, -5], [0, 0, 0, 0, 0], [-5, -5, -5, -5, -5]], [[-2.71, -2.65, -2.08, -1.82, -1.77], [-2.29, -2.36, -1.88, -1.45, -1.01], [-1.74, -1.49, -0.83, -0.17, 0.44]]*0.8, "curve_label:cv5;min_color:blue;min_color_1:green;max_color:yellow;max_color_1:gray", [[-4, -2, 0, 2, 4],[-4, -2, 0, 2, 4],[-4, -2, 0, 2, 4]], [[-5, -5, -5, -5, -5], [0, 0, 0, 0, 0], [-5, -5, -5, -5, -5]], [[-2.71, -2.65, -2.08, -1.82, -1.77], [-2.29, -2.36, -1.88, -1.45, -1.01], [-1.74, -1.49, -0.83, -0.17, 0.44]]*1.5, "curve_label:cv6;min_color:blue;min_color_1:blue;max_color:yellow;max_color_1:ltgray", [[-4, -2, 0, 2, 4],[-4, -2, 0, 2, 4],[-4, -2, 0, 2, 4]], [[-5, -5, -5, -5, -5], [0, 0, 0, 0, 0], [-5, -5, -5, -5, -5]], [[-2.71, -2.65, -2.08, -1.82, -1.77], [-2.29, -2.36, -1.88, -1.45, -1.01], [-1.74, -1.49, -0.83, -0.17, 0.44]]*2, "curve_label:cv7;min_color:blue;min_color_1:dkgray;max_color:yellow;max_color_1:magenta", [[-4, -2, 0, 2, 4],[-4, -2, 0, 2, 4],[-4, -2, 0, 2, 4]], [[-5, -5, -5, -5, -5], [0, 0, 0, 0, 0], [-5, -5, -5, -5, -5]], [[-2.71, -2.65, -2.08, -1.82, -1.77], [-2.29, -2.36, -1.88, -1.45, -1.01], [-1.74, -1.49, -0.83, -0.17, 0.44]]*2.5, "curve_label:cv8;min_color:green;min_color_1:cyan;max_color:red;max_color_1:white", [[-4, -2, 0, 2, 4],[-4, -2, 0, 2, 4],[-4, -2, 0, 2, 4]], [[-5, -5, -5, -5, -5], [0, 0, 0, 0, 0], [-5, -5, -5, -5, -5]], [[-2.71, -2.65, -2.08, -1.82, -1.77], [-2.29, -2.36, -1.88, -1.45, -1.01], [-1.74, -1.49, -0.83, -0.17, 0.44]]*3)

	plot_multi_xyz("chartII", "chart_type:multiXYZ;chart_title:This is a graph;x_title:x;x_min:-5;x_max:5;x_labels:6;y_title:Y;y_min:-6;y_max:6;y_labels:3;z_title:Z;z_min:-9;z_max:3;z_labels:4", "curve_label:cv1;min_color:blue;min_color_1:green;max_color:yellow;max_color_1:red", [[-4, -2, 0, 2, 4],[-4, -2, 0, 2, 4],[-4, -2, 0, 2, 4]], [[-5, -5, -5, -5, -5], [0, 0, 0, 0, 0], [-5, -5, -5, -5, -5]], [[-2.71, -2.65, -2.08, -1.82, -1.77], [-2.29, -2.36, -1.88, -1.45, -1.01], [-1.74, -1.49, -0.83, -0.17, 0.44]], "curve_label:cv2;min_color:blue;min_color_1:yellow;max_color:yellow;max_color_1:blue", [[-4, -2, 0, 2, 4],[-4, -2, 0, 2, 4],[-4, -2, 0, 2, 4]], [[-5, -5, -5, -5, -5], [0, 0, 0, 0, 0], [-5, -5, -5, -5, -5]], [[-2.71, -2.65, -2.08, -1.82, -1.77], [-2.29, -2.36, -1.88, -1.45, -1.01], [-1.74, -1.49, -0.83, -0.17, 0.44]]*0.3, "curve_label:cv3;min_color:blue;min_color_1:cyan;max_color:yellow;max_color_1:magenta", [[-4, -2, 0, 2, 4],[-4, -2, 0, 2, 4],[-4, -2, 0, 2, 4]], [[-5, -5, -5, -5, -5], [0, 0, 0, 0, 0], [-5, -5, -5, -5, -5]], [[-2.71, -2.65, -2.08, -1.82, -1.77], [-2.29, -2.36, -1.88, -1.45, -1.01], [-1.74, -1.49, -0.83, -0.17, 0.44]]*0.5, "curve_label:cv4;min_color:blue;min_color_1:white;max_color:yellow;max_color_1:red", [[-4, -2, 0, 2, 4],[-4, -2, 0, 2, 4],[-4, -2, 0, 2, 4]], [[-5, -5, -5, -5, -5], [0, 0, 0, 0, 0], [-5, -5, -5, -5, -5]], [[-2.71, -2.65, -2.08, -1.82, -1.77], [-2.29, -2.36, -1.88, -1.45, -1.01], [-1.74, -1.49, -0.83, -0.17, 0.44]]*0.8, "curve_label:cv5;min_color:blue;min_color_1:green;max_color:yellow;max_color_1:gray", [[-4, -2, 0, 2, 4],[-4, -2, 0, 2, 4],[-4, -2, 0, 2, 4]], [[-5, -5, -5, -5, -5], [0, 0, 0, 0, 0], [-5, -5, -5, -5, -5]], [[-2.71, -2.65, -2.08, -1.82, -1.77], [-2.29, -2.36, -1.88, -1.45, -1.01], [-1.74, -1.49, -0.83, -0.17, 0.44]]*1.5, "curve_label:cv6;min_color:blue;min_color_1:blue;max_color:yellow;max_color_1:ltgray", [[-4, -2, 0, 2, 4],[-4, -2, 0, 2, 4],[-4, -2, 0, 2, 4]], [[-5, -5, -5, -5, -5], [0, 0, 0, 0, 0], [-5, -5, -5, -5, -5]], [[-2.71, -2.65, -2.08, -1.82, -1.77], [-2.29, -2.36, -1.88, -1.45, -1.01], [-1.74, -1.49, -0.83, -0.17, 0.44]]*2, "curve_label:cv7;min_color:blue;min_color_1:dkgray;max_color:yellow;max_color_1:magenta", [[-4, -2, 0, 2, 4],[-4, -2, 0, 2, 4],[-4, -2, 0, 2, 4]], [[-5, -5, -5, -5, -5], [0, 0, 0, 0, 0], [-5, -5, -5, -5, -5]], [[-2.71, -2.65, -2.08, -1.82, -1.77], [-2.29, -2.36, -1.88, -1.45, -1.01], [-1.74, -1.49, -0.83, -0.17, 0.44]]*2.5, "curve_label:cv8;min_color:green;min_color_1:cyan;max_color:red;max_color_1:white", [[-4, -2, 0, 2, 4],[-4, -2, 0, 2, 4],[-4, -2, 0, 2, 4]], [[-5, -5, -5, -5, -5], [0, 0, 0, 0, 0], [-5, -5, -5, -5, -5]], [[-2.71, -2.65, -2.08, -1.82, -1.77], [-2.29, -2.36, -1.88, -1.45, -1.01], [-1.74, -1.49, -0.83, -0.17, 0.44]]*3, "curve_label:cv9;min_color:ltgray;min_color_1:red;max_color:blue;max_color_1:magenta", [[-4, -2, 0, 2, 4],[-4, -2, 0, 2, 4],[-4, -2, 0, 2, 4]], [[-5, -5, -5, -5, -5], [0, 0, 0, 0, 0], [-5, -5, -5, -5, -5]], [[-2.71, -2.65, -2.08, -1.82, -1.77], [-2.29, -2.36, -1.88, -1.45, -1.01], [-1.74, -1.49, -0.83, -0.17, 0.44]]*3.5)
endf

function plot_polar_data_multi_cvs()
	plot_polar_data([2.47, 3.53, 4.88, 9.42], [8.49, 6.76, 5.31, 0.88])

	plot_polar_data([2.47, 3.53, 4.88, 9.42], [8.49, 6.76, 5.31, 0.88], [-9, -7, -5, -3, -1], [28, 42, 33, 16, 7])
		
	plot_polar_data([2.47, 3.53, 4.88, 9.42], [8.49, 6.76, 5.31, 0.88], [-9, -7, -5, -3, -1], [28, 42, 33, 16, 7], [2.47, 3.53, 4.88, 9.42]*0.5, [8.49, 6.76, 5.31, 0.88])

	plot_polar_data([2.47, 3.53, 4.88, 9.42], [8.49, 6.76, 5.31, 0.88], [-9, -7, -5, -3, -1], [28, 42, 33, 16, 7], [2.47, 3.53, 4.88, 9.42]*0.5, [8.49, 6.76, 5.31, 0.88], [-9, -7, -5, -3, -1]*0.5, [28, 42, 33, 16, 7])

	plot_polar_data([2.47, 3.53, 4.88, 9.42], [8.49, 6.76, 5.31, 0.88], [-9, -7, -5, -3, -1], [28, 42, 33, 16, 7], [2.47, 3.53, 4.88, 9.42]*0.5, [8.49, 6.76, 5.31, 0.88], [-9, -7, -5, -3, -1]*0.5, [28, 42, 33, 16, 7], [28, 42, 33, 16, 7], [2.47, 3.53, 4.88, 9.42, 7.61]*0.8)

	plot_polar_data([2.47, 3.53, 4.88, 9.42], [8.49, 6.76, 5.31, 0.88], [-9, -7, -5, -3, -1], [28, 42, 33, 16, 7], [2.47, 3.53, 4.88, 9.42]*0.5, [8.49, 6.76, 5.31, 0.88], [-9, -7, -5, -3, -1]*0.5, [28, 42, 33, 16, 7], [28, 42, 33, 16, 7], [2.47, 3.53, 4.88, 9.42, 7.61]*0.8, [-9, -7, -5, -3, -1]*0.8, [28, 42, 33, 16, 7])

	plot_polar_data([2.47, 3.53, 4.88, 9.42], [8.49, 6.76, 5.31, 0.88], [-9, -7, -5, -3, -1], [28, 42, 33, 16, 7], [2.47, 3.53, 4.88, 9.42]*0.5, [8.49, 6.76, 5.31, 0.88], [-9, -7, -5, -3, -1]*0.5, [28, 42, 33, 16, 7], [28, 42, 33, 16, 7], [2.47, 3.53, 4.88, 9.42, 7.61]*0.8, [-9, -7, -5, -3, -1]*0.8, [28, 42, 33, 16, 7], [2.47, 3.53, 4.88, 9.42]*1.2, [8.49, 6.76, 5.31, 0.88])

	plot_polar_data([2.47, 3.53, 4.88, 9.42], [8.49, 6.76, 5.31, 0.88], [-9, -7, -5, -3, -1], [28, 42, 33, 16, 7], [2.47, 3.53, 4.88, 9.42]*0.5, [8.49, 6.76, 5.31, 0.88], [-9, -7, -5, -3, -1]*0.5, [28, 42, 33, 16, 7], [28, 42, 33, 16, 7], [2.47, 3.53, 4.88, 9.42, 7.61]*0.8, [-9, -7, -5, -3, -1]*0.8, [28, 42, 33, 16, 7], [2.47, 3.53, 4.88, 9.42]*1.2, [8.49, 6.76, 5.31, 0.88], [-9, -7, -5, -3, -1]*1.2, [28, 42, 33, 16, 7])
endf

function plot_3d_surfaces_multi_cvs()
	plot_3d_surfaces("chart1", "a chart", "x", "y", "z", "cv 1", false, "pink", "gray", null, "green", "yellow", null, "u", -5, 5, 1, "v", -4, 4, 1, "u", "v", "u**2 - v**2")
	plot_3d_surfaces("chart b","b Chart","x axis","y axis","z axis","cv 1",true,"cyan","red",null,"magenta","blue",null,"u",-5,5,0,"v",-4,4,1,"u*v","abs(u)+abs(v)","u**2+v*3","cv2",false,"green","white",null,"red","yellow",null,"u",-7,6,1.2,"v",-4,5,1,"v","u","u/v")
	plot_3d_surfaces("chart b","b Chart","x axis","y axis","z axis","cv 1",true,"cyan","red",null,"magenta","blue",null,"u",-5,5,0,"v",-4,4,1,"u*v","abs(u)+abs(v)","u**2+v*3","cv2",false,"green","white",null,"red","yellow",null,"u",-7,6,1.2,"v",-4,5,1,"v","u","u/v", "cv 3", false, "pink", "gray", null, "green", "yellow", null, "u", -5, 5, 1, "v", -4, 4, 1, "u", "v", "u**2 - v**2")
	plot_3d_surfaces("chart b","b Chart","x axis","y axis","z axis","cv 1",true,"cyan","red",null,"magenta","blue",null,"u",-5,5,0,"v",-4,4,1,"u*v","abs(u)+abs(v)","u**2+v*3","cv2",false,"green","white",null,"red","yellow",null,"u",-7,6,1.2,"v",-4,5,1,"v","u","u/v", "cv 3", false, "pink", "gray", null, "green", "yellow", null, "u", -5, 5, 1, "v", -4, 4, 1, "u", "v", "u**2 - v**2","cv4",true,"blue","ltgray",-2,"white","red",2,"u",-7,8,1,"v",4,29,0,"v/u","v*u","2*u*v/(u**2+v**2)")
	plot_3d_surfaces("chart b","b Chart","x axis","y axis","z axis","cv 1",true,"cyan","red",null,"magenta","blue",null,"u",-5,5,0,"v",-4,4,1,"u*v","abs(u)+abs(v)","u**2+v*3","cv2",false,"green","white",null,"red","yellow",null,"u",-7,6,1.2,"v",-4,5,1,"v","u","u/v", "cv 3", false, "pink", "gray", null, "green", "yellow", null, "u", -5, 5, 1, "v", -4, 4, 1, "u", "v", "u**2 - v**2","cv4",true,"blue","ltgray",-2,"white","red",2,"u",-7,8,1,"v",4,29,0,"v/u","v*u","2*u*v/(u**2+v**2)","cv 5",true,"red","magenta",null,"blue","cyan",null,"u",-5,5,0,"v",-4,4,1,"u*v","abs(u)+abs(v)","(u**2+v*3)*1.5")
	plot_3d_surfaces("chart b","b Chart","x axis","y axis","z axis","cv 1",true,"cyan","red",null,"magenta","blue",null,"u",-5,5,0,"v",-4,4,1,"u*v","abs(u)+abs(v)","u**2+v*3","cv2",false,"green","white",null,"red","yellow",null,"u",-7,6,1.2,"v",-4,5,1,"v","u","u/v", "cv 3", false, "pink", "gray", null, "green", "yellow", null, "u", -5, 5, 1, "v", -4, 4, 1, "u", "v", "u**2 - v**2","cv4",true,"blue","ltgray",-2,"white","red",2,"u",-7,8,1,"v",4,29,0,"v/u","v*u","2*u*v/(u**2+v**2)","cv 5",true,"red","magenta",null,"blue","cyan",null,"u",-5,5,0,"v",-4,4,1,"u*v","abs(u)+abs(v)","(u**2+v*3)*1.5","cv6",false,"white","red",null,"yellow","green",null,"u",-7,6,1.2,"v",-4,5,1,"v","u","u/v*1.5")
	plot_3d_surfaces("chart b","b Chart","x axis","y axis","z axis","cv 1",true,"cyan","red",null,"magenta","blue",null,"u",-5,5,0,"v",-4,4,1,"u*v","abs(u)+abs(v)","u**2+v*3","cv2",false,"green","white",null,"red","yellow",null,"u",-7,6,1.2,"v",-4,5,1,"v","u","u/v", "cv 3", false, "pink", "gray", null, "green", "yellow", null, "u", -5, 5, 1, "v", -4, 4, 1, "u", "v", "u**2 - v**2","cv4",true,"blue","ltgray",-2,"white","red",2,"u",-7,8,1,"v",4,29,0,"v/u","v*u","2*u*v/(u**2+v**2)","cv 5",true,"red","magenta",null,"blue","cyan",null,"u",-5,5,0,"v",-4,4,1,"u*v","abs(u)+abs(v)","(u**2+v*3)*1.5","cv6",false,"white","red",null,"yellow","green",null,"u",-7,6,1.2,"v",-4,5,1,"v","u","u/v*1.5", "cv 7", false, "gray", "yellow", null, "pink", "green", null, "u", -5, 5, 1, "v", -4, 4, 1, "u", "v", "(u**2 - v**2)*1.5")
	plot_3d_surfaces("chart b","b Chart","x axis","y axis","z axis","cv 1",true,"cyan","red",null,"magenta","blue",null,"u",-5,5,0,"v",-4,4,1,"u*v","abs(u)+abs(v)","u**2+v*3","cv2",false,"green","white",null,"red","yellow",null,"u",-7,6,1.2,"v",-4,5,1,"v","u","u/v", "cv 3", false, "pink", "gray", null, "green", "yellow", null, "u", -5, 5, 1, "v", -4, 4, 1, "u", "v", "u**2 - v**2","cv4",true,"blue","ltgray",-2,"white","red",2,"u",-7,8,1,"v",4,29,0,"v/u","v*u","2*u*v/(u**2+v**2)","cv 5",true,"red","magenta",null,"blue","cyan",null,"u",-5,5,0,"v",-4,4,1,"u*v","abs(u)+abs(v)","(u**2+v*3)*1.5","cv6",false,"white","red",null,"yellow","green",null,"u",-7,6,1.2,"v",-4,5,1,"v","u","u/v*1.5", "cv 7", false, "gray", "yellow", null, "pink", "green", null, "u", -5, 5, 1, "v", -4, 4, 1, "u", "v", "(u**2 - v**2)*1.5", "cv8",true, "red", "blue",-2, "ltgray", "pink",2, "u",-7,8,1, "v",4,29,0,"v/u","v*u", "2.5*u*v/(u**2+v**2)")
	plot_3d_surfaces("Oriental_Pearl_Tower","Oriental Pearl Tower","x","y","z", _
	"",false,"red","red",null,"yellow","yellow",null,"u",0,2,0.25,"v",0,20,20,"3*cos(u*pi)-(20-v)*sqrt(3)/2","3*sin(u*pi)+(20-v)/2","v", _ //Plot the 1st supporting leaning pillar（绘制底部第一根支撑斜柱体）
	"",false,"green","green",null,"cyan","cyan",null,"u",0,2,0.25,"v",0,20,20,"3*cos(u*pi)","3*sin(u*pi)-(20-v)*sqrt(3)/2","v", _ //Plot the 2nd supporting leaning pillar（绘制底部第二根支撑斜柱体）
	"",false,"blue","blue",null,"magenta","magenta",null,"u",0,2,0.25,"v",0,20,20,"3*cos(u*pi)+(20-v)*sqrt(3)/2","3*sin(u*pi)+(20-v)/2","v", _ //Plot the 3rd supporting leaning pillar（绘制底部第三根支撑斜柱体）
	"",false,"white","white",null,"dkgray","dkgray",null,"u",-1,1,0.25,"v",0,20,20,"cos(u*pi)*2","sin(u*pi)*2","v", _ //plot connection column（绘制连接柱）
	"",false,"red","red",null,"cyan","cyan",null,"u",-pi,pi,pi/10,"v",-pi/2,pi/2,pi/10,"10*cos(u)*cos(v)","10*sin(u)*cos(v)","10*sin(v)+20", _	//plot the big ball（绘制大球）
	"",false,"magenta","magenta",null,"green","green",null,"u",0,2,0.25,"v",20,70,50,"1.5*cos(u*pi)-2","1.5*sin(u*pi)+2/sqrt(3)","v", _ //plot the 1st connection column between the big ball and the small ball（绘制大球和小球之间的第一根连接柱）
	"",false,"red","red",null,"blue","blue",null,"u",0,2,0.25,"v",20,70,50,"1.5*cos(u*pi)","1.5*sin(u*pi)- 4/sqrt(3)","v", _ //plot the 2nd connection column between the big ball and the small ball（绘制大球和小球之间的第二根连接柱）
	"",false,"yellow","yellow",null,"cyan","cyan",null,"u",0,2,0.25,"v",20,70,50,"1.5*cos(u*pi)+2","1.5*sin(u*pi)+2/sqrt(3)","v", _ //plot the 3rd connection column between the big ball and the small ball（绘制大球和小球之间的第三根连接柱）
	"",false,"magenta","magenta",null,"white","white",null,"u",-pi,pi,pi/10,"v",-pi/2,pi/2,pi/10,"6*cos(u)*cos(v)","6*sin(u)*cos(v)","6*sin(v)+70", _ //plot the small（绘制小球）
	"",false,"yellow","yellow",null,"green","green",null,"u",0,2,0.25,"v",70,85,15,"cos(u*pi)*1.5","sin(u*pi)*1.5","v", _ //plot another column above the small ball（绘制小球上部的立柱）
	"",false,"red","red",null,"cyan","cyan",null,"u",-pi,pi,pi/10,"v",-pi/2,pi/2,pi/10,"2*cos(u)*cos(v)","2*sin(u)*cos(v)","2*sin(v)+85", _ //Plot the smaller ball（绘制更小的球）
	"",false,"red","red",null,"ltgray","ltgray",null,"u",-1,1,0.2,"v",85,115,10,"0.5*max(0.2,(115-v)/30)*cos(u*pi)","0.5*max(0.2,(115-v)/30)*sin(u*pi)","v") //Plot the antenna on top（绘制顶部天线）

endf


function plot_implicit_func_reg1()
	variable var1
	plot_exprs("a**2+b**2+c**2==16","a+c+b==1")
	
	plot_exprs("a+b+c==1")

	plot_exprs("a**2+b**2== 4", "a+b== 2")

	try 
	plot_exprs("a**2+b**2+c**2==16","a**3+c**3==b**3-1")	// too many curves
	catch((var1 = info) == info)
	print("\n\nplot_exprs(\"a**2+b**2+c**2==16\",\"a**3+c**3==b**3-1\") throws an exception which is " + var1 + "\n")
	endtry

	plot_exprs("a**3+c**3==b**3-1")

	plot_exprs("x**3*y+y**2*x==y/x+y**3+9")

	try
	plot_exprs("(x**3+y**2-2*x+9)/(y**3-x**2+6)==4")	// cannot solve.
	catch((var1 = info) == info)
	print("\n\nplot_exprs(\"(x**3+y**2-2*x+9)/(y**3-x**2+6)==4\") throws an exception which is " + var1 + "\n")
	endtry

	plot_exprs("(x**3+y**2*x**2-2*x+9+4*x-x/3.71)/(y**3-y**2+6)==4")

	plot_exprs("log(x)+sin(x**2)==cos(y**2)")

	plot_exprs("1+sin(x**2)==cos(y**2)")

	plot_exprs("+sin(x**2)==cos(y**2)")

	plot_exprs("x**3+3*x**2*y+3*y**2*x+y**3==0")
endf

function plot_implicit_func_reg2()
	plot_exprs("x**3+y**2-3*x**2==7+y**3+y")
	
	plot_exprs("(x**3+y**2*x)/z**3 == y**3")

	plot_exprs("(x**3+y**2*x)\\(z**3 + y*z*x) == y**3")

	plot_exprs("(-x**3+6*y**2*x)\\(-z**3 + y*z*x) == -y**3")

	plot_exprs("exp(x*y)/(-x**2-x-9) == (x+z*x)")

	plot_exprs("exp(y)/x==x+z")

	plot_exprs("exp(x*y)/(-x**2-x-9) == (x+z**x)")

	plot_exprs("log(y*x)/log2(z) == x+ y")

	plot_exprs("sqrt(x**2)+x**3==y*x*atanh(y) + 9")
endf

function plot_implicit_func_reg3()
	plot_exprs("invert(-y**2+y-1)*x**3+y*x**2-x*sinh(y) == 6")

	plot_exprs("tan(x**2/(y+x+9)) == x**3+0.5*x**-0.5")

	plot_exprs("tanh(x**2/(y+x+9)) == x**3+0.5*x**-0.5")

	plot_exprs("cosd(x**2+y**2 + z**2) == (x + y) * 0.05")

	plot_exprs("todeg(x**2/(y**2+2*y-y**3)) == (x+z)/(x+y)")

	plot_exprs("x*log10(x) == y**2 - x")

	plot_exprs("x*left_recip(x) == y**2 - x")

	plot_exprs("x*acos(x) == y**2 - x")
	
	plot_exprs("exp(x**2)*cos(θ**2) == x-x + θ**2")
endf

function plot_implicit_func_reg4()
	plot_exprs("x**3*y**3+3*x**2*y**2+3*y*x+1==0")	// singular point

	plot_exprs("x*y**2==3+y")

	plot_exprs("x*cos(θ) == x + θ")

	plot_exprs("sqrt(x**2)+x**3==y*x*acos(y**z) + 9")

	plot_exprs("invert([[1,2],[3,4]])[0,1]*x**3+y*x**2-x*sinh(y) == 6")

	plot_exprs("x*atan(x) == y**2 - x")

	plot_exprs("x*acosh(x) == y**2 - x")

	plot_exprs("x*atanh(x) == y**2 - x")

	plot_exprs("(sin(x + log(x))**3+1)**2 + (y**-2 - 1)**3== 9")
endf

function teststatement()
	variable a=5, b="hello", c=[5,6]
	if(a==5)
		print("\na == 5 is true")
	endif
	if[5,6]!=c
		print("\n[5,6]!=c is false")
	elseif[5,6][1]==6
		variable d = "h"
		while"hhh" != d
			d = d+"h"
		loop
		print("\nafter while loop d is " + d)
		do
			d = d + "k"
		until"hhhkk"==d
		print("\nafter do loop d is " + d)
	endif
	select(b)
	case[2,[8,9]]
		print("\nb is [2, [8,9]]")
		break
	case(3)
		print("\nb is 3")
		break
	case"hello"
		print("\nb is string hello")
		break
	ends
	b=[2,[8,9]]
	select(b)
	case[2,[8,9]]
		print("\nb is [2, [8,9]]")
		break
	case(3)
		print("\nb is 3")
		break
	case"hello"
		print("\nb is string hello")
		break
	ends
	b=3
	select[3][0]
	case[2,[8,9]]
		print("\n[3][0] is [2, [8,9]]")
		break
	case(b)
		print("\n[3][0] is b")
		break
	case"hello"
		print("\n[3][0] is string hello")
		break
	ends
	
	try
		throw"throw 1"
	catch(b=info)==info
		print("\nIn the first throw info is " + b)
	endtry
	
	try
		throw["throw2"][0]
	catch(b=info)==info
		print("\nIn the second throw info is " + b)
	endtry
	
	try
		throw(["throw3"][0])
	catch(b=info)==info
		print("\nIn the third throw info is " + b)
	endtry
	
	variable int2bool1, int2bool2
	int2bool1 = 5
	int2bool2 = int2bool1
	if int2bool1
		print ("\nint2bool1 is " + int2bool1 + "\nint2bool2 is " + int2bool2 + "\n")
	endif
	
	if !int2bool2
	elseif int2bool1
		print ("\nint2bool1 is " + int2bool1 + "\nint2bool2 is " + int2bool2 + "\n")
	endif
	
	print("\nin while loop:\n")
	while int2bool1
		print ("int2bool1 is " + int2bool1 + "\nint2bool2 is " + int2bool2 + "\n")
		int2bool1 = int2bool1 - 1
	loop
	
	print("\nin do loop:\n")
	int2bool2 = -1
	do
		print ("int2bool1 is " + int2bool1 + "\nint2bool2 is " + int2bool2 + "\n")
		int2bool2 = int2bool2 + 1
	until int2bool2
endf

function test_time_date()
	variable var1
	print("\n\nget_time_stamp(\"1970-01-01 00:00:00.0\") = " + get_time_stamp("1970-01-01 00:00:00.0"))

	try
		print("\n\nget_time_stamp(\"1960-13-01 00:00:00.0\") = " + get_time_stamp("1960-13-01 00:00:00.0"))
	catch  (var1 = info) == info
		print("\n\nget_time_stamp(\"1960-13-01 00:00:00.0\") throws an exception")
	endtry

	try
		print("\n\nget_time_stamp(\"1960-13-781 00:00:00.0\") = ")
		print(get_time_stamp("1960-13-781 00:00:00.0"))
	catch  (var1 = info) == info
		print("throws an exception")
	endtry

	try
		print("\n\nget_time_stamp(\"1980-12-781 00:00:00.0\") = ")
		print(get_time_stamp("1980-12-781 00:00:00.0"))
	catch  (var1 = info) == info
		print("throws an exception")
	endtry

	try
		print("\n\nget_time_stamp(\"1980-12-701 00:00:00.0\") = ")
		print(get_time_stamp("1980-12-701 00:00:00.0"))
	catch  (var1 = info) == info
		print("throws an exception")
	endtry

	try
		print("\n\nget_time_stamp(\"1980-12-71 00:00:00.0\") = ")
		print(get_time_stamp("1980-12-71 00:00:00.0"))
	catch  (var1 = info) == info
		print("throws an exception")
	endtry

	try
		print("\n\nget_time_stamp(\"1980-12-171 00:00:00.0\") = ")
		print(get_time_stamp("1980-12-171 00:00:00.0"))
	catch  (var1 = info) == info
		print("throws an exception")
	endtry

	try
		print("\n\nget_time_stamp(\"1980-12-100 00:00:00.0\") = ")
		print(get_time_stamp("1980-12-100 00:00:00.0"))
	catch  (var1 = info) == info
		print("throws an exception")
	endtry

	try
		print("\n\nget_time_stamp(\"1980-12-71 00:00:00.0\") = ")
		print(get_time_stamp("1980-12-71 00:00:00.0"))
	catch  (var1 = info) == info
		print("throws an exception")
	endtry

	try
		print("\n\nget_time_stamp(\"1980-12-99 00:00:00.0\") = ")
		print(get_time_stamp("1980-12-99 00:00:00.0"))
	catch  (var1 = info) == info
		print("throws an exception")
	endtry

	try
		print("\n\nget_time_stamp(\"1980-99-99 00:00:00.0\") = ")
		print(get_time_stamp("1980-99-99 00:00:00.0"))
	catch  (var1 = info) == info
		print("throws an exception")
	endtry

	try
		print("\n\nget_time_stamp(\"1980-100-99 00:00:00.0\") = ")
		print(get_time_stamp("1980-100-99 00:00:00.0"))
	catch  (var1 = info) == info
		print("throws an exception")
	endtry

	printf("\n\nnow year = %d, month = %d, day of year = %d, day of month = %d, day of week = %d, hour = %d, minute = %d, second = %d, ms = %d", get_year(now()), get_month(now()), get_day_of_year(now()), get_day_of_month(now()), get_day_of_week(now()), _
		get_hour(now()), get_minute(now()), get_second(now()), get_millisecond(now()))

	print("\n\nget_millisecond(get_time_stamp(2015, 3, 8, 21, 22, 9, 7)) = " + get_millisecond(get_time_stamp(2015, 3, 8, 21, 22, 9, 7)))

	print("\n\nget_millisecond(get_time_stamp(2015, 3, 8, 21, 22, 9, 70)) = " + get_millisecond(get_time_stamp(2015, 3, 8, 21, 22, 9, 70)))

	print("\n\nget_millisecond(get_time_stamp(2015, 3, 8, 21, 22, 9, 700)) = " + get_millisecond(get_time_stamp(2015, 3, 8, 21, 22, 9, 700)))

	print("\n\nget_millisecond(get_time_stamp(2015, 3, 8, 21, 22, 9, 7000)) = " + get_millisecond(get_time_stamp(2015, 3, 8, 21, 22, 9, 7000)))

	print("\n\nget_second(get_time_stamp(2015, 3, 8, 21, 22, 9, 700)) = " + get_second(get_time_stamp(2015, 3, 8, 21, 22, 9, 700)))

	print("\n\nget_second(get_time_stamp(2015, 3, 8, 21, 22, 19, 700)) = " + get_second(get_time_stamp(2015, 3, 8, 21, 22, 19, 700)))

	print("\n\nget_second(get_time_stamp(2015, 3, 8, 21, 22, 29, 700)) = " + get_second(get_time_stamp(2015, 3, 8, 21, 22, 29, 700)))

	print("\n\nget_second(get_time_stamp(2015, 3, 8, 21, 22, 99, 700)) = " + get_second(get_time_stamp(2015, 3, 8, 21, 22, 99, 700)))

	try
		print("\n\nget_second(get_time_stamp(2015, 3, 8, 21, 22, -99, 700)) = " + get_second(get_time_stamp(2015, 3, 8, 21, 22, -99, 700)))
	catch  (var1 = info) == info
		print("\n\nget_second(get_time_stamp(2015, 3, 8, 21, 22, -99, 700)) throws an exception")
	endtry

	print("\n\nget_second(get_time_stamp(2015, 3, 8, 21, 22, 299, 700)) = " + get_second(get_time_stamp(2015, 3, 8, 21, 22, 299, 700)))

	try
		print("\n\nget_second(get_time_stamp(2015, 139, 8, 21, 22, 9, 700)) = ")
		print(get_second(get_time_stamp(2015, 139, 8, 21, 22, 9, 700)))
	catch  (var1 = info) == info
		print("throws an exception")
	endtry

	try
		print("\n\nget_second(get_time_stamp(2015, 19, 8, 21, 22, 9, 700)) = ")
		print(get_second(get_time_stamp(2015, 19, 8, 21, 22, 9, 700)))
	catch  (var1 = info) == info
		print("throws an exception")
	endtry

	try
		print("\n\nget_second(get_time_stamp(12015, 19, 8, 21, 22, 9, 700)) = ")
		print(get_second(get_time_stamp(12015, 19, 8, 21, 22, 9, 700)))
	catch  (var1 = info) == info
		print("throws an exception")
	endtry

	try
		print("\n\nget_year(get_time_stamp(3015, 19, 8, 21, 22, 9, 700)) = ")
		print(get_year(get_time_stamp(3015, 19, 8, 21, 22, 9, 700)))
	catch  (var1 = info) == info
		print("throws an exception")
	endtry

	print("\n\nget_year(get_time_stamp(3015, 12, 8, 21, 22, 9, 700)) = " + get_year(get_time_stamp(3015, 12, 8, 21, 22, 9, 700)))

	print("\n\nget_year(get_time_stamp(2014, 12,15, 16, 58, 9, 700)) = " + get_year(get_time_stamp(2014, 12,15, 16, 58, 9, 700)))

	print("\n\nget_day_of_week(get_time_stamp(2014, 12,15, 16, 58, 9, 700)) = " + get_day_of_week(get_time_stamp(2014, 12,15, 16, 58, 9, 700)))

	print("\n\nget_day_of_year(get_time_stamp(2014, 12,15, 16, 58, 9, 700)) = " + get_day_of_year(get_time_stamp(2014, 12,15, 16, 58, 9, 700)))

	print("\n\nget_second(get_time_stamp(2014, 12,15, 16, 58, 9, 700)) = " + get_second(get_time_stamp(2014, 12,15, 16, 58, 9, 700)))

	try
		print("\n\nget_hour(get_time_stamp(2014, 12,15, 116, 58, 9, 700)) = " + get_hour(get_time_stamp(2014, 12,15, 116, 58, 9, 700)))
	catch  (var1 = info) == info
		print("\n\nget_hour(get_time_stamp(2014, 12,15, 116, 58, 9, 700)) throws an exception")
	endtry

	try
		print("\n\nget_month(get_time_stamp(2014, 17,15, 116, 58, 9, 700)) = ")
		print(get_month(get_time_stamp(2014, 17,15, 116, 58, 9, 700)))
	catch  (var1 = info) == info
		print("throws an exception")
	endtry

	print("\n\nget_day_of_month(get_time_stamp(2001, 2,29, 16, 58, 9, 700)) = " + get_day_of_month(get_time_stamp(2001, 2,29, 16, 58, 9, 700)))

	print("\n\nget_month(get_time_stamp(2001, 2,29, 16, 58, 9, 700)) = " + get_month(get_time_stamp(2001, 2,29, 16, 58, 9, 700)))

	print("\n\nget_day_of_month(get_time_stamp(2000, 2,29, 16, 58, 9, 700)) = " + get_day_of_month(get_time_stamp(2000, 2,29, 16, 58, 9, 700)))

	print("\n\nget_month(get_time_stamp(2000, 2,29, 16, 58, 9, 700)) = " + get_month(get_time_stamp(2000, 2,29, 16, 58, 9, 700)))

	print("\n\nget_day_of_month(get_time_stamp(2001, 2,28, 16, 58, 9, 700)) = " + get_day_of_month(get_time_stamp(2001, 2,28, 16, 58, 9, 700)))

	print("\n\nget_month(get_time_stamp(2001, 2,28, 16, 58, 9, 700)) = " + get_month(get_time_stamp(2001, 2,28, 16, 58, 9, 700)))

endf

citingspace test_hash_space
class HashCodeTestClass0
endclass

class HashCodeTestClass1
	variable self a = [1,2,3]
endclass

function test_hash_code()
	variable a
	print_line("hash_code(1.0/3.0+2.0/3.0) = " + hash_code(1.0/3.0+2.0/3.0))
	print_line("hash_code(ceil(2**16)) = " + hash_code(ceil(2**16)))
	a = 2**16
	print_line("After a = 2**16, hash_code(a) = " + hash_code(a))
	print_line("hash_code([1, [2, 5], 3-4i, \"Hello\"]) = " + hash_code([1, [2, 5], 3-4i, "Hello"]))
	a = alloc_array(4)
	a[0] = 1
	a[1] = [2, 5]
	a[2] = 3-4i
	a[3] = "Hel" + "lo"
	print_line("After a's setting, hash_code(a) = " + hash_code(a))
	print_line("hash_code(\"Hello\") = " + hash_code("Hello"))
	print_line("hash_code(a[3]) = " + hash_code(a[3]))
	print_line("hash_code(\"Hel\" + \"lo\") = " + hash_code("Hel" + "lo"))
	a = HashCodeTestClass0()
	print_line("After a = HashCodeTestClass0()")
	print_line("a.__hash__() = " + a.__hash__())
	print_line("hash_code(a) = " + hash_code(a))
	print_line("hash_code(a.__copy__()) = " + hash_code(a.__copy__()))
	print_line("hash_code(a.__deep_copy__()) = " + hash_code(a.__deep_copy__()))
	print_line("hash_code(clone(a)) = " + hash_code(clone(a)))
	a = HashCodeTestClass1()
	print_line("After a = HashCodeTestClass1()")
	print_line("a.__hash__() = " + a.__hash__())
	print_line("hash_code(a) = " + hash_code(a))
	print_line("hash_code(a.__copy__()) = " + hash_code(a.__copy__()))
	print_line("hash_code(a.__deep_copy__()) = " + hash_code(a.__deep_copy__()))
	print_line("hash_code(clone(a)) = " + hash_code(clone(a)))
	variable b = a.__copy__()
	variable c = clone(a)
	print_line("After b = a.__copy__() and c = clone(a)")
	print_line("hash_code(b) = " + hash_code(b))
	print_line("hash_code(c) = " + hash_code(c))
	a.a[2] = 9
	print_line("After a.a[2] = 9")
	print_line("a.a = " + a.a)
	print_line("b.a = " + b.a)
	print_line("c.a = " + c.a)
	a.a = 81
	print_line("After a.a = 81")
	print_line("a.a = " + a.a)
	print_line("b.a = " + b.a)
	print_line("c.a = " + c.a)
endf

endcs